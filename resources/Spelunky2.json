{
  // a mapping of entity type to its parent type
  "entity_class_hierarchy": {
    "Movable": "Entity",
    "PowerupCapable": "Movable",
    "Monster": "PowerupCapable",
    "Player": "PowerupCapable",
    "Arrowtrap": "Floor",
    "Container": "Movable",
    "Gun": "Purchasable",
    "CrushTrap": "Movable",
    "Mattock": "Purchasable",
    "Bomb": "Movable",
    "Olmec": "Movable",
    "OlmecFloater": "Movable",
    "Cape": "Backpack",
    "YellowCape": "Cape",
    "VladsCape": "Cape",
    "Powerup": "Movable",
    "KapalaPowerup": "Powerup",
    "Jiangshi": "Monster",
    "Ghost": "Monster",
    "Monkey": "Monster",
    "GoldMonkey": "Monster",
    "Mole": "Monster",
    "Spider": "Monster",
    "HangSpider": "Monster",
    "RoomOwner": "Monster",
    "Shopkeeper": "RoomOwner",
    "Yang": "RoomOwner",
    "Pet": "Monster",
    "WalkingMonster": "Monster",
    "CavemanShopkeeper": "WalkingMonster",
    "HornedLizard": "Monster",
    "Mosquito": "Monster",
    "Mantrap": "Monster",
    "Skeleton": "Monster",
    "Scarab": "Monster",
    "Tun": "RoomOwner",
    "Imp": "Monster",
    "Lavamander": "Monster",
    "Firebug": "Monster",
    "FirebugUnchained": "Monster",
    "Robot": "WalkingMonster",
    "Quillback": "WalkingMonster",
    "Leprechaun": "WalkingMonster",
    "Crocman": "WalkingMonster",
    "Mummy": "Monster",
    "NPC": "Monster",
    "VanHorsing": "NPC",
    "WitchDoctor": "WalkingMonster",
    "WitchDoctorSkull": "Monster",
    "ForestSister": "NPC",
    "Vampire": "Monster",
    "Vlad": "Vampire",
    "Waddler": "RoomOwner",
    "Octopus": "WalkingMonster",
    "Bodyguard": "NPC",
    "Fish": "Monster",
    "GiantFish": "Monster",
    "Crabman": "Monster",
    "Kingu": "Monster",
    "Anubis": "Monster",
    "Cobra": "Monster",
    "CatMummy": "Monster",
    "Sorceress": "WalkingMonster",
    "MagmaMan": "Monster",
    "Bee": "Monster",
    "Ammit": "Monster",
    "ApepPart": "Monster",
    "ApepHead": "ApepPart",
    "OsirisHead": "Monster",
    "OsirisHand": "Monster",
    "Alien": "Monster",
    "UFO": "Monster",
    "Lahamu": "Monster",
    "YetiQueen": "Monster",
    "YetiKing": "Monster",
    "Lamassu": "Monster",
    "Olmite": "WalkingMonster",
    "Tiamat": "Monster",
    "GiantFrog": "Monster",
    "Frog": "Monster",
    "FireFrog": "Frog",
    "Grub": "Monster",
    "Tadpole": "Monster",
    "GiantFly": "Monster",
    "Ghist": "Monster",
    "JumpDog": "Monster",
    "EggplantMinister": "Monster",
    "Yama": "Monster",
    "Hundun": "Monster",
    "HundunHead": "Monster",
    "MegaJellyfish": "Monster",
    "Scorpion": "Monster",
    "Hermitcrab": "Monster",
    "Necromancer": "WalkingMonster",
    "ProtoShopkeeper": "Monster",
    "Beg": "NPC",
    "Critter": "Monster",
    "CritterButterfly": "Critter",
    "CritterCrab": "Critter",
    "CritterLocust": "Critter",
    "CritterSnail": "Critter",
    "CritterFish": "Critter",
    "CritterPenguin": "Critter",
    "CritterFirefly": "Critter",
    "CritterDrone": "Critter",
    "CritterSlime": "Critter",
    "Mount": "PowerupCapable",
    "Rockdog": "Mount",
    "Axolotl": "Mount",
    "Mech": "Mount",
    "Qilin": "Mount",
    "Altar": "Floor",
    "Ushabti": "Movable",
    "Generator": "Floor",
    "ForceField": "Floor",
    "TimedForceField": "ForceField",
    "HorizontalForceField": "Floor",
    "StickyTrap": "Floor",
    "SpikeballTrap": "Floor",
    "SlidingWallCeiling": "Floor",
    "Projectile": "Movable",
    "Backpack": "Movable",
    "Jetpack": "Backpack",
    "TeleporterBackpack": "Backpack",
    "Hoverpack": "Backpack",
    "Elevator": "Movable",
    "Boulder": "Movable",
    "Drill": "Movable",
    "UdjatSocket": "Movable",
    "PushBlock": "Movable",
    "TeleportingBorder": "Floor",
    "WoodenlogTrap": "Movable",
    "BoneBlock": "Movable",
    "TimedPowderkeg": "PushBlock",
    "ChainedPushBlock": "PushBlock",
    "LightArrowPlatform": "Movable",
    "FallingPlatform": "Movable",
    "TrapPart": "Movable",
    "UnchainedSpikeBall": "Movable",
    "ThinIce": "Movable",
    "ClamBase": "Movable",
    "RegenBlock": "Movable",
    "GiantClamTop": "Movable",
    "CookFire": "Torch",
    "Floor": "Entity",
    "Door": "Floor",
    "ExitDoor": "Door",
    "DecoratedDoor": "ExitDoor",
    "LockedDoor": "Door",
    "CityOfGoldDoor": "DecoratedDoor",
    "MainExit": "ExitDoor",
    "EggShipDoor": "Door",
    "TotemTrap": "Floor",
    "BigSpearTrap": "Floor",
    "LaserTrap": "Floor",
    "SparkTrap": "Floor",
    "TransferFloor": "Floor",
    "ConveyorBelt": "TransferFloor",
    "QuickSand": "Floor",
    "Pipe": "Floor",
    "MotherStatue": "Floor",
    "TentacleBottom": "Floor",
    "Flame": "Movable",
    "FlameSize": "Flame",
    "TorchFlame": "Flame",
    "LampFlame": "Flame",
    "PoleDeco": "Floor",
    "PunishBall": "Movable",
    "Chest": "Movable",
    "LiquidSurface": "Movable",
    "Liquid": "Entity",
    "Lava": "Liquid",
    "ClimbableRope": "Movable",
    "Pot": "Purchasable",
    "Coffin": "Movable",
    "SpecialShot": "LightEmitter",
    "Idol": "Movable",
    "Spear": "Movable",
    "JungleSpearCosmetic": "Movable",
    "WebShot": "Projectile",
    "LightEmitter": "Movable",
    "HangAnchor": "Movable",
    "HangStrand": "Movable",
    "Arrow": "Purchasable",
    "LightArrow": "Arrow",
    "LightShot": "Projectile",
    "ScepterShot": "LightEmitter",
    "SoundShot": "LightShot",
    "TimedShot": "LightShot",
    "CloneGunShot": "LightShot",
    "Bullet": "Projectile",
    "Spark": "Flame",
    "TiamatShot": "LightEmitter",
    "Fireball": "SoundShot",
    "Leaf": "Movable",
    "AcidBubble": "Movable",
    "Claw": "Movable",
    "StretchChain": "Movable",
    "Treasure": "Movable",
    "HundunChest": "Treasure",
    "Boombox": "Movable",
    "TV": "Movable",
    "Telescope": "Movable",
    "Torch": "Movable",
    "WallTorch": "Torch",
    "Chain": "Movable",
    "Fly": "Movable",
    "OlmecCannon": "Movable",
    "OlmecShip": "Movable",
    "Landmine": "LightEmitter",
    "Honey": "Movable",
    "PlayerGhost": "LightEmitter",
    "GhostBreath": "Projectile",
    "PlayerBag": "Movable",
    "LaserBeam": "Movable",
    "TreasureHook": "Movable",
    "AxolotlShot": "Projectile",
    "SkullDropTrap": "Movable",
    "FrozenLiquid": "Movable",
    "Switch": "Movable",
    "FlyHead": "Movable",
    "SnapTrap": "Movable",
    "EmpressGrave": "Movable",
    "Tentacle": "Chain",
    "MiniGameShip": "Movable",
    "MiniGameAsteroid": "Movable",
    "CursedPot": "Movable",
    "Orb": "Movable",
    "EggSac": "Movable",
    "Goldbar": "Movable",
    "Coin": "Movable",
    "RollingItem": "Purchasable",
    "ParachutePowerup": "Powerup",
    "TrueCrownPowerup": "Powerup",
    "AnkhPowerup": "Powerup",
    "Teleporter": "Purchasable",
    "Boomerang": "Purchasable",
    "Excalibur": "Movable",
    "Shield": "Purchasable",
    "Bat": "Monster",
    "Terra": "Monster",
    "CritterBeetle": "Critter",
    "Caveman": "WalkingMonster",
    "EggshipCenterJetFlame": "Movable",
    "MiniGameShipOffset": "Movable",
    "Button": "Movable",
    "FxTornJournalPage": "Movable",
    "FxMainExitDoor": "Movable",
    "Birdies": "Movable",
    "Explosion": "Movable",
    "FxOuroboroOccluder": "Movable",
    "FxOuroboroDragonPart": "Movable",
    "Rubble": "Movable",
    "FxCompass": "Movable",
    "Portal": "Entity",
    "SleepBubble": "Movable",
    "MovingIcon": "Movable",
    "FxSaleContainer": "Movable",
    "FxPickupEffect": "Movable",
    "FxShotgunBlast": "Movable",
    "FxJetpackFlame": "Movable",
    "FxPlayerIndicator": "Movable",
    "FxSpringtrapRing": "Movable",
    "FxWitchdoctorHint": "Movable",
    "FxNecromancerANKH": "Movable",
    "FxWebbedEffect": "Movable",
    "FxUnderwaterBubble": "Movable",
    "FxWaterDrop": "Movable",
    "FxKinguSliding": "Movable",
    "FxAlienBlast": "Movable",
    "FxSparkSmall": "Movable",
    "FxTiamatHead": "Movable",
    "FxTiamatTorso": "Movable",
    "FxTiamatTail": "Movable",
    "FxVatBubble": "Movable",
    "FxHundunNeckPiece": "Movable",
    "FxJellyfishStar": "Movable",
    "FxQuickSand": "Movable",
    "FxSorceressAttack": "Movable",
    "FxLamassuAttack": "Movable",
    "FxFireflyLight": "Movable",
    "FxEmpress": "Movable",
    "FxAnkhRotatingSpark": "Movable",
    "FxAnkhBrokenPiece": "Movable",
    "BGBackLayerDoor": "Entity",
    "BGSurfaceStar": "Entity",
    "BGRelativeElement": "Entity",
    "BGSurfaceLayer": "BGRelativeElement",
    "BGEggshipRoom": "Entity",
    "BGMovingStar": "BGSurfaceStar",
    "BGTutorialSign": "Entity",
    "ShootingStarSpawner": "Entity",
    "BGShootingStar": "BGRelativeElement",
    "BGShopEntrence": "Entity",
    "BGFloatingDebris": "BGSurfaceLayer",
    "BGShopKeeperPrime": "Entity",
    "LogicalDoor": "Entity",
    "LogicalStaticSound": "LogicalSound",
    "LogicalLiquidStreamSound": "LogicalStaticSound",
    "LogicalSound": "Entity",
    "LogicalTrapTrigger": "Entity",
    "JungleTrapTrigger": "LogicalTrapTrigger",
    "WetEffect": "Entity",
    "OnFireEffect": "Entity",
    "PoisonedEffect": "Entity",
    "CursedEffect": "Entity",
    "OuroboroCameraAnchor": "Entity",
    "OuroboroCameraZoomin": "Entity",
    "CinematicAnchor": "Entity",
    "BurningRopeEffect": "Entity",
    "DustWallApep": "Entity",
    "CameraFlash": "Entity",
    "RoomLight": "Entity",
    "LimbAnchor": "Entity",
    "LogicalConveyorbeltSound": "LogicalSound",
    "LogicalAnchovyFlock": "Entity",
    "MummyFliesSound": "LogicalSound",
    "QuickSandSound": "LogicalSound",
    "IceSlidingSound": "LogicalSound",
    "FrostBreathEffect": "Entity",
    "BoulderSpawner": "Entity",
    "PipeTravelerSound": "LogicalSound",
    "LogicalDrain": "Entity",
    "LogicalRegeneratingBlock": "Entity",
    "SplashBubbleGenerator": "Entity",
    "EggplantThrower": "Entity",
    "LogicalMiniGame": "Entity",
    "DMSpawning": "Entity",
    "DMAlienBlast": "Entity",
    "CrossBeam": "Entity",
    "PalaceSign": "Entity",
    "DecoRegeneratingBlock": "Entity",
    "DestructibleBG": "Entity",
    "EggShipDoorS": "EggShipDoor",
    "PrizeDispenser": "Movable",
    "JungleSpearTrap": "Floor",
    "MegaJellyfishEye": "Movable",
    "Bow": "Movable",
    "Purchasable": "Movable",
    "DummyPurchasableEntity": "Purchasable",
    "Present": "Purchasable"
  },
  // a mapping of a regular expression or full name of an entity to its type
  "default_entity_types": {
    "FLOOR_DOOR_ENTRANCE": "Door",
    "FLOOR_DOOR_EXIT": "ExitDoor",
    "FLOOR_DOOR_MAIN_EXIT": "MainExit",
    "FLOOR_DOOR_STARTING_EXIT": "ExitDoor",
    "FLOOR_DOOR_LOCKED.*": "LockedDoor",
    "FLOOR_DOOR_COG": "CityOfGoldDoor",
    "FLOOR_DOOR_EGGSHIP": "EggShipDoorS",
    "FLOOR_DOOR_EGGSHIP_.*": "EggShipDoor",
    "FLOOR_DOOR_EGGPLANT_WORLD": "DecoratedDoor",
    "FLOOR_DOOR_PLATFORM": "Floor",
    "FLOOR_DOOR_.*": "Door",
    "FLOOR_.*ARROW_TRAP": "Arrowtrap",
    "FLOOR_TOTEM_TRAP": "TotemTrap",
    "FLOOR_JUNGLE_SPEAR_TRAP": "JungleSpearTrap",
    "FLOOR_LION_TRAP": "TotemTrap",
    "FLOOR_LASER_TRAP": "LaserTrap",
    "FLOOR_SPARK_TRAP": "SparkTrap",
    "FLOOR_.*ALTAR": "Altar",
    "FLOOR_SPIKEBALL_CEILING": "SpikeballTrap",
    "FLOOR_CONVEYORBELT_.*": "ConveyorBelt",
    "FLOOR_.*_GENERATOR": "Generator",
    "FLOOR_SLIDINGWALL_CEILING": "SlidingWallCeiling",
    "FLOOR_QUICKSAND": "QuickSand",
    "FLOOR_PIPE": "Pipe",
    "FLOOR_BIGSPEAR_TRAP": "BigSpearTrap",
    "FLOOR_STICKYTRAP_CEILING": "StickyTrap",
    "FLOOR_MOTHER_STATUE": "MotherStatue",
    "FLOOR_TELEPORTINGBORDER": "TeleportingBorder",
    "FLOOR_HORIZONTAL_FORCEFIELD": "HorizontalForceField",
    "FLOOR_TIMED_FORCEFIELD": "TimedForceField",
    "FLOOR_.*FORCEFIELD": "ForceField",
    "FLOOR_CHALLENGE_.*": "ForceField",
    "FLOOR_TENTACLE_BOTTOM": "TentacleBottom",
    "FLOORSTYLED_MINEWOOD": "PoleDeco",
    "FLOORSTYLED_PAGODA": "PoleDeco",
    "DECORATION_CROSS_BEAM": "CrossBeam",
    "DECORATION_CHAINANDBLOCKS_CHAINDECORATION": "Movable",
    "DECORATION_SLIDINGWALL_CHAINDECORATION": "Movable",
    "DECORATION_DUAT_DESTRUCTIBLE_BG": "DestructibleBG",
    "DECORATION_PALACE_SIGN": "PalaceSign",
    "DECORATION_REGENERATING_SMALL_BLOCK": "DecoRegeneratingBlock",
    "DECORATION_REGENERATING_BORDER": "DecoRegeneratingBlock",
    "MONS_SPIDER": "Spider",
    "MONS_HANGSPIDER": "HangSpider",
    "MONS_GIANTSPIDER": "Spider",
    "MONS_BAT": "Bat",
    "MONS_CAVEMAN": "Caveman",
    "MONS_CAVEMAN_SHOPKEEPER": "CavemanShopkeeper",
    "MONS_SKELETON": "Skeleton",
    "MONS_REDSKELETON": "Skeleton",
    "MONS_SCORPION": "Scorpion",
    "MONS_HORNEDLIZARD": "HornedLizard",
    "MONS_MOLE": "Mole",
    "MONS_CAVEMAN_BOSS": "Quillback",
    "MONS_MANTRAP": "Mantrap",
    "MONS_TIKIMAN": "WalkingMonster",
    "MONS_WITCHDOCTOR": "WitchDoctor",
    "MONS_WITCHDOCTORSKULL": "WitchDoctorSkull",
    "MONS_MOSQUITO": "Mosquito",
    "MONS_MONKEY": "Monkey",
    "MONS_MAGMAMAN": "MagmaMan",
    "MONS_ROBOT": "Robot",
    "MONS_FIREBUG": "Firebug",
    "MONS_FIREBUG_UNCHAINED": "FirebugUnchained",
    "MONS_IMP": "Imp",
    "MONS_LAVAMANDER": "Lavamander",
    "MONS_VAMPIRE": "Vampire",
    "MONS_VLAD": "Vlad",
    "MONS_CROCMAN": "Crocman",
    "MONS_COBRA": "Cobra",
    "MONS_MUMMY": "Mummy",
    "MONS_SORCERESS": "Sorceress",
    "MONS_CATMUMMY": "CatMummy",
    "MONS_NECROMANCER": "Necromancer",
    "MONS_ANUBIS": "Anubis",
    "MONS_APEP_HEAD": "ApepHead",
    "MONS_APEP_BODY": "ApepPart",
    "MONS_APEP_TAIL": "ApepPart",
    "MONS_OSIRIS_HEAD": "OsirisHead",
    "MONS_OSIRIS_HAND": "OsirisHand",
    "MONS_ANUBIS2": "Anubis",
    "MONS_JIANGSHI": "Jiangshi",
    "MONS_FEMALE_JIANGSHI": "Jiangshi",
    "MONS_FISH": "Fish",
    "MONS_OCTOPUS": "Octopus",
    "MONS_HERMITCRAB": "Hermitcrab",
    "MONS_GIANTFISH": "GiantFish",
    "MONS_UFO": "UFO",
    "MONS_ALIEN": "Alien",
    "MONS_YETI": "WalkingMonster",
    "MONS_YETIKING": "YetiKing",
    "MONS_YETIQUEEN": "YetiQueen",
    "MONS_ALIENQUEEN": "Lahamu",
    "MONS_PROTOSHOPKEEPER": "ProtoShopkeeper",
    "MONS_SHOPKEEPERCLONE": "NPC",
    "MONS_LAMASSU": "Lamassu",
    "MONS_OLMITE_.*": "Olmite",
    "MONS_BEE": "Bee",
    "MONS_QUEENBEE": "Bee",
    "MONS_AMMIT": "Ammit",
    "MONS_KINGU": "Kingu",
    "MONS_TIAMAT": "Tiamat",
    "MONS_FROG": "Frog",
    "MONS_FIREFROG": "FireFrog",
    "MONS_GIANTFROG": "GiantFrog",
    "MONS_GRUB": "Grub",
    "MONS_TADPOLE": "Tadpole",
    "MONS_GIANTFLY": "GiantFly",
    "MONS_JUMPDOG": "JumpDog",
    "MONS_EGGPLANT_MINISTER": "EggplantMinister",
    "MONS_YAMA": "Yama",
    "MONS_HUNDUN": "Hundun",
    "MONS_HUNDUN_BIRDHEAD": "HundunHead",
    "MONS_HUNDUN_SNAKEHEAD": "HundunHead",
    "MONS_SCARAB": "Scarab",
    "MONS_SHOPKEEPER": "Shopkeeper",
    "MONS_MERCHANT": "Tun",
    "MONS_YANG": "Yang",
    "MONS_MARLA_TUNNEL": "Terra",
    "MONS_SISTER_.*": "ForestSister",
    "MONS_OLD_HUNTER": "VanHorsing",
    "MONS_THIEF": "NPC",
    "MONS_MADAMETUSK": "RoomOwner",
    "MONS_BODYGUARD": "Bodyguard",
    "MONS_HUNDUNS_SERVANT": "Beg",
    "MONS_STORAGEGUY": "Waddler",
    "MONS_GOLDMONKEY": "GoldMonkey",
    "MONS_LEPRECHAUN": "Leprechaun",
    "MONS_CRABMAN": "Crabman",
    "MONS_MEGAJELLYFISH": "MegaJellyfish",
    "MONS_MEGAJELLYFISH_BACKGROUND": "MegaJellyfish",
    "MONS_GHIST": "Ghist",
    "MONS_GHIST_SHOPKEEPER": "Ghist",
    "MONS_GHOST.*": "Ghost",
    "MONS_PET_.*": "Pet",
    "MONS_CRITTERDUNGBEETLE": "CritterBeetle",
    "MONS_CRITTERBUTTERFLY": "CritterButterfly",
    "MONS_CRITTERSNAIL": "CritterSnail",
    "MONS_CRITTERFISH": "CritterFish",
    "MONS_CRITTERANCHOVY": "Critter",
    "MONS_CRITTERCRAB": "CritterCrab",
    "MONS_CRITTERLOCUST": "CritterLocust",
    "MONS_CRITTERPENGUIN": "CritterPenguin",
    "MONS_CRITTERFIREFLY": "CritterFirefly",
    "MONS_CRITTERDRONE": "CritterDrone",
    "MONS_CRITTERSLIME": "CritterSlime",
    "ITEM_ROCK": "Purchasable",
    "ITEM_SKULL": "Purchasable",
    "ITEM_MACHETE": "Purchasable",
    "ITEM_WHIP_FLAME": "FlameSize",
    "ITEM_BOMB": "Bomb",
    "ITEM_PASTEBOMB": "Bomb",
    "ITEM_CLIMBABLE_ROPE": "ClimbableRope",
    "ITEM_UNROLLED_ROPE": "ClimbableRope",
    "ITEM_IDOL": "Idol",
    "ITEM_MADAMETUSK_IDOL": "Idol",
    "ITEM_TOTEM_SPEAR": "Spear",
    "ITEM_JUNGLE_SPEAR_COSMETIC": "JungleSpearCosmetic",
    "ITEM_LION_SPEAR": "Spear",
    "ITEM_BIG_SPEAR": "Spear",
    "ITEM_WEBSHOT": "WebShot",
    "ITEM_GIANTSPIDER_WEBSHOT": "Projectile",
    "ITEM_HANGSTRAND": "HangStrand",
    "ITEM_HANGANCHOR": "HangAnchor",
    "ITEM_WOODEN_ARROW": "Arrow",
    "ITEM_METAL_ARROW": "Arrow",
    "ITEM_LIGHT_ARROW": "LightArrow",
    "ITEM_PLASMACANNON_SHOT": "LightShot",
    "ITEM_SCEPTER_ANUBISSHOT": "ScepterShot",
    "ITEM_SCEPTER_ANUBISSPECIALSHOT": "SpecialShot",
    "ITEM_SCEPTER_PLAYERSHOT": "ScepterShot",
    "ITEM_UFO_LASER_SHOT": "SoundShot",
    "ITEM_LAMASSU_LASER_SHOT": "SoundShot",
    "ITEM_SORCERESS_DAGGER_SHOT": "LightShot",
    "ITEM_LASERTRAP_SHOT": "LightShot",
    "ITEM_SPARK": "Spark",
    "ITEM_TIAMAT_SHOT": "TiamatShot",
    "ITEM_FIREBALL": "Fireball",
    "ITEM_HUNDUN_FIREBALL": "Fireball",
    "ITEM_FLAMETHROWER_FIREBALL": "Flame",
    "ITEM_LEAF": "Leaf",
    "ITEM_CRABMAN_ACIDBUBBLE": "AcidBubble",
    "ITEM_CRABMAN_CLAW": "Claw",
    "ITEM_CRABMAN_CLAWCHAIN": "StretchChain",
    "ITEM_CHEST": "Chest",
    "ITEM_ENDINGTREASURE_TIAMAT": "Treasure",
    "ITEM_ENDINGTREASURE_HUNDUN": "HundunChest",
    "ITEM_CRATE": "Container",
    "ITEM_DMCRATE": "Container",
    "ITEM_BOOMBOX": "Boombox",
    "ITEM_TV": "TV",
    "ITEM_TELESCOPE": "Telescope",
    "ITEM_WALLTORCH": "WallTorch",
    "ITEM_WALLTORCHFLAME": "FlameSize",
    "ITEM_LITWALLTORCH": "WallTorch",
    "ITEM_AUTOWALLTORCH": "WallTorch",
    "ITEM_TORCH": "Torch",
    "ITEM_TORCHFLAME": "TorchFlame",
    "ITEM_LAMP": "Torch",
    "ITEM_LAMPFLAME": "LampFlame",
    "ITEM_REDLANTERN": "Torch",
    "ITEM_REDLANTERNFLAME": "LightEmitter",
    "ITEM_PRESENT": "Present",
    "ITEM_GHIST_PRESENT": "Present",
    "ITEM_BULLET": "Bullet",
    "ITEM_FREEZERAYSHOT": "TimedShot",
    "ITEM_CLONEGUNSHOT": "CloneGunShot",
    "ITEM_PUNISHBALL": "PunishBall",
    "ITEM_PUNISHCHAIN": "StretchChain",
    "ITEM_CHAIN": "Chain",
    "ITEM_CHAIN_LASTPIECE": "Chain",
    "ITEM_SLIDINGWALL_CHAIN": "Chain",
    "ITEM_SLIDINGWALL_CHAIN_LASTPIECE": "Chain",
    "ITEM_.*COFFIN": "Coffin",
    "ITEM_FLY": "Fly",
    "ITEM_OLMECCANNON_BOMBS": "OlmecCannon",
    "ITEM_OLMECCANNON_UFO": "OlmecCannon",
    "ITEM_OLMECSHIP": "OlmecShip",
    "ITEM_EGGSHIP": "OlmecShip",
    "ITEM_PARENTSSHIP": "OlmecShip",
    "ITEM_LANDMINE": "Landmine",
    "ITEM_UDJAT_SOCKET": "UdjatSocket",
    "ITEM_USHABTI": "Ushabti",
    "ITEM_HONEY": "Honey",
    "ITEM_GIANTCLAM_TOP": "GiantClamTop",
    "ITEM_PLAYERGHOST": "PlayerGhost",
    "ITEM_PLAYERGHOST_BREATH": "GhostBreath",
    "ITEM_DICE_PRIZE_DISPENSER": "PrizeDispenser",
    "ITEM_LASERBEAM": "LaserBeam",
    "ITEM_HORIZONTALLASERBEAM": "LaserBeam",
    "ITEM_EGGSHIP_HOOK": "TreasureHook",
    "ITEM_AXOLOTL_BUBBLESHOT": "AxolotlShot",
    "ITEM_STICKYTRAP_PIECE": "Chain",
    "ITEM_STICKYTRAP_LASTPIECE": "Chain",
    "ITEM_STICKYTRAP_BALL": "TrapPart",
    "ITEM_SKULLDROPTRAP": "SkullDropTrap",
    "ITEM_FROZEN_LIQUID": "FrozenLiquid",
    "ITEM_ALIVE_EMBEDDED_ON_ICE": "Container",
    "ITEM_SLIDINGWALL_SWITCH.*": "Switch",
    "ITEM_GIANTFLY_HEAD": "FlyHead",
    "ITEM_PALACE_CANDLE_FLAME": "LightEmitter",
    "ITEM_SNAP_TRAP": "SnapTrap",
    "ITEM_EMPRESS_GRAVE": "EmpressGrave",
    "ITEM_TENTACLE": "Tentacle",
    "ITEM_TENTACLE_.*": "Chain",
    "ITEM_MINIGAME_SHIP": "MiniGameShip",
    "ITEM_MINIGAME_.*ASTEROID.*": "MiniGameAsteroid",
    "ITEM_POT": "Pot",
    "ITEM_CURSEDPOT": "CursedPot",
    "ITEM_COOKFIRE": "CookFire",
    "ITEM_LAVAPOT": "LightEmitter",
    "ITEM_FLOATING_ORB": "Orb",
    "ITEM_EGGSAC": "EggSac",
    "ITEM_GOLDBAR.*": "Goldbar",
    "ITEM_GOLDCOIN": "Coin",
    "ITEM_CROSSBOW": "Bow",
    "ITEM_HOUYIBOW": "Bow",
    "ITEM_PICKUP_PLAYERBAG": "PlayerBag",
    "ITEM_PICKUP_12BAG": "PlayerBag",
    "ITEM_PICKUP_24BAG": "PlayerBag",
    "ITEM_PICKUP_.*": "RollingItem",
    "ITEM_POWERUP_KAPALA": "KapalaPowerup",
    "ITEM_POWERUP_PARACHUTE": "ParachutePowerup",
    "ITEM_POWERUP_TRUECROWN": "TrueCrownPowerup",
    "ITEM_POWERUP_ANKH": "AnkhPowerup",
    "ITEM_POWERUP_.*": "Powerup",
    "ITEM_CAPE": "YellowCape",
    "ITEM_VLADS_CAPE": "VladsCape",
    "ITEM_JETPACK.*": "Jetpack",
    "ITEM_TELEPORTER_BACKPACK": "TeleporterBackpack",
    "ITEM_HOVERPACK": "Hoverpack",
    "ITEM_POWERPACK": "Backpack",
    "ITEM_WEBGUN": "Gun",
    "ITEM_SHOTGUN": "Gun",
    "ITEM_FREEZERAY": "Gun",
    "ITEM_CAMERA": "Gun",
    "ITEM_TELEPORTER": "Teleporter",
    "ITEM_MATTOCK": "Mattock",
    "ITEM_BOOMERANG": "Boomerang",
    "ITEM_EXCALIBUR": "Excalibur",
    "ITEM_PLASMACANNON": "Gun",
    "ITEM_SCEPTER": "Gun",
    "ITEM_CLONEGUN": "Gun",
    "ITEM_WOODEN_SHIELD": "Shield",
    "ITEM_METAL_SHIELD": "Shield",
    "ITEM_PURCHASABLE_CAPE": "DummyPurchasableEntity",
    "ITEM_PURCHASABLE_JETPACK": "DummyPurchasableEntity",
    "ITEM_PURCHASABLE_TELEPORTER_BACKPACK": "DummyPurchasableEntity",
    "ITEM_PURCHASABLE_HOVERPACK": "DummyPurchasableEntity",
    "ITEM_PURCHASABLE_POWERPACK": "DummyPurchasableEntity",
    "ACTIVEFLOOR_WOODENLOG_TRAP": "WoodenlogTrap",
    "ACTIVEFLOOR_BOULDER": "Boulder",
    "ACTIVEFLOOR_PUSHBLOCK": "PushBlock",
    "ACTIVEFLOOR_BONEBLOCK": "BoneBlock",
    "ACTIVEFLOOR_POWDERKEG": "PushBlock",
    "ACTIVEFLOOR_CHAINEDPUSHBLOCK": "ChainedPushBlock",
    "ACTIVEFLOOR_LIGHTARROWPLATFORM": "LightArrowPlatform",
    "ACTIVEFLOOR_FALLING_PLATFORM": "FallingPlatform",
    "ACTIVEFLOOR_CHAINED_SPIKEBALL": "TrapPart",
    "ACTIVEFLOOR_UNCHAINED_SPIKEBALL": "UnchainedSpikeBall",
    "ACTIVEFLOOR_DRILL": "Drill",
    "ACTIVEFLOOR_CRUSH_TRAP.*": "CrushTrap",
    "ACTIVEFLOOR_OLMEC": "Olmec",
    "ACTIVEFLOOR_TIMEDPOWDERKEG": "TimedPowderkeg",
    "ACTIVEFLOOR_SLIDINGWALL": "TrapPart",
    "ACTIVEFLOOR_THINICE": "ThinIce",
    "ACTIVEFLOOR_ELEVATOR": "Elevator",
    "ACTIVEFLOOR_GIANTCLAM_BASE": "ClamBase",
    "ACTIVEFLOOR_REGENERATINGBLOCK": "RegenBlock",
    "FX_EGGSHIP_CENTERJETFLAME": "EggshipCenterJetFlame",
    "FX_TORNJOURNALPAGE": "FxTornJournalPage",
    "FX_MAIN_EXIT_DOOR": "FxMainExitDoor",
    "FX_BIRDIES": "Birdies",
    "FX_.*EXPLOSION": "Explosion",
    "FX_OUROBORO_OCCLUDER": "FxOuroboroOccluder",
    "FX_OUROBORO_HEAD": "FxOuroboroDragonPart",
    "FX_OUROBORO_TAIL": "FxOuroboroDragonPart",
    "ITEM_RUBBLE": "Rubble",
    "FX_COMPASS": "FxCompass",
    "FX_SPECIALCOMPASS": "FxCompass",
    "FX_SALEICON": "MovingIcon",
    "FX_SALEDIALOG_CONTAINER": "FxSaleContainer",
    "FX_PICKUPEFFECT": "FxPickupEffect",
    "FX_SHOTGUNBLAST": "FxShotgunBlast",
    "FX_JETPACKFLAME": "FxJetpackFlame",
    "FX_PLAYERINDICATOR": "FxPlayerIndicator",
    "FX_SMALLFLAME": "Flame",
    "FX_SPRINGTRAP_RING": "FxSpringtrapRing",
    "FX_WITCHDOCTOR_HINT": "FxWitchdoctorHint",
    "FX_NECROMANCER_ANKH": "FxNecromancerANKH",
    "FX_TELEPORTSHADOW": "LightEmitter",
    "FX_OLMECPART_FLOATER": "OlmecFloater",
    "FX_WEBBEDEFFECT": "FxWebbedEffect",
    "FX_BUTTON": "Button",
    "FX_SLEEP_BUBBLE": "SleepBubble",
    "FX_LAVA_GLOW": "LiquidSurface",
    "FX_UNDERWATER_BUBBLE": "FxUnderwaterBubble",
    "FX_WATER_DROP": "FxWaterDrop",
    "FX_WATER_SURFACE": "LiquidSurface",
    "FX_KINGU_SLIDING": "FxKinguSliding",
    "FX_ALIENBLAST.*": "FxAlienBlast",
    "FX_SPARK_SMALL": "FxSparkSmall",
    "FX_TIAMAT_HEAD": "FxTiamatHead",
    "FX_TIAMAT_TORSO": "FxTiamatTorso",
    "FX_TIAMAT_TAIL.*": "FxTiamatTail",
    "FX_DIEINDICATOR": "MovingIcon",
    "FX_STORAGE_INDICATOR": "MovingIcon",
    "FX_VAT_BUBBLE": "FxVatBubble",
    "FX_HUNDUN_NECK_PIECE": "FxHundunNeckPiece",
    "FX_MEGAJELLYFISH_EYE": "MegaJellyfishEye",
    "FX_MEGAJELLYFISH_STAR": "FxJellyfishStar",
    "FX_QUICKSAND_DUST": "FxQuickSand",
    "FX_QUICKSAND_RUBBLE": "FxQuickSand",
    "FX_SORCERESS_ATTACK": "FxSorceressAttack",
    "FX_LAMASSU_ATTACK": "FxLamassuAttack",
    "FX_CRITTERFIREFLY_LIGHT": "FxFireflyLight",
    "FX_EMPRESS": "FxEmpress",
    "FX_MINIGAME_SHIP_DOOR": "MiniGameShipOffset",
    "FX_MINIGAME_SHIP_CENTERJETFLAME": "MiniGameShipOffset",
    "FX_MINIGAME_SHIP_JETFLAME": "MiniGameShipOffset",
    "FX_ANKH_ROTATINGSPARK": "FxAnkhRotatingSpark",
    "FX_ANKH_BROKENPIECE": "FxAnkhBrokenPiece",
    "BG_SURFACE_STAR": "BGSurfaceStar",
    "BG_SURFACE_SHOOTING_STAR": "BGShootingStar",
    "BG_SURFACE_SHOOTING_STAR_TRAIL": "BGRelativeElement",
    "BG_SURFACE_SHOOTING_STAR_TRAIL_PARTICLE": "BGRelativeElement",
    "BG_SURFACE_MOVING_STAR": "BGMovingStar",
    "BG_SURFACE_NEBULA": "BGRelativeElement",
    "BG_SURFACE_LAYER": "BGSurfaceLayer",
    "BG_SURFACE_ENTITY": "BGSurfaceLayer",
    "BG_SURFACE_OLMEC_LAYER": "BGSurfaceLayer",
    "BG_CONSTELLATION_STAR": "BGSurfaceStar",
    "BG_CONSTELLATION_CONNECTION": "BGSurfaceStar",
    "BG_EGGSHIP_ROOM": "BGEggshipRoom",
    "BG_DOOR_BACK_LAYER": "BGBackLayerDoor",
    "BG_TUTORIAL_SIGN_.*": "BGTutorialSign",
    "BG_SHOP_ENTRANCEDOOR": "BGShopEntrence",
    "BG_DUAT_LAYER": "BGSurfaceLayer",
    "BG_DUAT_PYRAMID_LAYER": "BGSurfaceLayer",
    "BG_DUAT_FLOATINGDEBRIS": "BGFloatingDebris",
    "BG_DUAT_FARFLOATINGDEBRIS": "BGFloatingDebris",
    "BG_VAT_SHOPKEEPER_PRIME": "BGShopKeeperPrime",
    "BG_COSMIC_FLOATINGDEBRIS": "BGFloatingDebris",
    "BG_COSMIC_FARFLOATINGDEBRIS": "BGFloatingDebris",
    "LOGICAL_SHOOTING_STARS_SPAWNER": "ShootingStarSpawner",
    "LOGICAL_DOOR": "LogicalDoor",
    "LOGICAL_DOOR_AMBIENT_SOUND": "LogicalSound",
    "LOGICAL_BLACKMARKET_DOOR": "LogicalDoor",
    "LOGICAL_ARROW_TRAP_TRIGGER": "LogicalTrapTrigger",
    "LOGICAL_TOTEM_TRAP_TRIGGER": "LogicalTrapTrigger",
    "LOGICAL_JUNGLESPEAR_TRAP_TRIGGER": "JungleTrapTrigger",
    "LOGICAL_SPIKEBALL_TRIGGER": "LogicalTrapTrigger",
    "LOGICAL_TENTACLE_TRIGGER": "LogicalTrapTrigger",
    "LOGICAL_WET_EFFECT": "WetEffect",
    "LOGICAL_ONFIRE_EFFECT": "OnFireEffect",
    "LOGICAL_POISONED_EFFECT": "PoisonedEffect",
    "LOGICAL_CURSED_EFFECT": "CursedEffect",
    "LOGICAL_OUROBORO_CAMERA_ANCHOR": "OuroboroCameraAnchor",
    "LOGICAL_OUROBORO_CAMERA_ANCHOR_ZOOMIN": "OuroboroCameraZoomin",
    "LOGICAL_CINEMATIC_ANCHOR": "CinematicAnchor",
    "LOGICAL_BURNING_ROPE_EFFECT": "BurningRopeEffect",
    "LOGICAL_DUSTWALL_APEP": "DustWallApep",
    "LOGICAL_CAMERA_FLASH": "CameraFlash",
    "LOGICAL_ROOM_LIGHT": "RoomLight",
    "LOGICAL_LIMB_ANCHOR": "LimbAnchor",
    "LOGICAL_PORTAL": "Portal",
    "LOGICAL_STATICLAVA_SOUND_SOURCE": "LogicalStaticSound",
    "LOGICAL_STREAMLAVA_SOUND_SOURCE": "LogicalLiquidStreamSound",
    "LOGICAL_STREAMWATER_SOUND_SOURCE": "LogicalLiquidStreamSound",
    "LOGICAL_CONVEYORBELT_SOUND_SOURCE": "LogicalConveyorbeltSound",
    "LOGICAL_ANCHOVY_FLOCK": "LogicalAnchovyFlock",
    "LOGICAL_MUMMYFLIES_SOUND_SOURCE": "MummyFliesSound",
    "LOGICAL_QUICKSAND_AMBIENT_SOUND_SOURCE": "LogicalStaticSound",
    "LOGICAL_QUICKSAND_SOUND_SOURCE": "QuickSandSound",
    "LOGICAL_DUSTWALL_SOUND_SOURCE": "LogicalSound",
    "LOGICAL_ICESLIDING_SOUND_SOURCE": "IceSlidingSound",
    "LOGICAL_PIPE_TRAVELER_SOUND_SOURCE": "PipeTravelerSound",
    "LOGICAL_BOULDERSPAWNER": "BoulderSpawner",
    "LOGICAL_WATER_DRAIN": "LogicalDrain",
    "LOGICAL_LAVA_DRAIN": "LogicalDrain",
    "LOGICAL_REGENERATING_BLOCK": "LogicalRegeneratingBlock",
    "LOGICAL_BIGSPEAR_TRAP_TRIGGER": "LogicalTrapTrigger",
    "LOGICAL_DM_ALIEN_BLAST": "DMAlienBlast",
    "LOGICAL_DM_CRATE_SPAWNING": "DMSpawning",
    "LOGICAL_DM_IDOL_SPAWNING": "DMSpawning",
    "LOGICAL_SPLASH_BUBBLE_GENERATOR": "SplashBubbleGenerator",
    "LOGICAL_FROST_BREATH": "FrostBreathEffect",
    "LOGICAL_EGGPLANT_THROWER": "EggplantThrower",
    "LOGICAL_MINIGAME": "LogicalMiniGame",
    "MOUNT_TURKEY": "Mount",
    "MOUNT_ROCKDOG": "Rockdog",
    "MOUNT_AXOLOTL": "Axolotl",
    "MOUNT_MECH": "Mech",
    "MOUNT_QILIN": "Qilin",
    "MOUNT_BASECAMP_CHAIR": "Mount",
    "MOUNT_BASECAMP_COUCH": "Mount",
    "LIQUID_IMPOSTOR_LAKE": "Entity",
    "LIQUID_IMPOSTOR_LAVA": "Entity",
    "LIQUID_.*LAVA": "Lava",
    //
    "FLOOR_.*": "Floor",
    "FLOORSTYLED_.*": "Floor",
    "DECORATION_.*": "Entity",
    "EMBED_.*": "Floor",
    "CHAR_.*": "Player",
    "MONS_.*": "Monster",
    "ITEM_.*": "Movable",
    "ACTIVEFLOOR_.*": "Movable",
    "FX_.*": "Movable",
    "BG_.*": "Entity",
    "MIDBG.*": "Entity",
    "LOGICAL_.*": "Entity",
    "MOUNT_.*": "Mount", //just for the completeness
    "LIQUID_.*": "Liquid"
  },
  // all the types that are pointers
  // if you want to add a pointer, add its field definition under "fields" below, and
  // add it to "pointer_types" so it will be interpreted as a pointer instead of inline data
  "pointer_types": [
    "StateItemsPointer",
    "LayerPointer",
    "EntityListPointer",
    "EntityUIDsListPointer",
    "PlayerInventoryPointer",
    "SoundMeta",
    "IlluminationPointer",
    "ThemeInfoPointer",
    "RenderInfoPointer",
    "ParticleEmitterInfoPointer",
    "TextRenderingInfoPointer",
    "ScreenPointer",
    "ScreenTransitionPointer",
    "ScreenWinPointer",
    "ScreenCreditsPointer",
    "ScrollingCreditsProgressionPointer",
    "ScreenScoresPointer",
    "ScreenConstellationPointer",
    "ScreenRecapPointer",
    "ScreenTeamSelectPointer",
    "ScreenArenaIntroPointer",
    "ScreenArenaStagesSelectPointer",
    "ScreenArenaLevelPointer",
    "ScreenArenaScorePointer",
    "GamePropsPointer",
    "PlayerInputs",
    "InputMappingPointer",
    "QuestsInfoPointer",
    "QuestHandlerPointer",
    "MysteryPointer4",
    "LogicPointer",
    "TutorialPointer",
    "DiceShopPointer",
    "OlmecCutscenePointer",
    "TiamatCutscenePointer",
    "CosmicOceanPointer",
    "GhostLogicPointer",
    "GhostToastLogicPointer",
    "TunAggroPointer",
    "TunPreChallengePointer",
    "MoonChallengePointer",
    "StarChallengePointer",
    "SunChallengePointer",
    "OuroborosPointer",
    "BasecampSpeedrunPointer",
    "VolcanaRelatedPointer",
    "ApepTriggerPointer",
    "CogAnkhSacrificePointer",
    "DuatBossesTriggerPointer",
    "TiamatInfoPointer",
    "WaterRelatedPointer",
    "TuskPleasurePalacePointer",
    "DiscoveryPointer",
    "BlackMarketDoorPointer",
    "Arena1Pointer",
    "Arena2Pointer",
    "Arena3Pointer",
    "ArenaAlienBlastPointer",
    "ArenaLooseBombsPointer",
    "LiquidPhysicsPointer",
    "CameraPointer",
    "UnorderedMapPointer",
    "UnorderedMapBucketPointer",
    "UnorderedMapRecordPointer",
    "StdVectorPointerIllumination",
    "StdVectorPointerParticleEmitterInfo",
    "SpecialLevelGeneration",
    "LevelGenDataPointer",
    "ShopRestrictedItemPointer1",
    "ShopRestrictedItemPointer2",
    "ShopRestrictedItemPointer3",
    "ShopRestrictedItemPointer4",
    "ShopRestrictedItemPointer5",
    "AITargetsPointer",
    "SaveGameHeapOffsetPointer",
    "ScreenLogoPointer",
    "ScreenIntroPointer",
    "ScreenProloguePointer",
    "ScreenTitlePointer",
    "ScreenMenuPointer",
    "ScreenOptionsPointer",
    "ScreenPlayerProfilePointer",
    "ScreenLeaderboardsPointer",
    "ScreenSeedInputPointer",
    "ScreenCharacterSelectPointer",
    "ScreenArenaPointer",
    "ArenaRulesStringsPointer",
    "ScreenArenaItemsPointer",
    "ScreenOnlineLobbyPointer",
    "ScreenOnlineLoadingPointer",
    "PauseUIPointer",
    "JournalUIPointer",
    "BackgroundMusicManagerPointer",
    "Ai_func",
    "SoundInfoPointer",
    "RenderingTimerPointer",
    "StdListIteratorPointer",
    "LiquidPhysicsEngine",
    "GetEntitiesResultPointer",
    "MapBucket",
    "MapBucket1",
    "MapBucket2",
    "MysteryLiquidPointer1",
    "MysteryLiquidPointer2",
    "MysteryLayerPointer1",
    "PointerToMap",
    "PlayerSlotPointer",
    "MultiLineTextRenderingPointer"
  ],
  // all the types that are regular inline data, but are logically grouped (and will be shown as such in the interface)
  // if you want to add an inline struct, add its field definition under "fields" below, and
  // add it to "inline_struct_types" so it will be interpreted as inline data
  "inline_struct_types": [
    "Rect",
    "LightParams",
    "Color",
    "Map",
    "UnorderedMap",
    "EmittedParticlesInfo",
    "TextureRenderingInfo",
    "PlayerSlot",
    "PlayerSlotSettings",
    "LiquidPhysicsParams",
    "LiquidTileSpawnData",
    "CameraBounds",
    "WaddlerStorage",
    "WaddlerStorageMeta",
    "SaveGamePlaces",
    "SaveGameBestiary",
    "SaveGamePeople",
    "SaveGameItems",
    "SaveGameTraps",
    "SaveGameBestiaryKilled",
    "SaveGamePeopleKilled",
    "SaveGameCharacterDeaths",
    "SaveGamePetsRescued",
    "SaveGameStickers",
    "SaveGameStickerAngles",
    "SaveGameStickerVerticalOffsets",
    "SaveGamePlayers",
    "SaveGameDeathCountLevels",
    "SaveGameThemesCompleted",
    "SaveGameArenaRuleset",
    "Constellation",
    "ConstellationStars",
    "ConstellationStar",
    "ConstellationLines",
    "ConstellationLine",
    "JournalPopupUI",
    "JournalProgression",
    "JournalProgressionSlot",
    "JournalPage",
    "JournalPageProgress",
    "JournalPageJournalMenu",
    "JournalPagePlaces",
    "JournalPagePeople",
    "JournalPageBestiary",
    "JournalPageItems",
    "JournalPageTraps",
    "JournalPageStory",
    "JournalPageFeats",
    "JournalPageDeathCause",
    "JournalPageDeathMenu",
    "JournalPageRecap",
    "JournalPagePlayerProfile",
    "JournalPageLastGamePlayed",
    "ThemeProgression",
    "ArenaState",
    "ArenaConfigArenas",
    "ArenaConfigItems",
    "ArenaConfigEquippedItems",
    "ShopsInfo",
    "ShopOwnerDetails",
    "AITarget",
    "Dialogue",
    "DialogueDetails",
    "DialogueDetailsGroup",
    "DialogueInteraction",
    "DialogueInteractionGroup",
    "TruncatedEntityDBIDArray",
    "TruncatedUnsignedDwordArray",
    "AquiredPowerups",
    "FlyingThing",
    "FlyingThingParams",
    "ScreenZoomAnimation",
    "ArenaRulesStringsEntry",
    "AudioChannelParams",
    "PlayerInventory",
    "SelectPlayerSlot",
    "UnknownPointerGroup",
    "OnlinePlayer",
    "OnlineLobby",
    "OnlineLobbyScreenPlayer",
    "OnlineServers",
    "OnlineServer",
    "SockAddrIn",
    "StdList",
    "SomeUnknownArray",
    "EntityList",
    "XY",
    "LiquidLake",
    "BackLayerRelated",
    "CollisionInfo"
  ],
  "refs": {
    "screen_states": {
      "-1": "Game startup",
      "0": "Logo",
      "1": "Intro",
      "2": "Prologue",
      "3": "Title",
      "4": "Menu",
      "5": "Options",
      "6": "Player profile",
      "7": "Leaderboard",
      "8": "Seed input",
      "9": "Character select",
      "10": "Team select",
      "11": "Camp",
      "12": "Level",
      "13": "Transition",
      "14": "Death",
      "15": "Spaceship",
      "16": "Win",
      "17": "Credits",
      "18": "Scores",
      "19": "Constellation",
      "20": "Recap",
      "21": "Arena menu",
      "22": "Arena stages",
      "23": "Arena items",
      "24": "Arena select",
      "25": "Arena intro",
      "26": "Arena level",
      "27": "Arena score",
      "28": "Online loading",
      "29": "Online lobby"
    },
    "theme_progression_themes": {
      "0": "Unset",
      "1": "Dwelling",
      "2": "Jungle",
      "3": "Volcana",
      "4": "Olmec",
      "5": "Tide Pool",
      "6": "Temple",
      "7": "Ice Caves",
      "8": "Neo Babylon",
      "9": "Sunken City",
      "10": "Cosmic Ocean"
    },
    "buttons_flags_multiplayer_controls": {
      "1": "P1: Jump",
      "2": "P1: Attack",
      "3": "P1: Bomb",
      "4": "P1: Rope",
      "5": "P1: Run",
      "6": "P1: Use door/buy",
      "7": "P1: -",
      "8": "P1: Journal",
      "9": "P2: Jump",
      "10": "P2: Attack",
      "11": "P2: Bomb",
      "12": "P2: Rope",
      "13": "P2: Run",
      "14": "P2: Use door/buy",
      "15": "P2: -",
      "16": "P2: Journal",
      "17": "P3: Jump",
      "18": "P3: Attack",
      "19": "P3: Bomb",
      "20": "P3: Rope",
      "21": "P3: Run",
      "22": "P3: Use door/buy",
      "23": "P3: -",
      "24": "P3: Journal",
      "25": "P4: Jump",
      "26": "P4: Attack",
      "27": "P4: Bomb",
      "28": "P4: Rope",
      "29": "P4: Run",
      "30": "P4: Use door/buy",
      "31": "P4: -",
      "32": "P4: Journal"
    },
    "buttons_flags_multiplayer_movement": {
      "1": "P1: Left",
      "2": "P1: Right",
      "3": "P1: Up",
      "4": "P1: Down",
      "5": "-",
      "6": "-",
      "7": "-",
      "8": "-",
      "9": "P2: Left",
      "10": "P2: Right",
      "11": "P2: Up",
      "12": "P2: Down",
      "13": "-",
      "14": "-",
      "15": "-",
      "16": "-",
      "17": "P3: Left",
      "18": "P3: Right",
      "19": "P3: Up",
      "20": "P3: Down",
      "21": "-",
      "22": "-",
      "23": "-",
      "24": "-",
      "25": "P4: Left",
      "26": "P4: Right",
      "27": "P4: Up",
      "28": "P4: Down",
      "29": "-",
      "30": "-",
      "31": "-",
      "32": "-"
    },
    "journal_chapters": {
      "1": "Player profile",
      "2": "Journal",
      "3": "Places",
      "4": "People",
      "5": "Bestiary",
      "6": "Items",
      "7": "Traps",
      "8": "Story",
      "9": "Feats",
      "10": "Recap",
      "11": "Death"
    },
    "character_states": {
      "0": "Ana Spelunky",
      "1": "Margaret Tunnel",
      "2": "Colin Northward",
      "3": "Roffy D. Sloth",
      "4": "Alto Singh",
      "5": "Liz Mutton",
      "6": "Nekka the Eagle ",
      "7": "LISE Project",
      "8": "Coco Von Diamonds",
      "9": "Manfred Tunnel",
      "10": "Little Jay",
      "11": "Tina Flan",
      "12": "Valerie Crump",
      "13": "Au",
      "14": "Demi Von Diamonds",
      "15": "Pilot",
      "16": "Princess Airyn",
      "17": "Dirk Yamaoka",
      "18": "Guy Spelunky",
      "19": "Classic Guy"
    },
    "arena_bot_ai_states": {
      "0": "Chill",
      "1": "Normal",
      "2": "Aggro",
      "3": "Turtle",
      "4": "Tactical",
      "5": "Random"
    },
    "arena_timer_states": {
      "0": "0:30",
      "1": "1:00",
      "2": "1:30",
      "3": "2:00",
      "4": "2:30",
      "5": "3:00",
      "6": "3:30",
      "7": "4:00",
      "8": "4:30",
      "9": "5:00",
      "10": "5:30",
      "11": "6:00",
      "12": "6:30",
      "13": "7:00",
      "14": "7:30",
      "15": "8:00",
      "16": "8:30",
      "17": "9:00",
      "18": "9:30",
      "19": "10:00",
      "20": "Infinite"
    },
    "arena_timer_ending_states": {
      "0": "Round Ends",
      "1": "Death Mist",
      "2": "Alien Blast",
      "3": "Loose Bombs",
      "4": "Ghost",
      "5": "Random"
    },
    "arena_time_to_win_states": {
      "0": "10",
      "1": "20",
      "2": "30",
      "3": "40",
      "4": "50",
      "5": "60",
      "6": "70",
      "7": "80",
      "8": "90",
      "9": "99"
    },
    "arena_stun_time_states": {
      "0": "x0.00",
      "1": "x0.25",
      "2": "x0.50",
      "3": "x0.75",
      "4": "x1.00",
      "5": "x1.25",
      "6": "x1.50",
      "7": "x1.75",
      "8": "x2.00"
    },
    "arena_mount_states": {
      "0": "None",
      "1": "Turkey",
      "2": "Rockdog",
      "3": "Axolotl",
      "4": "Random"
    },
    "arena_select_states": {
      "0": "Take Turns",
      "1": "Loser Picks",
      "2": "Random Level"
    },
    "arena_dark_level_chance_states": {
      "0": "None",
      "1": "10%",
      "2": "50%",
      "3": "Always"
    },
    "arena_crate_frequency_states": {
      "0": "None",
      "1": "Low",
      "2": "Medium",
      "3": "High",
      "4": "Very High"
    },
    "arena_held_item_states": {
      "-1": "Nothing",
      "9": "Torch",
      "10": "Boomerang",
      "11": "Machete",
      "12": "Mattock",
      "13": "Crossbow",
      "14": "Webgun",
      "15": "Freezeray",
      "16": "Shotgun",
      "17": "Camera",
      "18": "Plasma cannon",
      "19": "Wooden shield",
      "20": "Metal shield",
      "21": "Teleporter",
      "22": "Mine",
      "23": "Snaptrap",
      "36": "Excalibur",
      "37": "Scepter"
    },
    "arena_equipped_backitem_states": {
      "-1": "Nothing",
      "30": "Cape",
      "31": "Vlad's cape",
      "32": "Jetpack",
      "33": "Hoverpack",
      "34": "Telepack",
      "35": "Powerpack"
    },
    "arena_whip_damage_states": {
      "0": "0",
      "1": "1",
      "2": "2",
      "3": "3",
      "4": "4",
      "5": "5",
      "6": "10",
      "7": "99"
    },
    "arena_breath_cooldown_states": {
      "0": "None",
      "1": "0.25",
      "2": "0.5",
      "3": "0.75",
      "4": "1.0",
      "5": "1.25",
      "6": "1.5",
      "7": "1.75",
      "8": "2.0",
      "9": "Breath Off"
    },
    "shop_types": {
      "0": "General store",
      "1": "Clothing shop",
      "2": "Weapon shop",
      "3": "Specialty shop",
      "4": "Hired hand shop",
      "5": "Pet shop",
      "6": "Dice shop",
      "7": "Unknown shop",
      "8": "Hedjet shop",
      "9": "Tun shop",
      "10": "Caveman shop",
      "11": "Yang Turkey shop",
      "12": "Ghist shop",
      "13": "Tusk dice shop"
    },
    "buttons_entity": {
      "1": "Jump",
      "2": "Attack",
      "3": "Bomb",
      "4": "Rope",
      "5": "Run",
      "6": "Use door/buy",
      "7": "-",
      "8": "-"
    },
    "buttons_player": {
      "1": "Jump",
      "2": "Attack",
      "3": "Bomb",
      "4": "Rope",
      "5": "Run",
      "6": "Use door/buy",
      "7": "Pause/Menu",
      "8": "Journal",
      "9": "Left",
      "10": "Right",
      "11": "Up",
      "12": "Down",
      "13": "-",
      "14": "-",
      "15": "-",
      "16": "-"
    },
    "entity_flags": {
      "1": "Invisible",
      "2": "Indestructable/special floor",
      "3": "Solid (wall)",
      "4": "Passes through objects",
      "5": "Passes through everything",
      "6": "Take no damage",
      "7": "Throwable/Knockbackable",
      "8": "Is platform",
      "9": "Climbable (as rope/ladder)",
      "10": "No gravity",
      "11": "Interact with liquid",
      "12": "Stunnable",
      "13": "Collides walls",
      "14": "Interact with semisolids?",
      "15": "Can be stomped",
      "16": "Power stomps",
      "17": "Facing left",
      "18": "Pickupable",
      "19": "Usable item?",
      "20": "Enable button prompt",
      "21": "Interact with webs",
      "22": "Can be carried through exit",
      "23": "Shop item",
      "24": "Shop floor (break to aggro)",
      "25": "Passes through player",
      "26": "Exploded",
      "27": "Crushed",
      "28": "Pause AI and physics",
      "29": "Dead",
      "30": "Character",
      "31": "Movable",
      "32": "Use overlay draw depth"
    },
    "entity_more_flags": {
      "1": "Take damage on collision after throw",
      "2": "Revived (HH)",
      "3": "Blocks shield",
      "4": "Passes through shield",
      "5": "Being moved by shield",
      "6": "Just spawned?",
      "7": "Done spawning?",
      "8": "Stuck in something",
      "9": "Stuck in something, 1 frame later",
      "10": "Pitchers mitt antigravity",
      "11": "Swimming",
      "12": "Hit ground",
      "13": "Hit wall",
      "14": "Falling",
      "15": "Cursed effect",
      "16": "Elixir buff",
      "17": "Disable input",
      "18": "Shop item held by player",
      "19": "Falling platform something?",
      "20": "Yangs turkey",
      "21": "Floor can be decorated",
      "22": "Disable collision",
      "23": "JumpWhipped to shorthop",
      "24": "",
      "25": "",
      "26": "",
      "27": "",
      "28": "",
      "29": "",
      "30": "",
      "31": "",
      "32": ""
    },
	"type_mask": {
	  "1": "Player",
	  "2": "Mount",
	  "3": "Monster",
	  "4": "Item",
	  "5": "Explosion",
	  "6": "Rope",
	  "7": "FX",
	  "8": "ACTIVEFLOOR",
	  "9": "FLOOR",
	  "10": "DECORATION",
	  "11": "BG",
	  "12": "SHADOW",
	  "13": "LOGICAL",
	  "14": "WATER",
	  "15": "LAVA",
	  "16": "",
	  "17": "",
	  "18": "",
	  "19": "",
	  "20": "",
	  "21": "",
	  "22": "",
	  "23": "",
	  "24": "",
	  "25": "",
	  "26": "",
	  "27": "",
	  "28": "",
	  "29": "",
	  "30": "",
	  "31": "",
	  "32": ""
	}
  },

  // a list of all the fields within the types
  "fields": {
    "EntityDB": [
      { "field": "create_func", "type": "CodePointer" },
      { "field": "destroy_func", "type": "CodePointer" },
      { "field": "field_10", "type": "UnsignedDword" },
      { "field": "id", "type": "EntityDBID" },
      {
        "field": "search_flags",
        "type": "Flags32",
        "ref": "type_mask"
      },
      { "field": "width", "type": "Float" },
      { "field": "height", "type": "Float" },
      { "field": "draw_depth", "type": "UnsignedByte" },
      { "field": "default_b3f", "type": "Byte" },
      { "field": "field_26", "type": "Word" },
      { "field": "collision", "type": "CollisionInfo" },
      {
        "field": "collision2_mask",
        "type": "Flags32",
        "ref": "type_mask"
      },
      {
        "field": "collision_mask",
        "type": "Flags32",
        "ref": "type_mask"
      },
      {
        "field": "field_44",
        "type": "Flags32",
        "flags": {
          "1": "",
          "2": "",
          "3": "",
          "4": "",
          "5": "",
          "6": "",
          "7": "",
          "8": "",
          "9": "",
          "10": "",
          "11": "",
          "12": "",
          "13": "",
          "14": "",
          "15": "",
          "16": "",
          "17": "",
          "18": "",
          "19": "",
          "20": "",
          "21": "",
          "22": "",
          "23": "",
          "24": "",
          "25": "",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      {
        "field": "default_flags",
        "type": "Flags32",
        "ref": "entity_flags"
      },
      {
        "field": "default_more_flags",
        "type": "Flags32",
        "ref": "entity_more_flags"
      },
      {
        "field": "properties_flags",
        "type": "Flags32",
        "flags": {
          "1": "Apply solid block beautification",
          "2": "Treat as FLOORSTYLED",
          "3": "",
          "4": "",
          "5": "Squirts blood on damage",
          "6": "Climbable (as wall)",
          "7": "",
          "8": "Fireproof",
          "9": "Double fire and explosive damage",
          "10": "Is on fire/lights on fire",
          "11": "Poison immunity",
          "12": "Turns arrow tip to poison when hit",
          "13": "Curse immunity",
          "14": "Cursed pot effect (curses you when destroyed closeby)",
          "15": "",
          "16": "",
          "17": "",
          "18": "Can be carried through layer doors",
          "19": "",
          "20": "",
          "21": "Can spawn monsters on top",
          "22": "",
          "23": "Can be cloned",
          "24": "Can be bubbled",
          "25": "Can be telefragged",
          "26": "Disable updates?",
          "27": "Kill entity when overlay lost?",
          "28": "Unused",
          "29": "Unused",
          "30": "Unused",
          "31": "Unused",
          "32": "Unused"
        }
      },
      { "field": "friction", "type": "Float" },
      { "field": "elasticity", "type": "Float" },
      { "field": "weight", "type": "Float" },
      {
        "field": "field_60",
        "type": "Flags32",
        "flags": {
          "1": "",
          "2": "",
          "3": "",
          "4": "",
          "5": "",
          "6": "",
          "7": "",
          "8": "",
          "9": "",
          "10": "",
          "11": "",
          "12": "",
          "13": "",
          "14": "",
          "15": "",
          "16": "",
          "17": "",
          "18": "",
          "19": "",
          "20": "",
          "21": "",
          "22": "",
          "23": "",
          "24": "",
          "25": "",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      { "field": "acceleration", "type": "Float" },
      { "field": "max_speed", "type": "Float" },
      { "field": "sprint_factor", "type": "Float" },
      { "field": "jump", "type": "Float" },
      { "field": "glow_red", "type": "Float" },
      { "field": "glow_green", "type": "Float" },
      { "field": "glow_blue", "type": "Float" },
      { "field": "glow_alpha", "type": "Float" },
      { "field": "texture", "type": "TextureDBID" },
      { "field": "technique", "type": "Dword" },
      { "field": "tile_x", "type": "Dword" },
      { "field": "tile_y", "type": "Dword" },
      { "field": "damage", "type": "UnsignedByte" },
      { "field": "life", "type": "UnsignedByte" },
      { "field": "sacrifice_value", "type": "UnsignedByte" },
      {
        "field": "death_blood_drops_count",
        "type": "UnsignedByte",
        "comment": "the blood drops that are spawned upon death (not from being hurt)"
      },
      { "field": "leaves_corpse_behind", "type": "Bool" },
      { "field": "field_99", "type": "UnsignedByte" },
      { "field": "field_9A", "type": "UnsignedByte" },
      { "field": "field_9B", "type": "UnsignedByte" },
      { "field": "description", "type": "StringsTableID" },
      { "field": "sound_killed_by_player", "type": "Dword" },
      { "field": "sound_killed_by_other", "type": "Dword" },
      { "field": "field_a8", "type": "Float" },
      { "field": "field_AC", "type": "Dword" },
      { "field": "animations", "type": "UnorderedMap" },
      { "field": "attachOffsetX", "type": "Float" },
      { "field": "attachOffsetY", "type": "Float" },
      { "field": "init", "type": "UnsignedByte" },
      { "field": "field_19", "type": "UnsignedByte" },
      { "field": "field_1a", "type": "UnsignedByte" },
      { "field": "field_1b", "type": "UnsignedByte" },
      { "field": "field_1c", "type": "Dword" }
    ],
    "EmittedParticlesInfo": [
      { "field": "particle_emitter", "type": "DataPointer", "comment": "ParticleEmitterInfo*" },
      { "field": "memory", "type": "DataPointer", "comment": "void*" },
      { "field": "max_lifetimes", "type": "DataPointer", "comment": "uint16_t*" },
      { "field": "lifetimes", "type": "DataPointer", "comment": "uint16_t*" },
      { "field": "unknown7", "type": "DataPointer" },
      { "field": "unknown8", "type": "DataPointer" },
      { "field": "x_positions", "type": "DataPointer", "comment": "float*" },
      { "field": "y_positions", "type": "DataPointer", "comment": "float*" },
      { "field": "unknown_x_positions", "type": "DataPointer", "comment": "float*" },
      { "field": "unknown_y_positions", "type": "DataPointer", "comment": "float*" },
      { "field": "colors", "type": "DataPointer", "comment": "uColor* - color saved as 4 unsigned bytes" },
      { "field": "widths", "type": "DataPointer", "comment": "float*" },
      { "field": "heights", "type": "DataPointer", "comment": "float*" },
      { "field": "x_velocities", "type": "DataPointer", "comment": "float*" },
      { "field": "y_velocities", "type": "DataPointer", "comment": "float*" },
      { "field": "unknown18", "type": "DataPointer" },
      { "field": "unknown19", "type": "DataPointer" },
      { "field": "unknown20", "type": "DataPointer" },
      { "field": "unknown21", "type": "DataPointer" },
      { "field": "unknown22", "type": "DataPointer" },
      { "field": "unknown23", "type": "DataPointer" }
    ],
    "ParticleEmitterInfoPointer": [
      { "field": "particle_type", "type": "ParticleDBPointer" },
      { "field": "particle_type2", "type": "ParticleDBPointer" },
      { "field": "particle_count", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "emitted_particles", "type": "EmittedParticlesInfo" },
      { "field": "particle_count2", "type": "UnsignedDword" },
      { "field": "unknown24", "type": "Dword" },
      { "field": "emitted_particles2", "type": "EmittedParticlesInfo" },
      {
        "field": "entity_uid",
        "type": "EntityUID",
        "comment": "set to -1 to decouple emitter position from entity position (and move it around freely)"
      },
      { "field": "unknown46", "type": "Float" },
      { "field": "unknown47", "type": "Float" },
      { "field": "unknown48", "type": "Float" },
      { "field": "unknown49", "type": "Float" },
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      { "field": "offset_x", "type": "Float" },
      { "field": "offset_y", "type": "Float" },
      { "field": "layer", "type": "UnsignedByte" },
      { "field": "unknown54b", "type": "UnsignedByte" },
      { "field": "unknown54c", "type": "UnsignedByte" },
      { "field": "unknown54d", "type": "UnsignedByte" },
      { "field": "unknown55", "type": "Float" },
      { "field": "unknown56", "type": "UnsignedDword" },
      { "field": "total_particles?", "type": "UnsignedDword" },
      { "field": "unknown58", "type": "UnsignedDword" },
      { "field": "max_particles", "type": "UnsignedDword" },
      { "field": "unknown60", "type": "UnsignedDword" }
    ],
    "ParticleDB": [
      { "field": "id", "type": "ParticleDBID" },
      {
        "field": "spawn_count_min",
        "type": "Dword",
        "comment": "minimum amount of particles to spawn in an iteration, actual value is random between this value and spawn_count (-1 = no lower bound, uses spawn_count)"
      },
      {
        "field": "spawn_count",
        "type": "UnsignedDword",
        "comment": "total amount of particles to spawn for 1 iteration (check with PETTING_PET or MOUNT_TAMED, amount of hearts shown)"
      },
      {
        "field": "lifespan_min",
        "type": "Dword",
        "comment": "minimum lifespan of a particle, actual value is random between this value and lifespan (-1 = no lower bound, uses lifespan)"
      },
      {
        "field": "lifespan",
        "type": "UnsignedDword",
        "comment": "amount of frames"
      },
      {
        "field": "sheet_id",
        "type": "UnsignedDword",
        "comment": "index within the texture DDS file"
      },
      {
        "field": "animation_sequence_length",
        "type": "UnsignedDword",
        "comment": "amount of sequential sprites in the animation sequence"
      },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "UnsignedDword" },
      {
        "field": "spawn_interval",
        "type": "Float",
        "comment": "how much time it takes to spawn the next particle"
      },
      {
        "field": "shrink_growth_factor",
        "type": "Float",
        "comment": "negative makes the particles shrink over time, positive grow"
      },
      { "field": "rotation_speed", "type": "Float" },
      { "field": "opacity", "type": "Float" },
      {
        "field": "max_velocity",
        "type": "Float",
        "comment": "the large number is FLT_MAX (no limit)"
      },
      { "field": "y_scale_related", "type": "Float" },
      { "field": "hor_scattering", "type": "Float" },
      { "field": "ver_scattering", "type": "Float" },
      {
        "field": "scale_x_min",
        "type": "Float",
        "comment": "scale_x = ((scale_x - scale_x_min) * (rand(0-100)/100)) + scale_x_min"
      },
      { "field": "scale_y_min", "type": "Float" },
      { "field": "scale_x", "type": "Float" },
      { "field": "scale_y", "type": "Float" },
      { "field": "hor_deflection_1", "type": "Float" },
      { "field": "ver_deflection_1", "type": "Float" },
      { "field": "hor_deflection_2", "type": "Float" },
      { "field": "ver_deflection_2", "type": "Float" },
      { "field": "hor_velocity", "type": "Float" },
      { "field": "ver_velocity", "type": "Float" },
      { "field": "red", "type": "UnsignedByte" },
      { "field": "green", "type": "UnsignedByte" },
      { "field": "blue", "type": "UnsignedByte" },
      { "field": "unknown28", "type": "UnsignedByte" },
      { "field": "texture", "type": "TextureDBPointer" },
      { "field": "unknown29", "type": "CodePointer" },
      { "field": "unknown30", "type": "CodePointer" },
      { "field": "unknown31a", "type": "UnsignedByte" },
      { "field": "unknown31b", "type": "UnsignedByte" },
      { "field": "unknown31c", "type": "UnsignedByte" },
      { "field": "unknown31d", "type": "UnsignedByte" },
      { "field": "unknown32", "type": "Float" },
      { "field": "unknown33", "type": "Float" },
      {
        "field": "permanent",
        "type": "Bool",
        "comment": "whether you have to constantly refresh the emitter or whether it stays on permanently"
      },
      { "field": "unknown35", "type": "Bool" },
      { "field": "unknown36", "type": "Bool" },
      { "field": "unknown37", "type": "Bool" },
      {
        "field": "invisible",
        "type": "Bool",
        "comment": "used for shockwaves and warping"
      },
      { "field": "unknown39", "type": "Bool" },
      { "field": "unknown40", "type": "UnsignedByte" },
      { "field": "unknown41", "type": "UnsignedByte" },
      { "field": "unknown42", "type": "UnsignedDword" }
    ],
    "CharacterDB": [
      { "field": "is_female", "type": "Bool" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "heart_red", "type": "Float" },
      { "field": "heart_green", "type": "Float" },
      { "field": "heart_blue", "type": "Float" },
      { "field": "heart_alpha", "type": "Float" },
      { "field": "full_name", "type": "StringsTableID" },
      { "field": "short_name", "type": "StringsTableID" },
      { "field": "unknown9", "type": "UnsignedByte" },
      { "field": "unknown10", "type": "UnsignedByte" },
      { "field": "unknown11", "type": "UnsignedByte" },
      { "field": "unknown12", "type": "UnsignedByte" },
      { "field": "basecamp_bed_x", "type": "Float" },
      { "field": "basecamp_bed_y", "type": "Float" },
      { "field": "unknown15", "type": "UnsignedByte" },
      { "field": "unknown16", "type": "UnsignedByte" },
      { "field": "unknown17", "type": "UnsignedByte" },
      { "field": "unknown18", "type": "UnsignedByte" }
    ],
    "GameManager": [
      { "field": "backgroundmusic", "type": "BackgroundMusicManagerPointer" },
      { "field": "savegame", "type": "SaveGameHeapOffsetPointer" },
      {
        "field": "buttons_controls",
        "type": "Flags32",
        "ref": "buttons_flags_multiplayer_controls"
      },
      {
        "field": "buttons_movement",
        "type": "Flags32",
        "ref": "buttons_flags_multiplayer_movement"
      },
      { "field": "game_props", "type": "GamePropsPointer" },
      { "field": "screen_logo", "type": "ScreenLogoPointer" },
      {
        "field": "screen_intro",
        "type": "ScreenIntroPointer"
      },
      { "field": "screen_prologue", "type": "ScreenProloguePointer" },
      {
        "field": "screen_title",
        "type": "ScreenTitlePointer"
      },
      { "field": "screen_menu", "type": "ScreenMenuPointer" },
      { "field": "screen_options", "type": "ScreenOptionsPointer" },
      {
        "field": "screen_player_profile",
        "type": "ScreenPlayerProfilePointer"
      },
      {
        "field": "screen_leaderboards",
        "type": "ScreenLeaderboardsPointer",
        "comment": "INCOMPLETE"
      },
      { "field": "screen_seed_input", "type": "ScreenSeedInputPointer" },
      {
        "field": "unknown_screen_character_select?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_team_select?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "screen_camp",
        "type": "ScreenPointer",
        "comment": "in state there is also screen_camp"
      },
      {
        "field": "screen_level",
        "type": "ScreenPointer",
        "comment": "in state there is also screen_level"
      },
      {
        "field": "screen_transition",
        "type": "ScreenTransitionPointer",
        "comment": "in state there is also screen_transition which is complete (this one isn't)"
      },
      {
        "field": "unknown_screen_death?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_spaceship?",
        "type": "DataPointer",
        "comment": "(also not!) available in State"
      },
      {
        "field": "unknown_screen_win?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_credits?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_scores?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_constellation?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_recap?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_arena_menu",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_arena_stages?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_arena_items",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_arena_select?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "unknown_screen_arena_intro?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "screen_arena_level",
        "type": "ScreenArenaLevelPointer",
        "comment": "also available in State, but it's a different object! this one only has a render_timer, no UI parts"
      },
      {
        "field": "unknown_screen_arena_score?",
        "type": "DataPointer",
        "comment": "available in State"
      },
      {
        "field": "screen_online_loading",
        "type": "ScreenOnlineLoadingPointer"
      },
      { "field": "screen_online_lobby", "type": "ScreenOnlineLobbyPointer" },
      { "field": "pause_ui", "type": "PauseUIPointer" },
      { "field": "journal_ui", "type": "JournalUIPointer" },
      { "field": "main_menu_music", "type": "SoundMeta" },
      { "field": "unknown28", "type": "Float" },
      { "field": "unknown29", "type": "Float" }
    ],
    "BackgroundMusicManagerPointer": [
      { "field": "game_startup", "type": "SoundMeta" },
      { "field": "main_backgroundtrack", "type": "SoundMeta" },
      { "field": "basecamp", "type": "SoundMeta" },
      { "field": "win_scene", "type": "SoundMeta" },
      { "field": "arena", "type": "SoundMeta" },
      { "field": "arena_intro_and_win", "type": "SoundMeta" },
      { "field": "level_gameplay", "type": "SoundMeta" },
      { "field": "dark_level", "type": "SoundMeta" },
      { "field": "level_transition", "type": "SoundMeta" },
      { "field": "backlayer", "type": "SoundMeta" },
      { "field": "shop", "type": "SoundMeta" },
      { "field": "angered_shopkeeper", "type": "SoundMeta" },
      { "field": "inside_sunken_city_pipe", "type": "SoundMeta" },
      { "field": "pause_menu", "type": "SoundMeta" },
      { "field": "unknown15", "type": "SoundMeta" },
      { "field": "death_transition", "type": "SoundMeta" },
      { "field": "unknown17", "type": "UnsignedByte" },
      { "field": "unknown18", "type": "UnsignedByte" },
      { "field": "unknown19", "type": "UnsignedByte" },
      { "field": "unknown20", "type": "UnsignedByte" },
      {
        "field": "floats",
        "type": "Skip",
        "offset": 2400,
        "comment": "600 floats, mostly seem to be 1.0"
      },
      { "field": "idle_counter", "type": "Float" },
      { "field": "unknown22", "type": "UnsignedDword" }
    ],
    "AudioChannelParams": [
      {
        "field": "POS_SCREEN_X",
        "type": "Float",
        "comment": "VANILLA_SOUND_PARAM names, for now"
      },
      { "field": "DIST_CENTER_X", "type": "Float" },
      { "field": "DIST_CENTER_Y", "type": "Float" },
      { "field": "DIST_Z", "type": "Float" },
      {
        "field": "DIST_PLAYER",
        "type": "Float",
        "comment": "seams to be always here, even you you get nil in lua"
      },
      { "field": "SUBMERGED", "type": "Float" },
      { "field": "LIQUID_STREAM", "type": "Float" },
      {
        "field": "unknown8",
        "type": "Float",
        "comment": "LIQUID_STREAM related? , maybe LIQUID_INTENSITY?"
      },
      { "field": "VALUE", "type": "Float" },
      { "field": "unknown10", "type": "Float" },
      { "field": "unknown11", "type": "Float" },
      { "field": "unknown12", "type": "Float" },
      { "field": "unknown13", "type": "Float" },
      { "field": "unknown14", "type": "Float" },
      { "field": "unknown15", "type": "Float" },
      { "field": "unknown16", "type": "Float" },
      { "field": "unknown17", "type": "Float" },
      { "field": "unknown18", "type": "Float" },
      { "field": "unknown19", "type": "Float" },
      { "field": "unknown20", "type": "Float" },
      { "field": "unknown21", "type": "Float" },
      { "field": "unknown22", "type": "Float" },
      { "field": "unknown23", "type": "Float" },
      { "field": "unknown24", "type": "Float" },
      { "field": "unknown25", "type": "Float" },
      { "field": "unknown26", "type": "Float" },
      { "field": "unknown27", "type": "Float" },
      { "field": "unknown28", "type": "Float" },
      { "field": "unknown29", "type": "Float" },
      { "field": "POISONED", "type": "Float" },
      { "field": "CURSED", "type": "Float" },
      { "field": "unknown32", "type": "Float" },
      { "field": "unknown33", "type": "Float" },
      { "field": "unknown34", "type": "Float" },
      { "field": "unknown35", "type": "Float" },
      { "field": "unknown36", "type": "Float" },
      { "field": "unknown37", "type": "Float" },
      { "field": "unknown38", "type": "Float" }
    ],
    "GamePropsPointer": [
      {
        "field": "buttons",
        "type": "Flags32",
        "flags": {
          "1": "Jump",
          "2": "Bomb",
          "3": "Attack",
          "4": "Rope",
          "5": "",
          "6": "Use door/buy",
          "7": "",
          "8": "Run",
          "9": "",
          "10": "",
          "11": "",
          "12": "",
          "13": "",
          "14": "",
          "15": "",
          "16": "",
          "17": "Left",
          "18": "Right",
          "19": "Up",
          "20": "Down",
          "21": "",
          "22": "",
          "23": "",
          "24": "",
          "25": "",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "buttons_dupe", "type": "Flags32", "flags": {} },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "buttons_dupe_but_different", "type": "Flags32", "flags": {} },
      { "field": "unknown8", "type": "Byte" },
      { "field": "game_has_focus", "type": "Bool" },
      { "field": "unknown9", "type": "Bool" },
      { "field": "unknown10", "type": "Bool" }
    ],
    "PauseUIPointer": [
      { "field": "menu_slidein_progress", "type": "Float" },
      { "field": "blurred_background", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_left", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_middle", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_right", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_top", "type": "TextureRenderingInfo" },
      { "field": "scroll", "type": "TextureRenderingInfo" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "DataPointer" },
      { "field": "confirmation_panel", "type": "TextureRenderingInfo" },
      { "field": "unknown5", "type": "DataPointer" },
      { "field": "unknown7", "type": "DataPointer" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "previously_selected_menu_index", "type": "UnsignedDword" },
      { "field": "buttons_actions", "type": "UnsignedDword" },
      { "field": "buttons_movement", "type": "UnsignedDword" },
      { "field": "unknown11a", "type": "UnsignedByte" },
      { "field": "unknown11b", "type": "Byte" },
      { "field": "unknown12", "type": "UnsignedWord" },
      {
        "field": "visibility",
        "type": "State32",
        "states": {
          "0": "Invisible",
          "1": "Sliding down",
          "2": "Visible",
          "3": "Sliding up"
        }
      }
    ],
    "JournalUIPointer": [
      {
        "field": "state",
        "type": "State32",
        "states": {
          "0": "Invisible",
          "1": "Fading in",
          "2": "Stable",
          "3": "Flipping left",
          "4": "Flipping right",
          "5": "Fading out"
        }
      },
      { "field": "chapter_shown", "type": "State8", "ref": "journal_chapters" },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedWord" },
      {
        "field": "pages",
        "type": "StdVector",
        "vectortype": "JournalPagePointer"
      },
      {
        "field": "unknown3",
        "type": "StdVector",
        "vectortype": "JournalPagePointer",
        "comment": "pages are constructed, saved here and later moved to the pages vector"
      },
      { "field": "current_page", "type": "UnsignedDword" },
      { "field": "flipping_to_page", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "UnsignedDword" },
      {
        "field": "max_page_count",
        "type": "Dword",
        "comment": "influences the right arrow shown and being able to move to the next page"
      },
      { "field": "unknown12", "type": "UnsignedQword" },
      { "field": "unknown13", "type": "UnsignedQword" },
      { "field": "unknown14", "type": "UnsignedQword" },
      { "field": "unknown15", "type": "DataPointer" },
      { "field": "unknown16", "type": "UnsignedQword" },
      { "field": "unknown17", "type": "UnsignedQword" },
      { "field": "unknown18", "type": "UnsignedQword" },
      { "field": "unknown19", "type": "UnsignedQword" },
      { "field": "unknown20", "type": "DataPointer" },
      { "field": "unknown21", "type": "UnsignedQword" },
      { "field": "book_background", "type": "TextureRenderingInfo" },
      { "field": "arrow_left", "type": "TextureRenderingInfo" },
      { "field": "arrow_right", "type": "TextureRenderingInfo" },
      { "field": "unknown23", "type": "TextureRenderingInfo" },
      { "field": "entire_book", "type": "TextureRenderingInfo" },
      {
        "field": "fade_timer",
        "type": "UnsignedDword",
        "comment": "14 frames countdown"
      },
      { "field": "unknown26", "type": "Float" },
      { "field": "page_timer", "type": "UnsignedDword" },
      { "field": "unknown28", "type": "UnsignedDword" },
      { "field": "unknown29", "type": "DataPointer" },
      { "field": "unknown31", "type": "UnsignedDword" },
      { "field": "unknown30", "type": "UnsignedDword" }
    ],
    "JournalPagePointer": [],
    "JournalPage": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~JournalPage", "params": "", "return": "" },
          "4": { "name": "render", "params": "", "return": "" }
        }
      }
    ],
    "JournalPageProgress": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "coffeestain_top", "type": "TextureRenderingInfo" }
    ],
    "JournalPageJournalMenu": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "Float" },
      { "field": "unknown4", "type": "Float" },
      { "field": "unknown5", "type": "Float" },
      { "field": "unknown6", "type": "Float" },
      { "field": "unknown7", "type": "Float" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "Float" },
      { "field": "unknown10", "type": "Float" },
      { "field": "unknown11", "type": "UnsignedDword" },
      { "field": "unknown12", "type": "Float" },
      { "field": "unknown13", "type": "DataPointer" },
      { "field": "unknown15", "type": "DataPointer" },
      { "field": "unknown17", "type": "DataPointer" },
      { "field": "unknown19", "type": "DataPointer" },
      { "field": "unknown21", "type": "CodePointer" },
      { "field": "selected_menu_index", "type": "UnsignedDword" },
      { "field": "unknown23", "type": "UnsignedDword" },
      { "field": "journal_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "completion_badge", "type": "TextureRenderingInfo" }
    ],
    "JournalPagePlaces": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      {
        "field": "show_main_image",
        "type": "Bool",
        "comment": "in case of undiscovered entry"
      },
      { "field": "unknown3b", "type": "UnsignedByte" },
      { "field": "unknown3c", "type": "UnsignedByte" },
      { "field": "unknown3d", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "Float" },
      { "field": "title_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "unknown12", "type": "DataPointer" },
      { "field": "entry_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "chapter_title_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "main_image", "type": "TextureRenderingInfo" },
      { "field": "unknown14", "type": "UnsignedDword" },
      { "field": "unknown15", "type": "UnsignedDword" },
      { "field": "unknown16", "type": "UnsignedDword" },
      { "field": "unknown17", "type": "UnsignedDword" },
      { "field": "unknown18", "type": "Float" },
      { "field": "unknown19", "type": "Float" },
      { "field": "unknown20", "type": "Float" },
      { "field": "unknown21", "type": "Float" },
      { "field": "unknown22", "type": "Float" },
      { "field": "unknown23", "type": "Float" },
      { "field": "unknown24", "type": "Float" },
      { "field": "unknown25", "type": "UnsignedDword" },
      { "field": "unknown26", "type": "UnsignedDword" },
      { "field": "unknown27", "type": "UnsignedDword" },
      { "field": "unknown28", "type": "UnsignedDword" },
      { "field": "unknown29", "type": "UnsignedDword" },
      { "field": "unknown30", "type": "UnsignedDword" }
    ],
    "JournalPagePeople": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      {
        "field": "show_main_image",
        "type": "Bool",
        "comment": "in case of undiscovered entry"
      },
      { "field": "unknown3b", "type": "UnsignedByte" },
      { "field": "unknown3c", "type": "UnsignedByte" },
      { "field": "unknown3d", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "Float" },
      { "field": "title_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "unknown12", "type": "DataPointer" },
      { "field": "entry_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "chapter_title_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "character_background", "type": "TextureRenderingInfo" },
      { "field": "character_icon", "type": "TextureRenderingInfo" },
      { "field": "character_drawing", "type": "TextureRenderingInfo" }
    ],
    "JournalPageBestiary": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      {
        "field": "show_main_image",
        "type": "Bool",
        "comment": "in case of undiscovered entry"
      },
      { "field": "unknown3b", "type": "UnsignedByte" },
      { "field": "unknown3c", "type": "UnsignedByte" },
      { "field": "unknown3d", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "Float" },
      { "field": "title_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "description_text_lines", "type": "MultiLineTextRenderingPointer" },
      { "field": "entry_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "chapter_title_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "monster_background", "type": "TextureRenderingInfo" },
      { "field": "monster_icon", "type": "TextureRenderingInfo" },
      {
        "field": "defeated_killedby_black_bars",
        "type": "TextureRenderingInfo"
      },
      { "field": "defeated_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "defeated_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "killedby_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "killedby_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "unknown19", "type": "UnsignedDword" },
      { "field": "unknown20", "type": "UnsignedDword" },
      { "field": "unknown21", "type": "UnsignedDword" },
      { "field": "unknown22", "type": "UnsignedDword" }
    ],
    "MultiLineTextRenderingPointer": [
      { "field": "unknown20", "type": "RenderingTimerPointer" },
      { "field": "text_lines", "type": "StdVector", "vectortype": "TextRenderingInfoPointer" },
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" }
    ],
    "JournalPageItems": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      {
        "field": "show_main_image",
        "type": "Bool",
        "comment": "in case of undiscovered entry"
      },
      { "field": "unknown3b", "type": "UnsignedByte" },
      { "field": "unknown3c", "type": "UnsignedByte" },
      { "field": "unknown3d", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "Float" },
      { "field": "title_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "unknown12", "type": "DataPointer" },
      { "field": "entry_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "chapter_title_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "item_icon", "type": "TextureRenderingInfo" },
      { "field": "item_background", "type": "TextureRenderingInfo" },
      { "field": "unknown14", "type": "UnsignedDword" },
      { "field": "unknown15", "type": "UnsignedDword" }
    ],
    "JournalPageTraps": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      {
        "field": "show_main_image",
        "type": "Bool",
        "comment": "in case of undiscovered entry"
      },
      { "field": "unknown3b", "type": "UnsignedByte" },
      { "field": "unknown3c", "type": "UnsignedByte" },
      { "field": "unknown3d", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "Float" },
      { "field": "title_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "unknown12", "type": "DataPointer" },
      { "field": "entry_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "chapter_title_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "trap_icon", "type": "TextureRenderingInfo" },
      { "field": "trap_background", "type": "TextureRenderingInfo" },
      { "field": "unknown14", "type": "UnsignedDword" },
      { "field": "unknown15", "type": "UnsignedDword" },
      { "field": "unknown16", "type": "DataPointer" },
      { "field": "unknown17", "type": "UnsignedDword" },
      { "field": "unknown18", "type": "UnsignedDword" },
      { "field": "unknown19", "type": "UnsignedDword" },
      { "field": "unknown20", "type": "UnsignedDword" }
    ],
    "JournalPageStory": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" }
    ],
    "JournalPageFeats": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown1", "type": "UnsignedDword" },
      {
        "field": "chapter_title_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "feat_icons", "type": "TextureRenderingInfo" }
    ],
    "JournalPageDeathCause": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "death_cause_text_info", "type": "TextRenderingInfoPointer" }
    ],
    "JournalPageDeathMenu": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "Float" },
      { "field": "unknown4", "type": "Float" },
      { "field": "unknown5", "type": "Float" },
      { "field": "unknown6", "type": "Float" },
      { "field": "unknown7", "type": "Float" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "Float" },
      { "field": "unknown10", "type": "Float" },
      { "field": "unknown11", "type": "UnsignedDword" },
      { "field": "unknown12", "type": "Float" },
      { "field": "unknown13", "type": "DataPointer" },
      { "field": "unknown14", "type": "DataPointer" },
      { "field": "unknown15", "type": "DataPointer" },
      { "field": "unknown16", "type": "DataPointer" },
      { "field": "unknown17", "type": "CodePointer" },
      { "field": "selected_menu_index", "type": "UnsignedDword" },
      { "field": "unknown18", "type": "UnsignedDword" },
      { "field": "game_over_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "level_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "level_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "money_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "money_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "time_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "time_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "unknown26", "type": "UnsignedDword" },
      { "field": "unknown27", "type": "UnsignedDword" }
    ],
    "JournalPageRecap": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" }
    ],
    "JournalPagePlayerProfile": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "player_icon", "type": "TextureRenderingInfo" },
      { "field": "player_icon_id", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "Float" },
      {
        "field": "player_profile_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "plays_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "plays_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "wins_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "wins_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "deaths_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "deaths_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "win_pct_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "win_pct_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      {
        "field": "average_score_text_info",
        "type": "TextRenderingInfoPointer"
      },
      {
        "field": "average_score_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "top_score_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "top_score_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      {
        "field": "deepest_level_text_info",
        "type": "TextRenderingInfoPointer"
      },
      {
        "field": "deepest_level_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      {
        "field": "deadliest_level_text_info",
        "type": "TextRenderingInfoPointer"
      },
      {
        "field": "deadliest_level_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "average_time_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "average_time_value_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "best_time_text_info", "type": "TextRenderingInfoPointer" },
      {
        "field": "best_time_value_text_info",
        "type": "TextRenderingInfoPointer"
      }
    ],
    "JournalPageLastGamePlayed": [
      {
        "field": "__vftable",
        "type": "DataPointer",
        "comment": "see JournalPagePointer"
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "page_number", "type": "UnsignedDword" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "main_image", "type": "TextureRenderingInfo" },
      {
        "field": "last_game_played_text_info",
        "type": "TextRenderingInfoPointer"
      },
      { "field": "level__text_info", "type": "TextRenderingInfoPointer" },
      { "field": "level_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "money_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "money_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "time_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "time_value_text_info", "type": "TextRenderingInfoPointer" },
      { "field": "sticker_count", "type": "UnsignedDword" },
      { "field": "sticker1", "type": "TextureRenderingInfo" },
      { "field": "sticker2", "type": "TextureRenderingInfo" },
      { "field": "sticker3", "type": "TextureRenderingInfo" },
      { "field": "sticker4", "type": "TextureRenderingInfo" },
      { "field": "sticker5", "type": "TextureRenderingInfo" },
      { "field": "sticker6", "type": "TextureRenderingInfo" },
      { "field": "sticker7", "type": "TextureRenderingInfo" },
      { "field": "sticker8", "type": "TextureRenderingInfo" },
      { "field": "sticker9", "type": "TextureRenderingInfo" },
      { "field": "sticker10", "type": "TextureRenderingInfo" },
      { "field": "sticker11", "type": "TextureRenderingInfo" },
      { "field": "sticker12", "type": "TextureRenderingInfo" },
      { "field": "sticker13", "type": "TextureRenderingInfo" },
      { "field": "sticker14", "type": "TextureRenderingInfo" },
      { "field": "sticker15", "type": "TextureRenderingInfo" },
      { "field": "sticker16", "type": "TextureRenderingInfo" },
      { "field": "sticker17", "type": "TextureRenderingInfo" },
      { "field": "sticker18", "type": "TextureRenderingInfo" },
      { "field": "sticker19", "type": "TextureRenderingInfo" },
      { "field": "sticker20", "type": "TextureRenderingInfo" }
    ],
    "SaveGameHeapOffsetPointer": [
      { "field": "heap_offset", "type": "UnsignedQword" },
      { "field": "journal_popup_ui", "type": "JournalPopupUI" }
    ],
    "ScreenLogoPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~ScreenLogoPointer", "params": "", "return": "" }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "logo_mossmouth", "type": "TextureRenderingInfo" },
      { "field": "logo_blitworks", "type": "TextureRenderingInfo" },
      { "field": "logo_fmod", "type": "TextureRenderingInfo" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" }
    ],
    "ScreenIntroPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenIntroPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "TextureRenderingInfo" }
    ],
    "ScreenProloguePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~ScreenProloguePointer", "params": "", "return": "" }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "line1", "type": "StringsTableID" },
      { "field": "line2", "type": "StringsTableID" },
      { "field": "line3", "type": "StringsTableID" },
      { "field": "line1_alpha", "type": "Float" },
      { "field": "line2_alpha", "type": "Float" },
      { "field": "line3_alpha", "type": "Float" }
    ],
    "ScreenTitlePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenTitlePointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "logo_spelunky2", "type": "TextureRenderingInfo" },
      { "field": "ana", "type": "TextureRenderingInfo" },
      {
        "field": "ana_right_eyeball_torch_reflection",
        "type": "TextureRenderingInfo",
        "comment": "right from her perspective"
      },
      {
        "field": "ana_left_eyeball_torch_reflection",
        "type": "TextureRenderingInfo",
        "comment": "left from her perspective"
      },
      {
        "field": "particle_torchflame_smoke",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_backflames",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_flames",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_backflames_animated",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_flames_animated",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_ash",
        "type": "ParticleEmitterInfoPointer"
      },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "Float" },
      { "field": "background_music", "type": "SoundMeta" },
      { "field": "fire_sound", "type": "SoundMeta" },
      { "field": "unknown11", "type": "Float" },
      { "field": "unknown12", "type": "Float" },
      { "field": "unknown13", "type": "Float" },
      { "field": "unknown14", "type": "Float" },
      { "field": "unknown15", "type": "Float" },
      { "field": "unknown16", "type": "Float" },
      { "field": "unknown17", "type": "Float" },
      { "field": "unknown18", "type": "Float" },
      { "field": "unknown19", "type": "Float" }
    ],
    "ScreenMenuPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~ScreenMenuPointer", "params": "", "return": "" }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "Float" },
      { "field": "unknown5", "type": "Float" },
      { "field": "unknown6", "type": "Float" },
      { "field": "unknown7", "type": "Float" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "Float" },
      { "field": "unknown10", "type": "Float" },
      { "field": "unknown11", "type": "Float" },
      { "field": "unknown12", "type": "Float" },
      { "field": "unknown13", "type": "UnsignedDword" },
      { "field": "tunnel_background", "type": "TextureRenderingInfo" },
      { "field": "cthulhu_disc", "type": "TextureRenderingInfo" },
      { "field": "tunnel_ring_darkbrown", "type": "TextureRenderingInfo" },
      { "field": "cthulhu_body", "type": "TextureRenderingInfo" },
      { "field": "tunnel_ring_lightbrown", "type": "TextureRenderingInfo" },
      { "field": "vine_left", "type": "TextureRenderingInfo" },
      { "field": "vine_right", "type": "TextureRenderingInfo" },
      { "field": "skull_left", "type": "TextureRenderingInfo" },
      { "field": "salamander_right", "type": "TextureRenderingInfo" },
      { "field": "left_spear", "type": "TextureRenderingInfo" },
      { "field": "right_spear", "type": "TextureRenderingInfo" },
      { "field": "spear_dangler", "type": "TextureRenderingInfo" },
      { "field": "play_scroll", "type": "TextureRenderingInfo" },
      { "field": "info_toast", "type": "TextureRenderingInfo" },
      { "field": "unknown15", "type": "TextureRenderingInfo" },
      { "field": "unknown16a", "type": "UnsignedDword" },
      { "field": "unknown16b", "type": "UnsignedDword" },
      { "field": "cthulhu_sound", "type": "SoundMeta" },
      { "field": "unknown16e", "type": "DataPointer" },
      { "field": "unknown16f", "type": "DataPointer" },
      { "field": "unknown16g", "type": "Float" },
      { "field": "unknown16h", "type": "Float" },
      { "field": "unknown16i", "type": "Float" },
      { "field": "unknown16j", "type": "Float" },
      { "field": "unknown16k", "type": "DataPointer" },
      { "field": "unknown17", "type": "StdVector", "vectortype": "DataPointer" },
      { "field": "unknown20", "type": "StdVector", "vectortype": "Dword" },
      { "field": "buttons?", "type": "Flags32" },
      { "field": "unknown22", "type": "Dword" },
      { "field": "unknown23", "type": "UnsignedDword" },
      { "field": "unknown24", "type": "UnsignedDword" },
      { "field": "selected_menu_index", "type": "UnsignedDword" },
      { "field": "unknown26", "type": "UnsignedDword" },
      { "field": "unknown27", "type": "UnsignedDword" },
      { "field": "unknown28", "type": "UnsignedDword" },
      { "field": "unknown29a", "type": "UnsignedDword" },
      { "field": "unknown29b", "type": "UnsignedDword" },
      { "field": "menu_text_opacity", "type": "Float" },
      { "field": "spear_1_position", "type": "Float" },
      { "field": "spear_2_position", "type": "Float" },
      { "field": "spear_3_position", "type": "Float" },
      { "field": "spear_4_position", "type": "Float" },
      { "field": "spear_5_position", "type": "Float" },
      { "field": "spear_6_position", "type": "Float" },
      {
        "field": "spear_1_dangler_animation_frame_col",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_1_dangler_animation_frame_row",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_2_dangler_animation_frame_col",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_2_dangler_animation_frame_row",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_3_dangler_animation_frame_col",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_3_dangler_animation_frame_row",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_4_dangler_animation_frame_col",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_4_dangler_animation_frame_row",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_5_dangler_animation_frame_col",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_5_dangler_animation_frame_row",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_6_dangler_animation_frame_col",
        "type": "UnsignedDword"
      },
      {
        "field": "spear_6_dangler_animation_frame_row",
        "type": "UnsignedDword"
      },
      { "field": "spear_1_dangle_momentum", "type": "Float" },
      { "field": "spear_2_dangle_momentum", "type": "Float" },
      { "field": "spear_3_dangle_momentum", "type": "Float" },
      { "field": "spear_4_dangle_momentum", "type": "Float" },
      { "field": "spear_5_dangle_momentum", "type": "Float" },
      { "field": "spear_6_dangle_momentum", "type": "Float" },
      { "field": "spear_1_dangle_angle", "type": "Float" },
      { "field": "spear_2_dangle_angle", "type": "Float" },
      { "field": "spear_3_dangle_angle", "type": "Float" },
      { "field": "spear_4_dangle_angle", "type": "Float" },
      { "field": "spear_5_dangle_angle", "type": "Float" },
      { "field": "spear_6_dangle_angle", "type": "Float" },
      { "field": "play_scroll_descend_timer", "type": "Float" },
      { "field": "scroll_text", "type": "StringsTableID" },
      { "field": "cthulhu_disc_ring_angle", "type": "Float" },
      { "field": "cthulhu_disc_split_progress", "type": "Float" },
      { "field": "cthulhu_disc_y", "type": "Float" },
      { "field": "cthulhu_timer", "type": "Float" },
      { "field": "unknown30", "type": "Float" },
      { "field": "cthulhu_animation", "type": "Qword" }
    ],
    "ScreenOptionsPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~ScreenOptionsPointer", "params": "", "return": "" }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "DataPointer" },
      { "field": "unknown5", "type": "DataPointer" },
      { "field": "unknown6", "type": "DataPointer" },
      { "field": "unknown7", "type": "DataPointer" },
      { "field": "unknown8", "type": "DataPointer" },
      { "field": "unknown9", "type": "DataPointer" },
      { "field": "selected_menu_index", "type": "UnsignedDword" },
      {
        "field": "key_press_timer",
        "type": "UnsignedWord",
        "comment": "might be two separate values"
      },
      { "field": "unknown12", "type": "UnsignedWord" },
      { "field": "moved_left", "type": "Bool" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      { "field": "unknown14", "type": "UnsignedByte" },
      { "field": "unknown15", "type": "UnsignedByte" },
      { "field": "unknown16", "type": "UnsignedByte" },
      { "field": "unknown17", "type": "UnsignedByte" },
      { "field": "brick_border", "type": "TextureRenderingInfo" },
      { "field": "top_bottom_woodpanels_velocity", "type": "Float" },
      {
        "field": "top_bottom_woodpanels_progress",
        "type": "Float",
        "comment": "set to 0 to start sliding in"
      },
      {
        "field": "scroll_unfurl_progress",
        "type": "Float",
        "comment": "set to 0 to start unfurl"
      },
      { "field": "unknown21", "type": "Float" },
      { "field": "bottom_woodpanel_y", "type": "Float" },
      { "field": "unknown23", "type": "Float" },
      { "field": "top_bottom_woodpanels_slide_in_related", "type": "Float" },
      { "field": "bottom_woodpanel", "type": "TextureRenderingInfo" },
      { "field": "top_woodpanel", "type": "TextureRenderingInfo" },
      {
        "field": "unknown27",
        "type": "TextureRenderingInfo",
        "comment": "all forced, changes when going a level deeper or higher in the options"
      },
      {
        "field": "top_woodpanel_left_scrollhandle",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "top_woodpanel_right_scrollhandle",
        "type": "TextureRenderingInfo"
      },
      { "field": "button_right_caption", "type": "StringsTableID" },
      { "field": "button_middle_caption", "type": "StringsTableID" },
      { "field": "top_woodpanel_visible", "type": "Bool" },
      { "field": "bottom_woodpanel_visible", "type": "Bool" },
      { "field": "toggle_woodpanel_slidein_animation", "type": "Bool" },
      { "field": "capitalize_top_woodpanel", "type": "Bool" },
      { "field": "unknown28", "type": "UnsignedDword" },
      { "field": "current_menu_1", "type": "UnsignedDword" },
      { "field": "current_menu_2", "type": "UnsignedDword" },
      { "field": "unknown31", "type": "UnsignedDword" },
      { "field": "unknown32", "type": "UnsignedDword" },
      { "field": "unknown33", "type": "UnsignedDword" },
      { "field": "unknown34", "type": "UnsignedDword" },
      { "field": "unknown35", "type": "UnsignedDword" },
      { "field": "unknown36", "type": "UnsignedDword" },
      { "field": "unknown37", "type": "UnsignedDword" },
      { "field": "unknown38", "type": "UnsignedDword" },
      { "field": "topleft_woodpanel_esc", "type": "TextureRenderingInfo" },
      { "field": "brick_background", "type": "TextureRenderingInfo" },
      { "field": "brick_middlelayer", "type": "TextureRenderingInfo" },
      { "field": "brick_foreground", "type": "TextureRenderingInfo" },
      { "field": "selected_item_rounded_rect", "type": "TextureRenderingInfo" },
      { "field": "selected_item_scarab", "type": "TextureRenderingInfo" },
      { "field": "item_option_arrow_left", "type": "TextureRenderingInfo" },
      { "field": "item_option_arrow_right", "type": "TextureRenderingInfo" },
      { "field": "tooltip_background", "type": "TextureRenderingInfo" },
      {
        "field": "progressbar_background",
        "type": "TextureRenderingInfo",
        "comment": "brightness 'progressbar' background texture"
      },
      { "field": "unknown40", "type": "TextureRenderingInfo" },
      { "field": "progressbar_foreground", "type": "TextureRenderingInfo" },
      {
        "field": "progressbar_position_indicator",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "sectionheader_background",
        "type": "TextureRenderingInfo",
        "comment": "behind 'GRAPHICS' and 'AUDIO' "
      },
      { "field": "unknown44", "type": "TextureRenderingInfo" },
      { "field": "unknown45", "type": "TextureRenderingInfo" },
      { "field": "topleft_woodpanel_esc_slidein_timer", "type": "Float" },
      { "field": "text_fadein_timer", "type": "Float" },
      { "field": "vertical_scroll_effect_timer", "type": "Float" },
      { "field": "unknown49", "type": "UnsignedByte" },
      { "field": "unknown50", "type": "UnsignedByte" },
      { "field": "unknown51", "type": "UnsignedByte" }
    ],
    "ScreenLeaderboardsPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenLeaderboardsPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" }
      // INCOMPLETE
    ],
    "ScreenOnlineLobbyPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenOnlineLobbyPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedByte" },
      { "field": "woodpanels_slidein_timer", "type": "Float" },
      { "field": "scroll_unfurl_timer", "type": "Float" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "woodpanel_bottom", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_top", "type": "TextureRenderingInfo" },
      { "field": "unknown13", "type": "TextureRenderingInfo" },
      { "field": "left_scroll_handle", "type": "TextureRenderingInfo" },
      { "field": "right_scroll_handle", "type": "TextureRenderingInfo" },
      { "field": "scroll_text_id", "type": "StringsTableID" },
      { "field": "btn_left_text_id", "type": "StringsTableID" },
      { "field": "btn_right_text_id", "type": "StringsTableID" },
      { "field": "btn_center_text_id", "type": "StringsTableID" },
      { "field": "woodpanel_top_visible", "type": "Bool" },
      { "field": "woodpanel_bottom_visible", "type": "Bool" },
      { "field": "toggle_panels_slidein", "type": "Bool" },
      { "field": "unknown21", "type": "Bool" },
      { "field": "player_1", "type": "OnlineLobbyScreenPlayer" },
      { "field": "player_2", "type": "OnlineLobbyScreenPlayer" },
      { "field": "player_3", "type": "OnlineLobbyScreenPlayer" },
      { "field": "player_4", "type": "OnlineLobbyScreenPlayer" },
      { "field": "background_image", "type": "TextureRenderingInfo" },
      { "field": "unknown22", "type": "UnsignedQword" },
      { "field": "unknown23", "type": "UnsignedQword" },
      { "field": "unknown24", "type": "UnsignedQword" },
      { "field": "unknown25", "type": "UnsignedQword" },
      { "field": "unknown26", "type": "UnsignedQword" },
      { "field": "unknown27", "type": "UnsignedQword" },
      { "field": "unknown28", "type": "UnsignedQword" },
      { "field": "unknown29", "type": "UnsignedQword" },
      { "field": "unknown30", "type": "UnsignedQword" },
      { "field": "unknown36", "type": "TextureRenderingInfo" },
      { "field": "unknown37", "type": "TextureRenderingInfo" },
      { "field": "unknown38", "type": "Float" },
      { "field": "topleft_woodpanel_esc", "type": "TextureRenderingInfo" },
      { "field": "topleft_woodpanel_esc_slidein_timer", "type": "Float" },
      { "field": "character_walk_offset", "type": "Float" },
      { "field": "character_facing_left", "type": "Bool" },
      { "field": "move_direction", "type": "Byte" },
      { "field": "unknown41", "type": "UnsignedByte" },
      { "field": "unknown42", "type": "UnsignedByte" },
      { "field": "character", "type": "TextureRenderingInfo" },
      { "field": "player_ready_icon", "type": "TextureRenderingInfo" },
      { "field": "render_timer_dupe", "type": "Float" },
      { "field": "arrow_left", "type": "TextureRenderingInfo" },
      { "field": "arrow_right", "type": "TextureRenderingInfo" },
      { "field": "another_timer", "type": "Float" },
      { "field": "arrow_left_hor_offset", "type": "Float" },
      { "field": "arrow_right_hor_offset", "type": "Float" },
      { "field": "platform_icon", "type": "TextureRenderingInfo" },
      { "field": "player_count", "type": "UnsignedByte" },
      { "field": "searching_for_players", "type": "Bool" },
      { "field": "unknown47", "type": "UnsignedByte" },
      { "field": "unknown48", "type": "UnsignedByte" },
      { "field": "another_timer_2", "type": "Float" },
      { "field": "show_code_panel", "type": "Bool" },
      { "field": "unknown49", "type": "UnsignedByte" },
      { "field": "unknown50", "type": "UnsignedByte" },
      { "field": "unknown51", "type": "UnsignedByte" },
      { "field": "unknown53", "type": "UnsignedDword" },
      {
        "field": "enter_code_screen_vftable",
        "type": "DataPointer",
        "comment": "this starts a new object"
      },
      { "field": "enter_code_render_timer", "type": "Float" },
      { "field": "unknown54", "type": "UnsignedDword" },
      { "field": "unknown56", "type": "Float" },
      { "field": "enter_code_woodpanel_bottom_slidein_pos", "type": "Float" },
      { "field": "unknown58", "type": "Float" },
      { "field": "unknown59", "type": "Float" },
      { "field": "unknown60", "type": "Float" },
      {
        "field": "enter_code_woodpanel_bottom",
        "type": "TextureRenderingInfo"
      },
      { "field": "unknown61", "type": "TextureRenderingInfo" },
      { "field": "unknown62", "type": "TextureRenderingInfo" },
      { "field": "unknown63", "type": "TextureRenderingInfo" },
      { "field": "unknown64", "type": "TextureRenderingInfo" },
      { "field": "text_id_1", "type": "StringsTableID" },
      { "field": "text_id_2", "type": "StringsTableID" },
      { "field": "enter_code_btn_right_text_id", "type": "StringsTableID" },
      { "field": "text_id_4", "type": "StringsTableID" },
      { "field": "enter_code_woodpanel_top_visible", "type": "Bool" },
      { "field": "enter_code_woodpanel_bottom_visible", "type": "Bool" },
      { "field": "enter_code_toggle_panels_slidein", "type": "Bool" },
      { "field": "unknown68", "type": "Bool" },
      { "field": "unknown69", "type": "UnsignedDword" },
      {
        "field": "selected_character",
        "type": "UnsignedDword",
        "comment": "the character with the gold outline"
      },
      { "field": "unknown71a", "type": "Bool" },
      { "field": "unknown71b", "type": "UnsignedByte" },
      { "field": "code_char_1", "type": "UTF16Char" },
      { "field": "code_char_2", "type": "UTF16Char" },
      { "field": "code_char_3", "type": "UTF16Char" },
      { "field": "code_char_4", "type": "UTF16Char" },
      { "field": "code_char_5", "type": "UTF16Char" },
      { "field": "code_char_6", "type": "UTF16Char" },
      { "field": "code_char_7", "type": "UTF16Char" },
      { "field": "code_char_8", "type": "UTF16Char" },
      { "field": "code_char_terminator", "type": "UnsignedWord" },
      { "field": "characters_entered_count", "type": "UnsignedDword" },
      {
        "field": "enter_code_topleft_woodpanel_esc_slidein_timer",
        "type": "Float"
      },
      { "field": "enter_code_banner_text_id", "type": "StringsTableID" },
      { "field": "enter_code_OK_text_id", "type": "StringsTableID" },
      {
        "field": "enter_code_main_woodpanel_left",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "enter_code_main_woodpanel_center",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "enter_code_main_woodpanel_right",
        "type": "TextureRenderingInfo"
      },
      { "field": "enter_code_banner", "type": "TextureRenderingInfo" },
      { "field": "enter_code_char_cutouts", "type": "TextureRenderingInfo" },
      { "field": "enter_code_pointing_hand", "type": "TextureRenderingInfo" },
      { "field": "enter_code_buttons", "type": "TextureRenderingInfo" },
      { "field": "unknown85", "type": "TextureRenderingInfo" },
      { "field": "enter_code_OK_panel", "type": "TextureRenderingInfo" },
      { "field": "enter_code_OK_panel_slidein_timer", "type": "Float" },
      { "field": "unknown87", "type": "Dword" },
      {
        "field": "enter_code_your_code_scroll",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "enter_code_your_code_scroll_left_handle",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "enter_code_your_code_scroll_right_handle",
        "type": "TextureRenderingInfo"
      }
    ],
    "OnlineLobbyScreenPlayer": [
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "character", "type": "State8", "ref": "character_states" },
      { "field": "ready", "type": "Bool" },
      { "field": "unknown2", "type": "UnsignedByte" }
    ],
    "ScreenOnlineLoadingPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenOnlineLoadingPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "ouroboros", "type": "TextureRenderingInfo" },
      { "field": "ouroboros_angle", "type": "Float" }
    ],
    "ScreenPlayerProfilePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenPlayerProfilePointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" }
    ],
    "ScreenSeedInputPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~ScreenSeedInputPointer", "params": "", "return": "" }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "UnsignedWord" },
      { "field": "unknown5", "type": "UnsignedWord" },
      { "field": "bottom_woodpanel_slideup_timer", "type": "Float" },
      { "field": "unknown_timer", "type": "Float" },
      { "field": "unknown6", "type": "Float" },
      { "field": "bottom_woodpanel_y", "type": "Float" },
      { "field": "bottom_woodpanel", "type": "TextureRenderingInfo" },
      { "field": "unknown8", "type": "TextureRenderingInfo" },
      { "field": "unknown9", "type": "TextureRenderingInfo" },
      { "field": "unknown10", "type": "TextureRenderingInfo" },
      { "field": "unknown11", "type": "TextureRenderingInfo" },
      { "field": "unknown12", "type": "StringsTableID" },
      { "field": "unknown13", "type": "StringsTableID" },
      { "field": "buttons_text_id", "type": "StringsTableID" },
      { "field": "unknown15", "type": "StringsTableID" },
      { "field": "unknown16", "type": "UnsignedByte" },
      { "field": "unknown17", "type": "UnsignedByte" },
      { "field": "unknown18", "type": "UnsignedByte" },
      { "field": "unknown19", "type": "UnsignedByte" },
      { "field": "unknown20", "type": "UnsignedByte" },
      { "field": "unknown21", "type": "UnsignedByte" },
      { "field": "unknown22", "type": "UnsignedByte" },
      { "field": "unknown23", "type": "UnsignedByte" },
      { "field": "unknown24", "type": "UnsignedDword" },
      { "field": "unknown25", "type": "UnsignedWord" },
      { "field": "seed_char_1", "type": "UTF16Char" },
      { "field": "seed_char_2", "type": "UTF16Char" },
      { "field": "seed_char_3", "type": "UTF16Char" },
      { "field": "seed_char_4", "type": "UTF16Char" },
      { "field": "seed_char_5", "type": "UTF16Char" },
      { "field": "seed_char_6", "type": "UTF16Char" },
      { "field": "seed_char_7", "type": "UTF16Char" },
      { "field": "seed_char_8", "type": "UTF16Char" },
      { "field": "seed_char_terminator", "type": "UnsignedWord" },
      { "field": "unknown38", "type": "UnsignedWord" },
      { "field": "unknown39", "type": "UnsignedWord" },
      { "field": "topleft_woodpanel_esc_slidein_timer", "type": "Float" },
      { "field": "scroll_text_id", "type": "StringsTableID" },
      { "field": "start_text_id", "type": "StringsTableID" },
      { "field": "main_woodpanel_left_border", "type": "TextureRenderingInfo" },
      { "field": "main_woodpanel_center", "type": "TextureRenderingInfo" },
      {
        "field": "main_woodpanel_right_border",
        "type": "TextureRenderingInfo"
      },
      { "field": "top_scroll", "type": "TextureRenderingInfo" },
      { "field": "seed_letter_cutouts", "type": "TextureRenderingInfo" },
      { "field": "unknown40", "type": "TextureRenderingInfo" },
      { "field": "unknown41", "type": "TextureRenderingInfo" },
      { "field": "topleft_woodpanel_esc", "type": "TextureRenderingInfo" },
      { "field": "start_sidepanel", "type": "TextureRenderingInfo" },
      { "field": "start_sidepanel_slidein_timer", "type": "Float" }
    ],
    "ScreenCharacterSelectPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenCharacterSelectPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "Float" },
      { "field": "unknown5", "type": "Float" },
      { "field": "unknown6", "type": "Float" },
      { "field": "unknown7", "type": "Float" },
      { "field": "main_background_zoom_related1", "type": "Float" },
      { "field": "main_background_zoom_related2", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "UnsignedDword" },
      { "field": "main_background_zoom_timer", "type": "Float" },
      { "field": "main_background_zoom_target", "type": "Float" },
      { "field": "blurred_border_zoom", "type": "Float" },
      { "field": "unknown14", "type": "Float" },
      { "field": "unknown15", "type": "Float" },
      { "field": "unknown16", "type": "Float" },
      { "field": "unknown17", "type": "Float" },
      { "field": "blurred_border_animation_frame?", "type": "UnsignedDword" },
      { "field": "unknown19", "type": "UnsignedByte" },
      { "field": "unknown20", "type": "UnsignedByte" },
      { "field": "unknown21", "type": "UnsignedByte" },
      { "field": "unknown22", "type": "UnsignedByte" },
      { "field": "blurred_border_zoom_timer", "type": "Float" },
      { "field": "blurred_border_zoom_target", "type": "Float" },
      { "field": "unknown25", "type": "Float" },
      { "field": "top_bottom_woodpanel_slidein_timer", "type": "Float" },
      { "field": "top_scroll_unfurl_timer", "type": "Float" },
      { "field": "unknown28", "type": "Float" },
      { "field": "unknown29", "type": "Float" },
      { "field": "unknown30", "type": "UnsignedDword" },
      { "field": "bottom_woodpanel", "type": "TextureRenderingInfo" },
      { "field": "top_woodpanel", "type": "TextureRenderingInfo" },
      { "field": "unknown32", "type": "TextureRenderingInfo" },
      { "field": "left_scroll_handle", "type": "TextureRenderingInfo" },
      { "field": "right_scroll_handle", "type": "TextureRenderingInfo" },
      { "field": "left_button_text", "type": "StringsTableID" },
      { "field": "right_button_text", "type": "StringsTableID" },
      { "field": "middle_button_text", "type": "StringsTableID" },
      { "field": "top_woodpanel_visible", "type": "Bool" },
      { "field": "bottom_woodpanel_visible", "type": "Bool" },
      { "field": "toggle_woodpanel_slidein_animation", "type": "Bool" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "mine_entrance_background", "type": "TextureRenderingInfo" },
      { "field": "character", "type": "TextureRenderingInfo" },
      { "field": "character_shadow", "type": "TextureRenderingInfo" },
      { "field": "character_flag", "type": "TextureRenderingInfo" },
      { "field": "character_left_arrow", "type": "TextureRenderingInfo" },
      { "field": "character_right_arrow", "type": "TextureRenderingInfo" },
      { "field": "unknown45", "type": "TextureRenderingInfo" },
      { "field": "mine_entrance_border", "type": "TextureRenderingInfo" },
      { "field": "mine_entrance_shutter", "type": "TextureRenderingInfo" },
      { "field": "unknown47", "type": "TextureRenderingInfo" },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "blurred_border", "type": "TextureRenderingInfo" },
      { "field": "blurred_border2", "type": "TextureRenderingInfo" },
      { "field": "unknown51", "type": "TextureRenderingInfo" },
      { "field": "topleft_woodpanel_esc", "type": "TextureRenderingInfo" },
      { "field": "start_sidepanel", "type": "TextureRenderingInfo" },
      { "field": "quick_select_panel", "type": "TextureRenderingInfo" },
      {
        "field": "quick_select_selected_char_background",
        "type": "TextureRenderingInfo"
      },
      { "field": "quick_select_panel_related", "type": "TextureRenderingInfo" },
      { "field": "player_1_shutter_timer", "type": "Float" },
      { "field": "player_2_shutter_timer", "type": "Float" },
      { "field": "player_3_shutter_timer", "type": "Float" },
      { "field": "player_4_shutter_timer", "type": "Float" },
      { "field": "player_1_x_position", "type": "Float" },
      { "field": "player_2_x_position", "type": "Float" },
      { "field": "player_3_x_position", "type": "Float" },
      { "field": "player_4_x_position", "type": "Float" },
      { "field": "player_1_y_position", "type": "Float" },
      { "field": "player_2_y_position", "type": "Float" },
      { "field": "player_3_y_position", "type": "Float" },
      { "field": "player_4_y_position", "type": "Float" },
      { "field": "unknown52", "type": "Float" },
      { "field": "unknown53", "type": "Float" },
      { "field": "unknown54", "type": "Float" },
      { "field": "unknown55", "type": "Float" },
      {
        "field": "player_walk_timer?",
        "type": "Float",
        "comment": "faster timer to make them walk fast when selecting a different character?"
      },
      { "field": "player_1_left_arrow_slidein_timer", "type": "Float" },
      { "field": "player_1_right_arrow_slidein_timer", "type": "Float" },
      { "field": "player_2_left_arrow_slidein_timer", "type": "Float" },
      { "field": "player_2_right_arrow_slidein_timer", "type": "Float" },
      { "field": "player_3_left_arrow_slidein_timer", "type": "Float" },
      { "field": "player_3_right_arrow_slidein_timer", "type": "Float" },
      { "field": "player_4_left_arrow_slidein_timer", "type": "Float" },
      { "field": "player_4_right_arrow_slidein_timer", "type": "Float" },
      { "field": "player_1_facing_left", "type": "Bool" },
      { "field": "player_2_facing_left", "type": "Bool" },
      { "field": "player_3_facing_left", "type": "Bool" },
      { "field": "player_4_facing_left", "type": "Bool" },
      { "field": "player_1_quickselect_shown", "type": "Bool" },
      { "field": "player_2_quickselect_shown", "type": "Bool" },
      { "field": "player_3_quickselect_shown", "type": "Bool" },
      { "field": "player_4_quickselect_shown", "type": "Bool" },
      { "field": "player_1_quickselect_fadein_timer", "type": "Float" },
      { "field": "player_2_quickselect_fadein_timer", "type": "Float" },
      { "field": "player_3_quickselect_fadein_timer", "type": "Float" },
      { "field": "player_4_quickselect_fadein_timer", "type": "Float" },
      { "field": "player_1_quickselect_column", "type": "UnsignedDword" },
      { "field": "player_1_quickselect_row", "type": "UnsignedDword" },
      { "field": "player_2_quickselect_column", "type": "UnsignedDword" },
      { "field": "player_2_quickselect_row", "type": "UnsignedDword" },
      { "field": "player_3_quickselect_column", "type": "UnsignedDword" },
      { "field": "player_3_quickselect_row", "type": "UnsignedDword" },
      { "field": "player_4_quickselect_column", "type": "UnsignedDword" },
      { "field": "player_4_quickselect_row", "type": "UnsignedDword" },
      { "field": "player_1_quickselect_wiggle_angle", "type": "Float" },
      { "field": "player_2_quickselect_wiggle_angle", "type": "Float" },
      { "field": "player_3_quickselect_wiggle_angle", "type": "Float" },
      { "field": "player_4_quickselect_wiggle_angle", "type": "Float" },
      { "field": "another_timer", "type": "Float" },
      { "field": "topleft_woodpanel_esc_slidein_timer", "type": "Float" },
      { "field": "start_panel_slidein_timer", "type": "Float" },
      { "field": "action_buttons_keycap_size", "type": "Float" },
      { "field": "unknown64a", "type": "Bool" },
      { "field": "unknown64b", "type": "Bool" },
      { "field": "unknown64c", "type": "Bool" },
      { "field": "unknown64d", "type": "Bool" },
      { "field": "unknown65", "type": "UnsignedDword" },
      { "field": "not_ready_to_start_yet", "type": "Bool" },
      {
        "field": "available_mine_entrances",
        "type": "UnsignedByte",
        "comment": "The rest are boarded off"
      },
      { "field": "amount_of_mine_entrances_activated", "type": "UnsignedByte" },
      { "field": "unknown66", "type": "UnsignedByte" },
      { "field": "reset_func?", "type": "CodePointer" },
      {
        "field": "buttons",
        "type": "Flags32",
        "flags": {
          "1": "player_1_left",
          "2": "player_1_right",
          "3": "player_1_locked_in",
          "4": "-",
          "5": "-",
          "6": "-",
          "7": "-",
          "8": "-",
          "9": "player_2_left",
          "10": "player_2_right",
          "11": "player_2_locked_in",
          "12": "-",
          "13": "-",
          "14": "-",
          "15": "-",
          "16": "-",
          "17": "player_3_left",
          "18": "player_3_right",
          "19": "player_3_locked_in",
          "20": "-",
          "21": "-",
          "22": "-",
          "23": "-",
          "24": "-",
          "25": "player_4_left",
          "26": "player_4_right",
          "27": "player_4_locked_in",
          "28": "-",
          "29": "-",
          "30": "-",
          "31": "-",
          "32": "-"
        }
      },
      { "field": "unknown69", "type": "TextureRenderingInfo" },
      { "field": "opacity", "type": "Float" },
      { "field": "start_pressed", "type": "Bool" },
      { "field": "transition_to_game_started", "type": "Bool" },
      { "field": "unknown71c", "type": "UnsignedByte" },
      { "field": "unknown71d", "type": "UnsignedByte" },
      { "field": "unknown72", "type": "UnsignedDword" },
      { "field": "flying_thing_1", "type": "FlyingThing" },
      { "field": "flying_thing_2", "type": "FlyingThing" },
      { "field": "flying_thing_3", "type": "FlyingThing" },
      { "field": "flying_thing_4", "type": "FlyingThing" },
      { "field": "flying_thing_5", "type": "FlyingThing" },
      { "field": "flying_thing_6", "type": "FlyingThing" },
      {
        "field": "flying_thing_countdown",
        "type": "UnsignedWord",
        "comment": "when 0, flying things appear"
      },
      { "field": "unknown79", "type": "Word" },
      { "field": "unknown80", "type": "UnsignedDword" },
      {
        "field": "particle_ceilingdust_smoke",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_ceilingdust_rubble",
        "type": "ParticleEmitterInfoPointer"
      },
      { "field": "particle_mist", "type": "ParticleEmitterInfoPointer" },
      {
        "field": "particle_torchflame_smoke1",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_flames1",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_smoke2",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_flames2",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_smoke3",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_flames3",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_smoke4",
        "type": "ParticleEmitterInfoPointer"
      },
      {
        "field": "particle_torchflame_flames4",
        "type": "ParticleEmitterInfoPointer"
      },
      { "field": "sound", "type": "SoundMeta" }
    ],
    "FlyingThing": [
      { "field": "nodes", "type": "TextureRenderingInfo" },
      { "field": "entity_type", "type": "EntityDBID" },
      { "field": "unknown1", "type": "Bool" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      { "field": "params", "type": "FlyingThingParams" }
    ],
    "FlyingThingParams": [
      { "field": "unknown1", "type": "Float" },
      { "field": "unknown2", "type": "Float" },
      { "field": "spritesheet_column", "type": "Float" },
      { "field": "spritesheet_row", "type": "Float" },
      {
        "field": "spritesheet_animation_length",
        "type": "Float",
        "comment": "how many sprites are in the cycle"
      },
      { "field": "unknown6", "type": "Float" },
      { "field": "unknown7", "type": "UnsignedByte" },
      { "field": "unknown8", "type": "UnsignedByte" },
      { "field": "unknown9", "type": "UnsignedByte" },
      { "field": "unknown10", "type": "UnsignedByte" },
      { "field": "velocity_x", "type": "Float" },
      { "field": "amplitude", "type": "Float" },
      { "field": "frequency", "type": "Float" },
      { "field": "sinewave_angle", "type": "Float" },
      { "field": "unknown15", "type": "Float" },
      { "field": "unknown16", "type": "Float" },
      { "field": "unknown17", "type": "UnsignedByte" },
      { "field": "unknown18", "type": "UnsignedByte" },
      { "field": "unknown19", "type": "UnsignedByte" },
      { "field": "unknown20", "type": "UnsignedByte" },
      { "field": "unknown21", "type": "UnsignedDword" },
      { "field": "unknown22", "type": "UnsignedDword" }
    ],
    "ScreenArenaPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenArenaPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "brick_background_animation", "type": "ScreenZoomAnimation" },
      { "field": "blurry_border_animation", "type": "ScreenZoomAnimation" },
      { "field": "unknown6", "type": "Float" },
      { "field": "top_woodpanel_slidein_timer", "type": "Float" },
      { "field": "top_scroll_unfurl_timer", "type": "Float" },
      { "field": "unknown11", "type": "Float" },
      { "field": "unknown12", "type": "Float" },
      { "field": "unknown13", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_top", "type": "TextureRenderingInfo" },
      { "field": "unknown15", "type": "TextureRenderingInfo" },
      { "field": "left_scroll_handle", "type": "TextureRenderingInfo" },
      { "field": "right_scroll_handle", "type": "TextureRenderingInfo" },
      { "field": "scroll_text", "type": "StringsTableID" },
      { "field": "unknown17", "type": "StringsTableID" },
      { "field": "unknown18", "type": "StringsTableID" },
      { "field": "unknown19", "type": "StringsTableID" },
      { "field": "top_woodpanel_visible", "type": "Bool" },
      { "field": "bottom_woodpanel_visible", "type": "Bool" },
      { "field": "woodpanels_toggle", "type": "Bool" },
      { "field": "unknown20d", "type": "Bool" },
      { "field": "brick_background", "type": "TextureRenderingInfo" },
      { "field": "blurry_border", "type": "TextureRenderingInfo" },
      { "field": "blurry_border2", "type": "TextureRenderingInfo" },
      { "field": "characters_drawing", "type": "TextureRenderingInfo" },
      { "field": "info_black_background", "type": "TextureRenderingInfo" },
      { "field": "main_panel_top_left_corner", "type": "TextureRenderingInfo" },
      { "field": "main_panel_top", "type": "TextureRenderingInfo" },
      {
        "field": "main_panel_top_right_corner",
        "type": "TextureRenderingInfo"
      },
      { "field": "main_panel_left", "type": "TextureRenderingInfo" },
      { "field": "main_panel_center", "type": "TextureRenderingInfo" },
      { "field": "main_panel_right", "type": "TextureRenderingInfo" },
      {
        "field": "main_panel_bottom_left_corner",
        "type": "TextureRenderingInfo"
      },
      { "field": "main_panel_bottom", "type": "TextureRenderingInfo" },
      {
        "field": "main_panel_bottom_right_corner",
        "type": "TextureRenderingInfo"
      },
      { "field": "rules_scroll", "type": "TextureRenderingInfo" },
      { "field": "black_option_boxes_left", "type": "TextureRenderingInfo" },
      { "field": "black_option_boxes_center", "type": "TextureRenderingInfo" },
      { "field": "black_option_boxes_right", "type": "TextureRenderingInfo" },
      { "field": "gold_option_outline", "type": "TextureRenderingInfo" },
      { "field": "option_icons", "type": "TextureRenderingInfo" },
      { "field": "option_left_arrow", "type": "TextureRenderingInfo" },
      { "field": "option_right_arrow", "type": "TextureRenderingInfo" },
      { "field": "bottom_left_bricks", "type": "TextureRenderingInfo" },
      { "field": "top_left_esc_panel", "type": "TextureRenderingInfo" },
      { "field": "next_panel", "type": "TextureRenderingInfo" },
      { "field": "option_captions", "type": "ArenaRulesStringsPointer" },
      { "field": "unknown46", "type": "DataPointer" },
      { "field": "unknown47", "type": "DataPointer" },
      { "field": "unknown48", "type": "Bool" },
      { "field": "unknown49", "type": "UnsignedByte" },
      { "field": "unknown50", "type": "UnsignedByte" },
      { "field": "unknown51", "type": "UnsignedByte" },
      { "field": "unknown52", "type": "UnsignedDword" },
      { "field": "center_panels_hor_slide_position", "type": "Float" },
      { "field": "esc_next_panels_slide_timer", "type": "Float" },
      { "field": "main_panel_vertical_scroll_position", "type": "Float" },
      { "field": "selected_option_index", "type": "UnsignedDword" }
    ],
    "ArenaRulesStringsPointer": [
      { "field": "entry_1", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_2", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_3", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_4", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_5", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_6", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_7", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_8", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_9", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_10", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_11", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_12", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_13", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_14", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_15", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_16", "type": "ArenaRulesStringsEntry" },
      { "field": "entry_17", "type": "ArenaRulesStringsEntry" }
    ],
    "ArenaRulesStringsEntry": [
      { "field": "text_1", "type": "StringsTableID" },
      { "field": "text_2", "type": "StringsTableID" },
      { "field": "text_3", "type": "StringsTableID" },
      { "field": "text_4", "type": "StringsTableID" },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "some_offset", "type": "UnsignedQword" }
    ],
    "ScreenZoomAnimation": [
      { "field": "unknown1", "type": "Float" },
      { "field": "unknown2", "type": "Float" },
      { "field": "unknown3", "type": "Float" },
      { "field": "unknown4", "type": "Float" },
      { "field": "unknown5", "type": "Float" },
      { "field": "image?", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "zoom_timer", "type": "Float" },
      { "field": "zoom_target", "type": "Float" }
    ],
    "ScreenArenaItemsPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenArenaItemsPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "Float" },
      { "field": "woodpanel_top_slidein_timer", "type": "Float" },
      { "field": "woodpanel_top_scroll_unfurl_timer", "type": "Float" },
      { "field": "unknown7", "type": "Float" },
      { "field": "unknown8", "type": "Float" },
      { "field": "unknown9", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_top", "type": "TextureRenderingInfo" },
      { "field": "unknown11", "type": "TextureRenderingInfo" },
      { "field": "top_scroll_left_handle", "type": "TextureRenderingInfo" },
      { "field": "top_scroll_right_handle", "type": "TextureRenderingInfo" },
      { "field": "scroll_text_id", "type": "StringsTableID" },
      { "field": "text_id_2", "type": "StringsTableID" },
      { "field": "text_id_3", "type": "StringsTableID" },
      { "field": "text_id_4", "type": "StringsTableID" },
      { "field": "woodpanel_top_visible", "type": "Bool" },
      { "field": "woodpanel_bottom_visible", "type": "Bool" },
      { "field": "woodpanels_toggle", "type": "Bool" },
      { "field": "unknown15", "type": "Bool" },
      { "field": "brick_background", "type": "TextureRenderingInfo" },
      {
        "field": "black_background_bottom_right",
        "type": "TextureRenderingInfo"
      },
      { "field": "woodpanel_bottom", "type": "TextureRenderingInfo" },
      { "field": "scroll_bottom", "type": "TextureRenderingInfo" },
      { "field": "scroll_right_handle_bottom", "type": "TextureRenderingInfo" },
      { "field": "held_item_crate_on_scroll", "type": "TextureRenderingInfo" },
      { "field": "held_item_on_scroll", "type": "TextureRenderingInfo" },
      { "field": "item_background", "type": "TextureRenderingInfo" },
      { "field": "toggles_background", "type": "TextureRenderingInfo" },
      {
        "field": "item_selection_gold_outline",
        "type": "TextureRenderingInfo"
      },
      { "field": "item_icons", "type": "TextureRenderingInfo" },
      { "field": "item_held_badge", "type": "TextureRenderingInfo" },
      { "field": "item_equipped_badge", "type": "TextureRenderingInfo" },
      { "field": "item_off_gray_overlay", "type": "TextureRenderingInfo" },
      { "field": "esc_woodpanel", "type": "TextureRenderingInfo" },
      { "field": "unknown22", "type": "Float" },
      { "field": "unknown23", "type": "Float" },
      { "field": "powerup_deactivation_related", "type": "DataPointer" },
      { "field": "powerup_deactivation_counter?", "type": "UnsignedByte" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedWord" },
      { "field": "unknown25", "type": "UnsignedDword" },
      { "field": "unknown26", "type": "DataPointer" },
      { "field": "unknown27", "type": "DataPointer" },
      { "field": "unknown28", "type": "DataPointer" },
      { "field": "unknown29", "type": "UnsignedDword" },
      { "field": "unknown30", "type": "UnsignedDword" },
      { "field": "unknown31", "type": "UnsignedDword" },
      { "field": "unknown32", "type": "UnsignedDword" },
      { "field": "unknown33", "type": "UnsignedDword" },
      { "field": "center_panels_horizontal_slide_position", "type": "Float" },
      { "field": "esc_panel_slide_timer", "type": "Float" },
      { "field": "selected_item_index", "type": "UnsignedDword" }
    ],
    "JournalPopupUI": [
      { "field": "wiggling_page_icon", "type": "TextureRenderingInfo" },
      { "field": "black_background", "type": "TextureRenderingInfo" },
      { "field": "button_icon", "type": "TextureRenderingInfo" },
      { "field": "wiggling_page_angle", "type": "Float" },
      {
        "field": "chapter_to_show",
        "type": "State32",
        "ref": "journal_chapters"
      },
      {
        "field": "entry_to_show",
        "type": "UnsignedDword",
        "comment": "use the odd entry for the left hand page"
      },
      { "field": "timer", "type": "UnsignedDword" },
      { "field": "slide_position", "type": "Float" }
    ],
    "State": [
      { "field": "p00", "type": "DataPointer" },
      { "field": "screen_last", "type": "State32", "ref": "screen_states" },
      { "field": "screen", "type": "State32", "ref": "screen_states" },
      { "field": "screen_next", "type": "State32", "ref": "screen_states" },
      {
        "field": "loading",
        "type": "State32",
        "states": {
          "0": "Not loading",
          "1": "START",
          "2": "LOADING",
          "3": "END"
        }
      },
      { "field": "illumination", "type": "IlluminationPointer" },
      {
        "field": "fadevalue",
        "type": "Float",
        "comment": "0.0 = all visible ; 1.0 = all black"
      },
      { "field": "fadeout", "type": "UnsignedDword" },
      { "field": "fadein", "type": "UnsignedDword" },
      {
        "field": "loading_black_screen_timer",
        "type": "UnsignedDword",
        "comment": "if state.loading is 1, this timer counts down to 0 while the screen is black (used after Ouroboros, in credits, ...)"
      },
      { "field": "ingame", "type": "Bool" },
      { "field": "playing", "type": "Bool" },
      {
        "field": "pause",
        "type": "Flags8",
        "flags": {
          "1": "Pause menu shown",
          "2": "Level transition pause",
          "3": "Cut-scene being shown",
          "4": "",
          "5": "",
          "6": "Ankh pause",
          "7": "",
          "8": ""
        }
      },
      {
        "field": "pause_related1",
        "type": "Flags8",
        "flags": {
          "1": "",
          "2": "",
          "3": "",
          "4": "",
          "5": "",
          "6": "Ankh activates",
          "7": "",
          "8": ""
        }
      },
      {
        "field": "pause_related2",
        "type": "Flags8",
        "flags": {
          "1": "",
          "2": "",
          "3": "",
          "4": "",
          "5": "",
          "6": "Ankh breaking",
          "7": "",
          "8": ""
        }
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      {
        "field": "quest_flags",
        "type": "Flags32",
        "flags": {
          "1": "Reset",
          "2": "Dark level spawned in world",
          "3": "Vault spawned in world",
          "4": "Next level has shopkeeper outpost (if possible)",
          "5": "Shop spawned",
          "6": "Shortcut used",
          "7": "Seeded mode",
          "8": "Daily challenge mode",
          "9": "Caveman Shopkeeper aggroed",
          "10": "Waddler aggroed",
          "11": "",
          "12": "Eggplant crown picked up",
          "13": "",
          "14": "",
          "15": "",
          "16": "",
          "17": "Udjat key spawned",
          "18": "Black market spawned",
          "19": "Drill spawned",
          "20": "",
          "21": "",
          "22": "",
          "23": "",
          "24": "",
          "25": "Moon challenge spawned",
          "26": "Star challenge spawned",
          "27": "Sun challenge spawned",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      {
        "field": "correct_ushabti",
        "type": "UnsignedByte",
        "comment": "correct_ushabti = anim_frame - (2 * floor(anim_frame/12))"
      },
      { "field": "i3cb", "type": "UnsignedByte" },
      { "field": "i3cc", "type": "UnsignedByte" },
      { "field": "i3cd", "type": "UnsignedByte" },
      { "field": "speedrun_character", "type": "EntityDBID" },
      {
        "field": "speedrun_activation_trigger",
        "type": "Bool",
        "comment": "must transition from true to false to activate it"
      },
      { "field": "padding4", "type": "UnsignedByte" },
      { "field": "padding5", "type": "UnsignedByte" },
      { "field": "padding6", "type": "UnsignedByte" },
      { "field": "level_width_rooms", "type": "UnsignedDword" },
      { "field": "level_height_rooms", "type": "UnsignedDword" },
      { "field": "kali_favor", "type": "Byte" },
      { "field": "kali_status", "type": "Byte" },
      { "field": "kali_altars_destroyed", "type": "Byte" },
      {
        "field": "kali_gifts",
        "type": "State8",
        "states": {
          "0": "None",
          "1": "Item",
          "3": "Kapala"
        }
      },
      { "field": "outposts_spawned", "type": "Dword" },
      { "field": "money_shop_total", "type": "Dword" },
      { "field": "world_start", "type": "UnsignedByte" },
      { "field": "level_start", "type": "UnsignedByte" },
      { "field": "theme_start", "type": "UnsignedByte" },
      { "field": "b5f", "type": "UnsignedByte", "comment": "padding probably" },
      { "field": "seed", "type": "UnsignedDword" },
      { "field": "time_total", "type": "UnsignedDword" },
      { "field": "world", "type": "UnsignedByte" },
      { "field": "world_next", "type": "UnsignedByte" },
      { "field": "level", "type": "UnsignedByte" },
      { "field": "level_next", "type": "UnsignedByte" },
      { "field": "theme_info", "type": "UndeterminedThemeInfoPointer" },
      { "field": "theme", "type": "UnsignedByte" },
      { "field": "theme_next", "type": "UnsignedByte" },
      {
        "field": "win_state",
        "type": "State8",
        "states": {
          "0": "No win",
          "1": "Tiamat win",
          "2": "Hundun win",
          "3": "Cosmic Ocean win"
        }
      },
      { "field": "b73", "type": "UnsignedByte" },
      {
        "field": "end_spaceship_character",
        "type": "EntityDBID",
        "comment": "who pops out the spaceship for a tiamat/hundun win"
      },
      { "field": "shoppie_aggro", "type": "UnsignedByte" },
      { "field": "shoppie_aggro_levels", "type": "UnsignedByte" },
      { "field": "merchant_aggro", "type": "UnsignedByte" },
      { "field": "saved_dogs", "type": "UnsignedByte" },
      { "field": "saved_cats", "type": "UnsignedByte" },
      { "field": "saved_hamsters", "type": "UnsignedByte" },
      { "field": "kills_npc", "type": "UnsignedByte" },
      { "field": "level_count", "type": "UnsignedByte" },
      {
        "field": "damage_taken",
        "type": "UnsignedWord",
        "comment": "total amount of damage taken, excluding cause of death"
      },
      {
        "field": "world2_coffin_spawned",
        "type": "Bool",
        "comment": "coffin spawn depends on random chance, this tracks whether the spawn has taken place"
      },
      { "field": "world4_coffin_spawned", "type": "Bool" },
      { "field": "world6_coffin_spawned", "type": "Bool" },
      { "field": "unknown2b", "type": "UnsignedByte" },
      { "field": "unknown2c", "type": "UnsignedByte" },
      { "field": "unknown2d", "type": "UnsignedByte" },
      { "field": "waddler_storage", "type": "WaddlerStorage" },
      { "field": "waddler_storage_meta", "type": "WaddlerStorageMeta" },
      { "field": "journal_progression", "type": "JournalProgression" },
      {
        "field": "-",
        "type": "Skip",
        "offset": 844,
        "comment": "This allows for space of 40 structs of 21 bytes; it's accessed on the journal progression screen"
      },
      { "field": "theme_progression", "type": "ThemeProgression" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "unknown5a", "type": "UnsignedByte" },
      { "field": "unknown5b", "type": "UnsignedByte" },
      { "field": "unknown5c", "type": "UnsignedByte" },
      { "field": "unknown5d", "type": "UnsignedByte" },
      { "field": "arena", "type": "ArenaState" },
      {
        "field": "journal_flags",
        "type": "Flags32",
        "flags": {
          "1": "I was a pacifist",
          "2": "I was a vegan",
          "3": "I was a vegetarian",
          "4": "I was a petty criminal",
          "5": "I was a wanted criminal",
          "6": "I was a crime lord",
          "7": "I was a king",
          "8": "I was a queen",
          "9": "I was a fool",
          "10": "I was an eggplant",
          "11": "I didn't care for treasure",
          "12": "I liked pets",
          "13": "I loved pets",
          "14": "I took damage",
          "15": "I survived death once",
          "16": "I slayed Kingu",
          "17": "I slayed Osiris",
          "18": "I defeated Tiamat",
          "19": "I defeated Hundun",
          "20": "I became one with the Cosmos",
          "21": "I eventually died",
          "22": "",
          "23": "",
          "24": "",
          "25": "",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      { "field": "first_damage_cause", "type": "EntityDBID" },
      { "field": "first_damage_world", "type": "Byte" },
      { "field": "first_damage_level", "type": "Byte" },
      { "field": "i9f4c", "type": "UnsignedByte" },
      { "field": "i9f4d", "type": "UnsignedByte" },
      { "field": "time_last_level", "type": "UnsignedDword" },
      { "field": "time_level", "type": "UnsignedDword" },
      { "field": "time_speedrun", "type": "UnsignedDword" },
      { "field": "money_last_levels", "type": "UnsignedDword" },
      {
        "field": "level_flags",
        "type": "Flags32",
        "flags": {
          "1": "Upbeat dwelling intro music played",
          "2": "", //once on, it stays on
          "3": "Running tutorial speedrun",
          "4": "Pet has spawned",
          "5": "Level has Tun/shop?",
          "6": "Tun killed?",
          "7": "Ghost pot level?",
          "8": "Dead are restless",
          "9": "Bees/Metal clanking/Oppression",
          "10": "Angry shopkeeper",
          "11": "Angry Tun",
          "12": "Angry caveman shopkeeper",
          "13": "Angry ghist shopkeeper",
          "14": "Angry Yang",
          "15": "Angry Tusk",
          "16": "Angry Waddler",
          "17": "Shop level?",
          "18": "Dark level (draw halo)",
          "19": "Altar destroyed",
          "20": "Allow pause",
          "21": "Hide hud, transition",
          "22": "Hide hud, camp",
          "23": "Have clover",
          "24": "You feel forgiven level",
          "25": "",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      {
        "field": "presence_flags",
        "type": "Flags32",
        "flags": {
          "1": "Udjat eye",
          "2": "Black market",
          "3": "Vlad's castle/drill",
          "4": "-",
          "5": "-",
          "6": "-",
          "7": "-",
          "8": "-",
          "9": "Moon challenge",
          "10": "Star challenge",
          "11": "Sun challenge",
          "12": "-",
          "13": "-",
          "14": "-",
          "15": "-",
          "16": "-",
          "17": "-",
          "18": "-",
          "19": "-",
          "20": "-",
          "21": "-",
          "22": "-",
          "23": "-",
          "24": "-",
          "25": "-",
          "26": "-",
          "27": "-",
          "28": "-",
          "29": "-",
          "30": "-",
          "31": "-",
          "32": "-"
        },
        "comment": "these flags are set when the thing is actually in the level, as opposed to quest_flags, which keeps track of whether it has already spawned"
      },
      {
        "field": "coffin_contents",
        "type": "EntityDBID",
        "comment": "the contents of the coffin that will be spawned (during levelgen)"
      },
      {
        "field": "cause_of_death",
        "type": "State8",
        "states": {
          "0": "DEATH - I met my untimely demise",
          "1": "Entity (see cause_of_death_entity_type)",
          "2": "LONG FALL - I broke every bone in my body",
          "3": "STILL FALLING - I haven't reached the bottom yet",
          "4": "MISSED - I teleported right into a wall",
          "5": "POISONED - Ooh, my insides hurt..."
        }
      },
      { "field": "padding10", "type": "UnsignedByte" },
      { "field": "padding11", "type": "UnsignedByte" },
      { "field": "padding12", "type": "UnsignedByte" },
      { "field": "cause_of_death_entity_type", "type": "EntityDBID" },
      { "field": "waddler_floor_storage", "type": "EntityUID", "comment": "entity uid of the first floor_storage entity" },
      { "field": "toast", "type": "MultiLineTextRenderingPointer" },
      { "field": "speechbubble", "type": "MultiLineTextRenderingPointer" },
      { "field": "speechbubble_timer", "type": "UnsignedDword" },
      { "field": "toast_timer", "type": "UnsignedDword" },
      { "field": "speechbubble_owner", "type": "EntityUID" },
      { "field": "basecamp_dialogue", "type": "Dialogue" },
      {
        "field": "screen_character_select",
        "type": "ScreenCharacterSelectPointer"
      },
      {
        "field": "screen_team_select",
        "type": "ScreenTeamSelectPointer"
      },
      { "field": "screen_camp", "type": "ScreenPointer" },
      { "field": "screen_level", "type": "ScreenPointer" },
      { "field": "screen_transition", "type": "ScreenTransitionPointer" },
      { "field": "screen_death", "type": "ScreenPointer" },
      {
        "field": "unknown_screen_spaceship?",
        "type": "UnsignedQword",
        "comment": "potentially ScreenSpaceship, but is nullptr (there is no UI rendering on spaceship anyway)"
      },
      { "field": "screen_win", "type": "ScreenWinPointer" },
      {
        "field": "screen_credits",
        "type": "ScreenCreditsPointer",
        "comment": "where you can fly the spaceship"
      },
      { "field": "screen_scores", "type": "ScreenScoresPointer" },
      { "field": "screen_constellation", "type": "ScreenConstellationPointer" },
      { "field": "screen_recap", "type": "ScreenRecapPointer" },
      { "field": "screen_arena_menu", "type": "ScreenArenaPointer" },
      {
        "field": "screen_arena_stages_select1",
        "type": "ScreenArenaStagesSelectPointer"
      },
      { "field": "screen_arena_items", "type": "ScreenArenaItemsPointer" },
      {
        "field": "screen_arena_stages_select2",
        "type": "ScreenArenaStagesSelectPointer"
      },
      { "field": "screen_arena_intro", "type": "ScreenArenaIntroPointer" },
      {
        "field": "screen_arena_level",
        "type": "ScreenArenaLevelPointer"
      },
      {
        "field": "screen_arena_score",
        "type": "ScreenArenaScorePointer"
      },
      {
        "field": "unknown_screen_online_loading?",
        "type": "UnsignedQword",
        "comment": "potentially ScreenOnlineLoading, but this was moved to GameManager"
      },
      {
        "field": "unknown_screen_online_lobby?",
        "type": "UnsignedQword",
        "comment": "potentially ScreenOnlineLobby, but this was moved to GameManager"
      },
      { "field": "next_entity_uid", "type": "UnsignedDword" },
      { "field": "unknown20", "type": "UnsignedWord" },
      {
        "field": "screen_change_counter",
        "type": "UnsignedWord",
        "comment": "increments every time screen changes; used in online sync together with next_entity_uid and unknown20 as a 64bit number"
      },
      { "field": "player_inputs", "type": "PlayerInputs" },
      { "field": "items", "type": "StateItemsPointer" },
      { "field": "level_gen", "type": "LevelGenPointer" },
      { "field": "layer0", "type": "LayerPointer" },
      { "field": "layer1", "type": "LayerPointer" },
      { "field": "logic", "type": "LogicPointer" },
      { "field": "quests", "type": "QuestsInfoPointer" },
      { "field": "ai_targets", "type": "AITargetsPointer" },
      { "field": "liquid_physics", "type": "LiquidPhysicsPointer" },
      {
        "field": "particle_emitters",
        "type": "StdVectorPointerParticleEmitterInfo"
      },
      { "field": "lightsources", "type": "StdVectorPointerIllumination" },
      { "field": "unknown27", "type": "MysteryPointer4", "comment": "lookup entity struct" },
      {
        "field": "uid_to_entity_mask",
        "type": "UnsignedDword",
        "comment": "RobinHoodTable mask"
      },
      { "field": "padding13", "type": "UnsignedDword" },
      {
        "field": "uid_to_entity_data",
        "type": "DataPointer",
        "comment": "RobinHoodTable entries"
      },
      { "field": "backlayer_player_related1", "type": "StdVector", "vectortype": "BackLayerRelated" },
      { "field": "layer_transition_effect_timer", "type": "UnsignedDword" },
      { "field": "camera_layer", "type": "UnsignedByte" },
      { "field": "unknown31a", "type": "UnsignedByte" },
      { "field": "unknown31b", "type": "UnsignedByte" },
      { "field": "unknown31c", "type": "UnsignedByte" },
      { "field": "shops", "type": "ShopsInfo" },
      { "field": "time_startup", "type": "UnsignedDword" },
      {
        "field": "special_visibility_flags",
        "type": "Flags32",
        "flags": {
          "1": "Crust embedded items shown",
          "2": "Crust embedded items shown (level transition)",
          "3": "",
          "4": "",
          "5": "",
          "6": "",
          "7": "",
          "8": "",
          "9": "Compass door markers shown",
          "10": "Compass door markers shown (level transition)",
          "11": "",
          "12": "",
          "13": "",
          "14": "",
          "15": "",
          "16": "",
          "17": "Special compass door markers shown",
          "18": "Special compass door markers shown (level transition)",
          "19": "",
          "20": "",
          "21": "",
          "22": "",
          "23": "",
          "24": "",
          "25": "In back layer",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      { "field": "camera", "type": "CameraPointer" },
      { "field": "unknown40", "type": "UnsignedByte" },
      {
        "field": "unknown41",
        "type": "Byte",
        "comment": "other character related (hired hand, basecamp characters), loop thru player slots (+1 cuz 1-4)"
      },
      { "field": "unknown42", "type": "UnsignedByte" },
      { "field": "unknown43", "type": "UnsignedByte" },
      { "field": "unknown44", "type": "UnsignedDword" },
      { "field": "unknown45", "type": "UnsignedQword" }
    ],
    "BackLayerRelated": [
      { "field": "player", "type": "EntityPointer" },
      { "field": "layer_dest?", "type": "UnsignedByte" },
      { "field": "padding", "type": "Skip", "offset": 7 }
    ],
    "RenderingTimerPointer": [
      {
        "field": "value",
        "type": "UnsignedQword",
        "comment": "touch only one value and the game freezes"
      },
      { "field": "unknown1", "type": "UnsignedQword" },
      { "field": "unknown2", "type": "UnsignedQword" },
      { "field": "unknown3", "type": "UnsignedQword" },
      { "field": "unknown4", "type": "UnsignedQword" },
      { "field": "unknown5", "type": "UnsignedQword" },
      { "field": "unknown6", "type": "UnsignedQword" },
      { "field": "unknown7", "type": "UnsignedQword" },
      { "field": "value2", "type": "UnsignedQword", "comment": "get's incremented with a `lock'" }
    ],
    "AITargetsPointer": [
      { "field": "target1", "type": "AITarget" },
      { "field": "target2", "type": "AITarget" },
      { "field": "target3", "type": "AITarget" },
      { "field": "target4", "type": "AITarget" },
      { "field": "target5", "type": "AITarget" },
      { "field": "target6", "type": "AITarget" },
      { "field": "target7", "type": "AITarget" },
      { "field": "target8", "type": "AITarget" }
    ],
    "AITarget": [
      { "field": "ai", "type": "EntityUID" },
      { "field": "target", "type": "EntityUID" }
    ],
    "Dialogue": [
      { "field": "base_dialogue", "type": "DialogueDetailsGroup" },
      { "field": "extra_dialogue", "type": "DialogueDetailsGroup" },
      { "field": "win_dialogue", "type": "DialogueDetailsGroup" },
      { "field": "interaction1", "type": "DialogueInteractionGroup" },
      { "field": "interaction2", "type": "DialogueInteractionGroup" },
      {
        "field": "lise_calculated_victory_chance",
        "type": "UnsignedByte",
        "comment": "random number 1-100 used in the 'Calculating the change of victory on your next run' line"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      {
        "field": "win_flags",
        "type": "Flags32",
        "flags": {
          "1": "Ana Spelunky saved",
          "2": "Margaret Tunnel saved",
          "3": "Colin Northward saved",
          "4": "Roffy D. Sloth saved",
          "5": "Alto Singh saved",
          "6": "Liz Mutton saved",
          "7": "Nekka The Eagle saved",
          "8": "LISE project saved",
          "9": "Coco Von Diamonds saved",
          "10": "Manfred Tunnel saved",
          "11": "Little Jay saved",
          "12": "Tina Flan saved",
          "13": "Valerie Crump saved",
          "14": "Au saved",
          "15": "Demi Von Diamonds saved",
          "16": "Pilot saved",
          "17": "Princess Airyn saved",
          "18": "Dirk Yamaoka saved",
          "19": "Tiamat win",
          "20": "Hundun win",
          "21": "",
          "22": "",
          "23": "",
          "24": "",
          "25": "",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        },
        "comment": "character saved -> triggers the 'Thanks for getting me out of there' line"
      },
      {
        "field": "trigger_win_dialogue",
        "type": "Bool",
        "comment": "set before entering basecamp"
      },
      {
        "field": "trigger_progress_dialogue",
        "type": "Bool",
        "comment": "set before entering basecamp"
      },
      { "field": "win_related", "type": "UnsignedWord" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "UnsignedDword" },
      { "field": "unknown11", "type": "UnsignedDword" },
      { "field": "unknown12", "type": "UnsignedDword" },
      { "field": "unknown13", "type": "UnsignedDword" },
      { "field": "unknown14", "type": "UnsignedDword" },
      { "field": "unknown15", "type": "UnsignedDword" },
      { "field": "unknown16", "type": "UnsignedDword" },
      { "field": "unknown17", "type": "UnsignedDword" },
      { "field": "unknown18", "type": "UnsignedDword" }
    ],
    "DialogueDetailsGroup": [
      { "field": "ana_spelunky", "type": "DialogueDetails" },
      { "field": "margaret_tunnel", "type": "DialogueDetails" },
      { "field": "colin_northward", "type": "DialogueDetails" },
      { "field": "roffy_d_sloth", "type": "DialogueDetails" },
      { "field": "alto_singh", "type": "DialogueDetails" },
      { "field": "liz_mutton", "type": "DialogueDetails" },
      { "field": "nekka_the_eagle", "type": "DialogueDetails" },
      { "field": "lise_project", "type": "DialogueDetails" },
      { "field": "coco_von_diamonds", "type": "DialogueDetails" },
      { "field": "manfred_tunnel", "type": "DialogueDetails" },
      { "field": "little_jay", "type": "DialogueDetails" },
      { "field": "tina_flan", "type": "DialogueDetails" },
      { "field": "valerie_crump", "type": "DialogueDetails" },
      { "field": "au", "type": "DialogueDetails" },
      { "field": "demi_von_diamonds", "type": "DialogueDetails" },
      { "field": "pilot", "type": "DialogueDetails" },
      { "field": "princess_airyn", "type": "DialogueDetails" },
      { "field": "dirk_yamaoka", "type": "DialogueDetails" },
      { "field": "guy_spelunky", "type": "DialogueDetails" },
      { "field": "classic_guy", "type": "DialogueDetails" },
      { "field": "mama_tunnel", "type": "DialogueDetails" }
    ],
    "DialogueDetails": [
      { "field": "line", "type": "StringsTableID" },
      { "field": "param_player1", "type": "CharacterDBID" },
      { "field": "param_player2", "type": "CharacterDBID" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "param_string1", "type": "StringsTableID" },
      { "field": "param_string2", "type": "StringsTableID" }
    ],
    "DialogueInteractionGroup": [
      { "field": "ana_spelunky", "type": "DialogueInteraction" },
      { "field": "margaret_tunnel", "type": "DialogueInteraction" },
      { "field": "colin_northward", "type": "DialogueInteraction" },
      { "field": "roffy_d_sloth", "type": "DialogueInteraction" },
      { "field": "alto_singh", "type": "DialogueInteraction" },
      { "field": "liz_mutton", "type": "DialogueInteraction" },
      { "field": "nekka_the_eagle", "type": "DialogueInteraction" },
      { "field": "lise_project", "type": "DialogueInteraction" },
      { "field": "coco_von_diamonds", "type": "DialogueInteraction" },
      { "field": "manfred_tunnel", "type": "DialogueInteraction" },
      { "field": "little_jay", "type": "DialogueInteraction" },
      { "field": "tina_flan", "type": "DialogueInteraction" },
      { "field": "valerie_crump", "type": "DialogueInteraction" },
      { "field": "au", "type": "DialogueInteraction" },
      { "field": "demi_von_diamonds", "type": "DialogueInteraction" },
      { "field": "pilot", "type": "DialogueInteraction" },
      { "field": "princess_airyn", "type": "DialogueInteraction" },
      { "field": "dirk_yamaoka", "type": "DialogueInteraction" },
      { "field": "guy_spelunky", "type": "DialogueInteraction" },
      { "field": "classic_guy", "type": "DialogueInteraction" },
      { "field": "mama_tunnel", "type": "DialogueInteraction" }
    ],
    "DialogueInteraction": [
      { "field": "interacted", "type": "Bool" },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "UnsignedByte" }
    ],
    "UnorderedMapPointer": [
      { "field": "unordered_map", "type": "UnorderedMap" }
    ],
    "ShopsInfo": [
      {
        "field": "restricted_items",
        "type": "ShopRestrictedItemPointer1",
        "comment": "the items in a shop that set off the shopkeeper if you walk off with them"
      },
      {
        "field": "restricted_item_count",
        "type": "UnsignedQword",
        "comment": "this is a std::map <int32_t, std::pair<int32_t, ENT_TYPE>> or set with a struct, uid of the item as a key, uid and type of the shopkeeper as value"
      },
      {
        "field": "shop_owners",
        "type": "StdVector",
        "vectortype": "ShopOwnerDetails"
      }
    ],
    "ShopRestrictedItemPointer1": [
      { "field": "prev", "type": "ShopRestrictedItemPointer2" },
      { "field": "next1", "type": "ShopRestrictedItemPointer2" },
      { "field": "next2", "type": "ShopRestrictedItemPointer2" },
      {
        "field": "unknown1",
        "type": "Bool",
        "comment": "seams to be some internal map/set stuff"
      },
      {
        "field": "unknown2",
        "type": "Bool",
        "comment": "seams to be some internal map/set stuff"
      },
      { "field": "unknown3_garbage?", "type": "UnsignedByte" },
      { "field": "unknown4_garbage?", "type": "UnsignedByte" },
      { "field": "restricted_item", "type": "EntityUID" },
      { "field": "item_owner", "type": "EntityUID" },
      { "field": "shop_owner_type", "type": "EntityDBID" },
      {
        "field": "unknown6",
        "type": "Qword",
        "comment": "pretty sure this is some standard map/set internal stuff"
      }
    ],
    "ShopRestrictedItemPointer2": [
      { "field": "prev", "type": "ShopRestrictedItemPointer3" },
      { "field": "next1", "type": "ShopRestrictedItemPointer3" },
      { "field": "next2", "type": "ShopRestrictedItemPointer3" },
      { "field": "unknown1", "type": "Bool" },
      { "field": "unknown2", "type": "Bool" },
      { "field": "unknown3_garbage?", "type": "UnsignedByte" },
      { "field": "unknown4_garbage?", "type": "UnsignedByte" },
      { "field": "restricted_item", "type": "EntityUID" },
      { "field": "item_owner", "type": "EntityUID" },
      { "field": "shop_owner_type", "type": "EntityDBID" },
      { "field": "unknown6", "type": "Qword" }
    ],
    "ShopRestrictedItemPointer3": [
      { "field": "prev", "type": "ShopRestrictedItemPointer4" },
      { "field": "next1", "type": "ShopRestrictedItemPointer4" },
      { "field": "next2", "type": "ShopRestrictedItemPointer4" },
      { "field": "unknown1", "type": "Bool" },
      { "field": "unknown2", "type": "Bool" },
      { "field": "unknown3_garbage?", "type": "UnsignedByte" },
      { "field": "unknown4_garbage?", "type": "UnsignedByte" },
      { "field": "restricted_item", "type": "EntityUID" },
      { "field": "item_owner", "type": "EntityUID" },
      { "field": "shop_owner_type", "type": "EntityDBID" },
      { "field": "unknown6", "type": "Qword" }
    ],
    "ShopRestrictedItemPointer4": [
      { "field": "prev", "type": "ShopRestrictedItemPointer5" },
      { "field": "next1", "type": "ShopRestrictedItemPointer5" },
      { "field": "next2", "type": "ShopRestrictedItemPointer5" },
      { "field": "unknown1", "type": "Bool" },
      { "field": "unknown2", "type": "Bool" },
      { "field": "unknown3_garbage?", "type": "UnsignedByte" },
      { "field": "unknown4_garbage?", "type": "UnsignedByte" },
      { "field": "restricted_item", "type": "EntityUID" },
      { "field": "item_owner", "type": "EntityUID" },
      { "field": "shop_owner_type", "type": "EntityDBID" },
      { "field": "unknown6", "type": "Qword" }
    ],
    "ShopRestrictedItemPointer5": [
      { "field": "prev", "type": "DataPointer" },
      { "field": "next1", "type": "DataPointer" },
      { "field": "next2", "type": "DataPointer" },
      { "field": "unknown1", "type": "Bool" },
      { "field": "unknown2", "type": "Bool" },
      { "field": "unknown3_garbage?", "type": "UnsignedByte" },
      { "field": "unknown4_garbage?", "type": "UnsignedByte" },
      { "field": "restricted_item", "type": "EntityUID" },
      { "field": "item_owner", "type": "EntityUID" },
      { "field": "shop_owner_type", "type": "EntityDBID" },
      { "field": "unknown6", "type": "Qword" }
    ],
    "ShopOwnerDetails": [
      { "field": "layer", "type": "UnsignedByte" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      {
        "field": "room_index",
        "type": "UnsignedDword",
        "comment": "The room index that the shop is in: zero based, left to right, top to bottom, counting all 8 rooms per row (so second row = rooms 8 - 15)"
      },
      { "field": "shop_owner", "type": "EntityUID" }
    ],
    "JournalProgression": [
      { "field": "count", "type": "UnsignedWord" },
      { "field": "slot1", "type": "JournalProgressionSlot" },
      { "field": "slot2", "type": "JournalProgressionSlot" },
      { "field": "slot3", "type": "JournalProgressionSlot" },
      { "field": "slot4", "type": "JournalProgressionSlot" },
      { "field": "slot5", "type": "JournalProgressionSlot" },
      { "field": "slot6", "type": "JournalProgressionSlot" },
      { "field": "slot7", "type": "JournalProgressionSlot" },
      { "field": "slot8", "type": "JournalProgressionSlot" },
      { "field": "slot9", "type": "JournalProgressionSlot" },
      { "field": "slot10", "type": "JournalProgressionSlot" },
      { "field": "slot11", "type": "JournalProgressionSlot" },
      { "field": "slot12", "type": "JournalProgressionSlot" },
      { "field": "slot13", "type": "JournalProgressionSlot" },
      { "field": "slot14", "type": "JournalProgressionSlot" },
      { "field": "slot15", "type": "JournalProgressionSlot" },
      { "field": "slot16", "type": "JournalProgressionSlot" },
      { "field": "slot17", "type": "JournalProgressionSlot" },
      { "field": "slot18", "type": "JournalProgressionSlot" },
      { "field": "slot19", "type": "JournalProgressionSlot" },
      { "field": "slot20", "type": "JournalProgressionSlot" },
      { "field": "slot21", "type": "JournalProgressionSlot" },
      { "field": "slot22", "type": "JournalProgressionSlot" },
      { "field": "slot23", "type": "JournalProgressionSlot" },
      { "field": "slot24", "type": "JournalProgressionSlot" },
      { "field": "slot25", "type": "JournalProgressionSlot" },
      { "field": "slot26", "type": "JournalProgressionSlot" },
      { "field": "slot27", "type": "JournalProgressionSlot" },
      { "field": "slot28", "type": "JournalProgressionSlot" },
      { "field": "slot29", "type": "JournalProgressionSlot" },
      { "field": "slot30", "type": "JournalProgressionSlot" },
      { "field": "slot31", "type": "JournalProgressionSlot" },
      { "field": "slot32", "type": "JournalProgressionSlot" },
      { "field": "slot33", "type": "JournalProgressionSlot" },
      { "field": "slot34", "type": "JournalProgressionSlot" },
      { "field": "slot35", "type": "JournalProgressionSlot" },
      { "field": "slot36", "type": "JournalProgressionSlot" },
      { "field": "slot37", "type": "JournalProgressionSlot" },
      { "field": "slot38", "type": "JournalProgressionSlot" },
      { "field": "slot39", "type": "JournalProgressionSlot" },
      { "field": "slot40", "type": "JournalProgressionSlot" }
    ],
    "JournalProgressionSlot": [
      { "field": "unknown1", "type": "UnsignedByte" },
      {
        "field": "grid_position",
        "type": "Byte",
        "comment": "-1 = unassigned, will be assigned when opening the journal and gets the zoom effect"
      },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "entity", "type": "EntityDBID" },
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      { "field": "angle", "type": "Float" }
    ],
    "ThemeProgression": [
      { "field": "count", "type": "UnsignedByte" },
      {
        "field": "theme1",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      {
        "field": "theme2",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      {
        "field": "theme3",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      {
        "field": "theme4",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      {
        "field": "theme5",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      {
        "field": "theme6",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      {
        "field": "theme7",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      {
        "field": "theme8",
        "type": "State8",
        "ref": "theme_progression_themes"
      },
      { "field": "theme9", "type": "State8", "ref": "theme_progression_themes" }
    ],
    "ArenaState": [
      {
        "field": "current_arena",
        "type": "State32",
        "states": {
          "0": "dwelling_1",
          "1": "dwelling_2",
          "2": "dwelling_3",
          "3": "dwelling_4",
          "4": "dwelling_5",
          "5": "jungle_1",
          "6": "jungle_2",
          "7": "jungle_3",
          "8": "jungle_4",
          "9": "jungle_5",
          "10": "volcana_1",
          "11": "volcana_2",
          "12": "volcana_3",
          "13": "volcana_4",
          "14": "volcana_5",
          "15": "tidepool_1",
          "16": "tidepool_2",
          "17": "tidepool_3",
          "18": "tidepool_4",
          "19": "tidepool_5",
          "20": "temple_1",
          "21": "temple_2",
          "22": "temple_3",
          "23": "temple_4",
          "24": "temple_5",
          "25": "icecaves_1",
          "26": "icecaves_2",
          "27": "icecaves_3",
          "28": "icecaves_4",
          "29": "icecaves_5",
          "30": "neobabylon_1",
          "31": "neobabylon_2",
          "32": "neobabylon_3",
          "33": "neobabylon_4",
          "34": "neobabylon_5",
          "35": "sunkencity_1",
          "36": "sunkencity_2",
          "37": "sunkencity_3",
          "38": "sunkencity_4",
          "39": "sunkencity_5"
        }
      },
      { "field": "player1_team", "type": "UnsignedByte" },
      { "field": "player2_team", "type": "UnsignedByte" },
      { "field": "player3_team", "type": "UnsignedByte" },
      { "field": "player4_team", "type": "UnsignedByte" },
      {
        "field": "format",
        "type": "State8",
        "states": {
          "0": "Deathmatch",
          "1": "Hold the idol"
        }
      },
      {
        "field": "ruleset",
        "type": "State8",
        "states": {
          "0": "Casual",
          "1": "Tournament",
          "2": "Joust",
          "3": "Frantic",
          "4": "Custom",
          "5": "Favorite"
        }
      },
      { "field": "player1_lives", "type": "UnsignedByte" },
      { "field": "player2_lives", "type": "UnsignedByte" },
      { "field": "player3_lives", "type": "UnsignedByte" },
      { "field": "player4_lives", "type": "UnsignedByte" },
      { "field": "player1_totalwins", "type": "UnsignedByte" },
      { "field": "player2_totalwins", "type": "UnsignedByte" },
      { "field": "player3_totalwins", "type": "UnsignedByte" },
      { "field": "player4_totalwins", "type": "UnsignedByte" },
      { "field": "unknown9", "type": "Byte" },
      { "field": "player1_won", "type": "Bool" },
      { "field": "player2_won", "type": "Bool" },
      { "field": "player3_won", "type": "Bool" },
      { "field": "player4_won", "type": "Bool" },
      {
        "field": "player1_bot_ai",
        "type": "State8",
        "ref": "arena_bot_ai_states"
      },
      {
        "field": "player2_bot_ai",
        "type": "State8",
        "ref": "arena_bot_ai_states"
      },
      {
        "field": "player3_bot_ai",
        "type": "State8",
        "ref": "arena_bot_ai_states"
      },
      {
        "field": "player4_bot_ai",
        "type": "State8",
        "ref": "arena_bot_ai_states"
      },
      { "field": "unknown14e", "type": "UnsignedByte" },
      {
        "field": "timer",
        "type": "State8",
        "ref": "arena_timer_states"
      },
      {
        "field": "timer_ending",
        "type": "State8",
        "ref": "arena_timer_ending_states"
      },
      { "field": "wins", "type": "UnsignedByte" },
      { "field": "lives", "type": "UnsignedByte" },
      {
        "field": "time_to_win",
        "type": "State8",
        "ref": "arena_time_to_win_states"
      },
      { "field": "unknown16", "type": "UnsignedByte" },
      { "field": "player1_idolheld_countdown", "type": "UnsignedWord" },
      { "field": "player2_idolheld_countdown", "type": "UnsignedWord" },
      { "field": "player3_idolheld_countdown", "type": "UnsignedWord" },
      { "field": "player4_idolheld_countdown", "type": "UnsignedWord" },
      { "field": "health", "type": "UnsignedByte" },
      { "field": "bombs", "type": "UnsignedByte" },
      { "field": "ropes", "type": "UnsignedByte" },
      {
        "field": "stun_time",
        "type": "State8",
        "ref": "arena_stun_time_states"
      },
      {
        "field": "mount",
        "type": "State8",
        "ref": "arena_mount_states"
      },
      {
        "field": "arena_select",
        "type": "State8",
        "ref": "arena_select_states"
      },
      { "field": "arenas", "type": "ArenaConfigArenas" },
      {
        "field": "dark_level_chance",
        "type": "State8",
        "ref": "arena_dark_level_chance_states"
      },
      {
        "field": "crate_frequency",
        "type": "State8",
        "ref": "arena_crate_frequency_states"
      },
      { "field": "items_enabled", "type": "ArenaConfigItems" },
      { "field": "items_in_crate", "type": "ArenaConfigItems" },
      {
        "field": "held_item",
        "type": "State8",
        "ref": "arena_held_item_states"
      },
      {
        "field": "equipped_backitem",
        "type": "State8",
        "ref": "arena_equipped_backitem_states"
      },
      { "field": "equipped_items", "type": "ArenaConfigEquippedItems" },
      {
        "field": "whip_damage",
        "type": "State8",
        "ref": "arena_whip_damage_states"
      },
      { "field": "final_ghost", "type": "Bool" },
      {
        "field": "breath_cooldown",
        "type": "State8",
        "ref": "arena_breath_cooldown_states"
      },
      { "field": "punish_ball", "type": "Bool" }
    ],
    "ArenaConfigArenas": [
      { "field": "dwelling_1", "type": "Bool" },
      { "field": "dwelling_2", "type": "Bool" },
      { "field": "dwelling_3", "type": "Bool" },
      { "field": "dwelling_4", "type": "Bool" },
      { "field": "dwelling_5", "type": "Bool" },
      { "field": "jungle_1", "type": "Bool" },
      { "field": "jungle_2", "type": "Bool" },
      { "field": "jungle_3", "type": "Bool" },
      { "field": "jungle_4", "type": "Bool" },
      { "field": "jungle_5", "type": "Bool" },
      { "field": "volcana_1", "type": "Bool" },
      { "field": "volcana_2", "type": "Bool" },
      { "field": "volcana_3", "type": "Bool" },
      { "field": "volcana_4", "type": "Bool" },
      { "field": "volcana_5", "type": "Bool" },
      { "field": "tidepool_1", "type": "Bool" },
      { "field": "tidepool_2", "type": "Bool" },
      { "field": "tidepool_3", "type": "Bool" },
      { "field": "tidepool_4", "type": "Bool" },
      { "field": "tidepool_5", "type": "Bool" },
      { "field": "temple_1", "type": "Bool" },
      { "field": "temple_2", "type": "Bool" },
      { "field": "temple_3", "type": "Bool" },
      { "field": "temple_4", "type": "Bool" },
      { "field": "temple_5", "type": "Bool" },
      { "field": "icecaves_1", "type": "Bool" },
      { "field": "icecaves_2", "type": "Bool" },
      { "field": "icecaves_3", "type": "Bool" },
      { "field": "icecaves_4", "type": "Bool" },
      { "field": "icecaves_5", "type": "Bool" },
      { "field": "neobabylon_1", "type": "Bool" },
      { "field": "neobabylon_2", "type": "Bool" },
      { "field": "neobabylon_3", "type": "Bool" },
      { "field": "neobabylon_4", "type": "Bool" },
      { "field": "neobabylon_5", "type": "Bool" },
      { "field": "sunkencity_1", "type": "Bool" },
      { "field": "sunkencity_2", "type": "Bool" },
      { "field": "sunkencity_3", "type": "Bool" },
      { "field": "sunkencity_4", "type": "Bool" },
      { "field": "sunkencity_5", "type": "Bool" }
    ],
    "ArenaConfigItems": [
      { "field": "rock", "type": "Bool" },
      { "field": "pot", "type": "Bool" },
      { "field": "bombbag", "type": "Bool" },
      { "field": "bombbox", "type": "Bool" },
      { "field": "ropepile", "type": "Bool" },
      { "field": "pickup_12bag", "type": "Bool" },
      { "field": "pickup_24bag", "type": "Bool" },
      { "field": "cooked_turkey", "type": "Bool" },
      { "field": "royal_jelly", "type": "Bool" },
      { "field": "torch", "type": "Bool" },
      { "field": "boomerang", "type": "Bool" },
      { "field": "machete", "type": "Bool" },
      { "field": "mattock", "type": "Bool" },
      { "field": "crossbow", "type": "Bool" },
      { "field": "webgun", "type": "Bool" },
      { "field": "freezeray", "type": "Bool" },
      { "field": "shotgun", "type": "Bool" },
      { "field": "camera", "type": "Bool" },
      { "field": "plasma_cannon", "type": "Bool" },
      { "field": "wooden_shield", "type": "Bool" },
      { "field": "metal_shield", "type": "Bool" },
      { "field": "teleporter", "type": "Bool" },
      { "field": "mine", "type": "Bool" },
      { "field": "snaptrap", "type": "Bool" },
      { "field": "paste", "type": "Bool" },
      { "field": "climbing_gloves", "type": "Bool" },
      { "field": "pitchers_mitt", "type": "Bool" },
      { "field": "spike_shoes", "type": "Bool" },
      { "field": "spring_shoes", "type": "Bool" },
      { "field": "parachute", "type": "Bool" },
      { "field": "cape", "type": "Bool" },
      { "field": "vlads_cape", "type": "Bool" },
      { "field": "jetpack", "type": "Bool" },
      { "field": "hoverpack", "type": "Bool" },
      { "field": "telepack", "type": "Bool" },
      { "field": "powerpack", "type": "Bool" },
      { "field": "excalibur", "type": "Bool" },
      { "field": "scepter", "type": "Bool" },
      { "field": "kapala", "type": "Bool" },
      { "field": "true_crown", "type": "Bool" }
    ],
    "ArenaConfigEquippedItems": [
      {
        "field": "dummy1",
        "type": "Bool",
        "comment": "the other items have spaces here but are unused"
      },
      { "field": "dummy2", "type": "Bool" },
      { "field": "dummy3", "type": "Bool" },
      { "field": "dummy4", "type": "Bool" },
      { "field": "dummy5", "type": "Bool" },
      { "field": "dummy6", "type": "Bool" },
      { "field": "dummy7", "type": "Bool" },
      { "field": "dummy8", "type": "Bool" },
      { "field": "dummy9", "type": "Bool" },
      { "field": "dummy10", "type": "Bool" },
      { "field": "dummy11", "type": "Bool" },
      { "field": "dummy12", "type": "Bool" },
      { "field": "dummy13", "type": "Bool" },
      { "field": "dummy14", "type": "Bool" },
      { "field": "dummy15", "type": "Bool" },
      { "field": "dummy16", "type": "Bool" },
      { "field": "dummy17", "type": "Bool" },
      { "field": "dummy18", "type": "Bool" },
      { "field": "dummy19", "type": "Bool" },
      { "field": "dummy20", "type": "Bool" },
      { "field": "dummy21", "type": "Bool" },
      { "field": "dummy22", "type": "Bool" },
      { "field": "dummy23", "type": "Bool" },
      { "field": "dummy24", "type": "Bool" },
      { "field": "paste", "type": "Bool" },
      { "field": "climbing_gloves", "type": "Bool" },
      { "field": "pitchers_mitt", "type": "Bool" },
      { "field": "spike_shoes", "type": "Bool" },
      { "field": "spring_shoes", "type": "Bool" },
      { "field": "parachute", "type": "Bool" },
      { "field": "dummy25", "type": "Bool" },
      { "field": "dummy26", "type": "Bool" },
      { "field": "dummy27", "type": "Bool" },
      { "field": "dummy28", "type": "Bool" },
      { "field": "dummy29", "type": "Bool" },
      { "field": "dummy30", "type": "Bool" },
      { "field": "dummy31", "type": "Bool" },
      { "field": "dummy32", "type": "Bool" },
      { "field": "kapala", "type": "Bool" },
      { "field": "scepter", "type": "Bool" }
    ],
    "WaddlerStorage": [
      { "field": "slot1", "type": "EntityDBID" },
      { "field": "slot2", "type": "EntityDBID" },
      { "field": "slot3", "type": "EntityDBID" },
      { "field": "slot4", "type": "EntityDBID" },
      { "field": "slot5", "type": "EntityDBID" },
      { "field": "slot6", "type": "EntityDBID" },
      { "field": "slot7", "type": "EntityDBID" },
      { "field": "slot8", "type": "EntityDBID" },
      { "field": "slot9", "type": "EntityDBID" },
      { "field": "slot10", "type": "EntityDBID" },
      { "field": "slot11", "type": "EntityDBID" },
      { "field": "slot12", "type": "EntityDBID" },
      { "field": "slot13", "type": "EntityDBID" },
      { "field": "slot14", "type": "EntityDBID" },
      { "field": "slot15", "type": "EntityDBID" },
      { "field": "slot16", "type": "EntityDBID" },
      { "field": "slot17", "type": "EntityDBID" },
      { "field": "slot18", "type": "EntityDBID" },
      { "field": "slot19", "type": "EntityDBID" },
      { "field": "slot20", "type": "EntityDBID" },
      { "field": "slot21", "type": "EntityDBID" },
      { "field": "slot22", "type": "EntityDBID" },
      { "field": "slot23", "type": "EntityDBID" },
      { "field": "slot24", "type": "EntityDBID" },
      { "field": "slot25", "type": "EntityDBID" },
      { "field": "slot26", "type": "EntityDBID" },
      { "field": "slot27", "type": "EntityDBID" },
      { "field": "slot28", "type": "EntityDBID" },
      { "field": "slot29", "type": "EntityDBID" },
      { "field": "slot30", "type": "EntityDBID" },
      { "field": "slot31", "type": "EntityDBID" },
      { "field": "slot32", "type": "EntityDBID" },
      { "field": "slot33", "type": "EntityDBID" },
      { "field": "slot34", "type": "EntityDBID" },
      { "field": "slot35", "type": "EntityDBID" },
      { "field": "slot36", "type": "EntityDBID" },
      { "field": "slot37", "type": "EntityDBID" },
      { "field": "slot38", "type": "EntityDBID" },
      { "field": "slot39", "type": "EntityDBID" },
      { "field": "slot40", "type": "EntityDBID" },
      { "field": "slot41", "type": "EntityDBID" },
      { "field": "slot42", "type": "EntityDBID" },
      { "field": "slot43", "type": "EntityDBID" },
      { "field": "slot44", "type": "EntityDBID" },
      { "field": "slot45", "type": "EntityDBID" },
      { "field": "slot46", "type": "EntityDBID" },
      { "field": "slot47", "type": "EntityDBID" },
      { "field": "slot48", "type": "EntityDBID" },
      { "field": "slot49", "type": "EntityDBID" },
      { "field": "slot50", "type": "EntityDBID" },
      { "field": "slot51", "type": "EntityDBID" },
      { "field": "slot52", "type": "EntityDBID" },
      { "field": "slot53", "type": "EntityDBID" },
      { "field": "slot54", "type": "EntityDBID" },
      { "field": "slot55", "type": "EntityDBID" },
      { "field": "slot56", "type": "EntityDBID" },
      { "field": "slot57", "type": "EntityDBID" },
      { "field": "slot58", "type": "EntityDBID" },
      { "field": "slot59", "type": "EntityDBID" },
      { "field": "slot60", "type": "EntityDBID" },
      { "field": "slot61", "type": "EntityDBID" },
      { "field": "slot62", "type": "EntityDBID" },
      { "field": "slot63", "type": "EntityDBID" },
      { "field": "slot64", "type": "EntityDBID" },
      { "field": "slot65", "type": "EntityDBID" },
      { "field": "slot66", "type": "EntityDBID" },
      { "field": "slot67", "type": "EntityDBID" },
      { "field": "slot68", "type": "EntityDBID" },
      { "field": "slot69", "type": "EntityDBID" },
      { "field": "slot70", "type": "EntityDBID" },
      { "field": "slot71", "type": "EntityDBID" },
      { "field": "slot72", "type": "EntityDBID" },
      { "field": "slot73", "type": "EntityDBID" },
      { "field": "slot74", "type": "EntityDBID" },
      { "field": "slot75", "type": "EntityDBID" },
      { "field": "slot76", "type": "EntityDBID" },
      { "field": "slot77", "type": "EntityDBID" },
      { "field": "slot78", "type": "EntityDBID" },
      { "field": "slot79", "type": "EntityDBID" },
      { "field": "slot80", "type": "EntityDBID" },
      { "field": "slot81", "type": "EntityDBID" },
      { "field": "slot82", "type": "EntityDBID" },
      { "field": "slot83", "type": "EntityDBID" },
      { "field": "slot84", "type": "EntityDBID" },
      { "field": "slot85", "type": "EntityDBID" },
      { "field": "slot86", "type": "EntityDBID" },
      { "field": "slot87", "type": "EntityDBID" },
      { "field": "slot88", "type": "EntityDBID" },
      { "field": "slot89", "type": "EntityDBID" },
      { "field": "slot90", "type": "EntityDBID" },
      { "field": "slot91", "type": "EntityDBID" },
      { "field": "slot92", "type": "EntityDBID" },
      { "field": "slot93", "type": "EntityDBID" },
      { "field": "slot94", "type": "EntityDBID" },
      { "field": "slot95", "type": "EntityDBID" },
      { "field": "slot96", "type": "EntityDBID" },
      { "field": "slot97", "type": "EntityDBID" },
      { "field": "slot98", "type": "EntityDBID" },
      { "field": "slot99", "type": "EntityDBID" }
    ],
    "WaddlerStorageMeta": [
      { "field": "slot1", "type": "Word" },
      { "field": "slot2", "type": "Word" },
      { "field": "slot3", "type": "Word" },
      { "field": "slot4", "type": "Word" },
      { "field": "slot5", "type": "Word" },
      { "field": "slot6", "type": "Word" },
      { "field": "slot7", "type": "Word" },
      { "field": "slot8", "type": "Word" },
      { "field": "slot9", "type": "Word" },
      { "field": "slot10", "type": "Word" },
      { "field": "slot11", "type": "Word" },
      { "field": "slot12", "type": "Word" },
      { "field": "slot13", "type": "Word" },
      { "field": "slot14", "type": "Word" },
      { "field": "slot15", "type": "Word" },
      { "field": "slot16", "type": "Word" },
      { "field": "slot17", "type": "Word" },
      { "field": "slot18", "type": "Word" },
      { "field": "slot19", "type": "Word" },
      { "field": "slot20", "type": "Word" },
      { "field": "slot21", "type": "Word" },
      { "field": "slot22", "type": "Word" },
      { "field": "slot23", "type": "Word" },
      { "field": "slot24", "type": "Word" },
      { "field": "slot25", "type": "Word" },
      { "field": "slot26", "type": "Word" },
      { "field": "slot27", "type": "Word" },
      { "field": "slot28", "type": "Word" },
      { "field": "slot29", "type": "Word" },
      { "field": "slot30", "type": "Word" },
      { "field": "slot31", "type": "Word" },
      { "field": "slot32", "type": "Word" },
      { "field": "slot33", "type": "Word" },
      { "field": "slot34", "type": "Word" },
      { "field": "slot35", "type": "Word" },
      { "field": "slot36", "type": "Word" },
      { "field": "slot37", "type": "Word" },
      { "field": "slot38", "type": "Word" },
      { "field": "slot39", "type": "Word" },
      { "field": "slot40", "type": "Word" },
      { "field": "slot41", "type": "Word" },
      { "field": "slot42", "type": "Word" },
      { "field": "slot43", "type": "Word" },
      { "field": "slot44", "type": "Word" },
      { "field": "slot45", "type": "Word" },
      { "field": "slot46", "type": "Word" },
      { "field": "slot47", "type": "Word" },
      { "field": "slot48", "type": "Word" },
      { "field": "slot49", "type": "Word" },
      { "field": "slot50", "type": "Word" },
      { "field": "slot51", "type": "Word" },
      { "field": "slot52", "type": "Word" },
      { "field": "slot53", "type": "Word" },
      { "field": "slot54", "type": "Word" },
      { "field": "slot55", "type": "Word" },
      { "field": "slot56", "type": "Word" },
      { "field": "slot57", "type": "Word" },
      { "field": "slot58", "type": "Word" },
      { "field": "slot59", "type": "Word" },
      { "field": "slot60", "type": "Word" },
      { "field": "slot61", "type": "Word" },
      { "field": "slot62", "type": "Word" },
      { "field": "slot63", "type": "Word" },
      { "field": "slot64", "type": "Word" },
      { "field": "slot65", "type": "Word" },
      { "field": "slot66", "type": "Word" },
      { "field": "slot67", "type": "Word" },
      { "field": "slot68", "type": "Word" },
      { "field": "slot69", "type": "Word" },
      { "field": "slot70", "type": "Word" },
      { "field": "slot71", "type": "Word" },
      { "field": "slot72", "type": "Word" },
      { "field": "slot73", "type": "Word" },
      { "field": "slot74", "type": "Word" },
      { "field": "slot75", "type": "Word" },
      { "field": "slot76", "type": "Word" },
      { "field": "slot77", "type": "Word" },
      { "field": "slot78", "type": "Word" },
      { "field": "slot79", "type": "Word" },
      { "field": "slot80", "type": "Word" },
      { "field": "slot81", "type": "Word" },
      { "field": "slot82", "type": "Word" },
      { "field": "slot83", "type": "Word" },
      { "field": "slot84", "type": "Word" },
      { "field": "slot85", "type": "Word" },
      { "field": "slot86", "type": "Word" },
      { "field": "slot87", "type": "Word" },
      { "field": "slot88", "type": "Word" },
      { "field": "slot89", "type": "Word" },
      { "field": "slot90", "type": "Word" },
      { "field": "slot91", "type": "Word" },
      { "field": "slot92", "type": "Word" },
      { "field": "slot93", "type": "Word" },
      { "field": "slot94", "type": "Word" },
      { "field": "slot95", "type": "Word" },
      { "field": "slot96", "type": "Word" },
      { "field": "slot97", "type": "Word" },
      { "field": "slot98", "type": "Word" },
      { "field": "slot99", "type": "Word" }
    ],
    "CameraPointer": [
      { "field": "bounds", "type": "CameraBounds" },
      {
        "field": "adjusted_focus_x",
        "type": "Float",
        "comment": "focus adjusted so camera doesn't show beyond borders"
      },
      { "field": "adjusted_focus_y", "type": "Float" },
      {
        "field": "calculated_focus_x",
        "type": "Float",
        "comment": "forced values"
      },
      { "field": "calculated_focus_y", "type": "Float" },
      {
        "field": "focus_offset_x",
        "type": "Float",
        "comment": "added to position of focused entity, if any"
      },
      { "field": "focus_offset_y", "type": "Float" },
      {
        "field": "unknown1",
        "type": "Float",
        "comment": "does not get reset on level reload"
      },
      {
        "field": "focus_x",
        "type": "Float",
        "comment": "the unadjusted center point to focus the camera on; set this for full camera control when the focused entity = -1"
      },
      { "field": "focus_y", "type": "Float" },
      { "field": "unknown2", "type": "Float" },
      {
        "field": "vertical_pan",
        "type": "Float",
        "comment": "set to a high number, like 5000 and the camera pans from top to bottom"
      },
      {
        "field": "shake_countdown_start",
        "type": "UnsignedDword",
        "comment": "probably used to calculate the percentage of the amplitude when progressing through the shake"
      },
      { "field": "shake_countdown", "type": "UnsignedDword" },
      {
        "field": "shake_amplitude",
        "type": "Float",
        "comment": "the amount of camera shake"
      },
      {
        "field": "shake_multiplier_x",
        "type": "Float",
        "comment": "set to 0 to eliminate horizontal shake; negative inverts direction"
      },
      {
        "field": "shake_multiplier_y",
        "type": "Float",
        "comment": "set to 0 to eliminate vertical shake; negative inverts direction"
      },
      {
        "field": "uniform_shake",
        "type": "Bool",
        "comment": "if false, the shake gets randomized a bit"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      {
        "field": "focused_entity_uid",
        "type": "EntityUID",
        "comment": "if set to -1, you have free control over camera focus through focus_x, focus_y"
      },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      {
        "field": "inertia",
        "type": "Float",
        "comment": "0 = still; 1 = follow immediately"
      },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" }
    ],
    "CameraBounds": [
      { "field": "left", "type": "Float" },
      { "field": "right", "type": "Float" },
      { "field": "bottom", "type": "Float" },
      { "field": "top", "type": "Float" }
    ],
    "LiquidPhysicsPointer": [
      { "field": "unknown1", "type": "MysteryLiquidPointer1" },
      { "field": "water_physics_defaults", "type": "LiquidPhysicsParams" },
      { "field": "water_physics_engine", "type": "LiquidPhysicsEngine" },
      { "field": "water_tile_spawn_data", "type": "LiquidTileSpawnData" },

      {
        "field": "coarse_water_physics_defaults",
        "type": "LiquidPhysicsParams"
      },
      { "field": "coarse_water_physics_engine", "type": "LiquidPhysicsEngine" },
      {
        "field": "coarse_water_tile_spawn_data",
        "type": "LiquidTileSpawnData"
      },

      { "field": "lava_physics_defaults", "type": "LiquidPhysicsParams" },
      { "field": "lava_physics_engine", "type": "LiquidPhysicsEngine" },
      { "field": "lava_tile_spawn_data", "type": "LiquidTileSpawnData" },

      {
        "field": "coarse_lava_physics_defaults",
        "type": "LiquidPhysicsParams"
      },
      { "field": "coarse_lava_physics_engine", "type": "LiquidPhysicsEngine" },
      { "field": "coarse_lava_tile_spawn_data", "type": "LiquidTileSpawnData" },

      {
        "field": "stagnant_lava_physics_defaults",
        "type": "LiquidPhysicsParams"
      },
      {
        "field": "stagnant_lava_physics_engine",
        "type": "LiquidPhysicsEngine"
      },
      {
        "field": "stagnant_lava_tile_spawn_data",
        "type": "LiquidTileSpawnData"
      },
      { "field": "floors", "type": "PointerToMap", "comment": "pointer to map/list that contains all floor uids that the liquid interact with" },
      { "field": "activefloors", "type": "PointerToMap", "comment": "pointer to map/list that contains all activefloor uids that the liquid interact with" },
      { "field": "impostors", "type": "StdVector", "vectortype": "LiquidLake" },
      {
        "field": "total_liquid_spawned",
        "type": "UnsignedDword",
        "comment": "total number of spawned liquid entities, all types"
      },
      { "field": "unknown8", "type": "UnsignedDword", "comment": "padding probably" },
      {
        "field": "unknown9",
        "type": "DataPointer",
        "comment": "array byte* ? game allocates 0x2F9E8 bytes for it, (0x2F9E8 / g_level_max_x * g_level_max_y = 18) which is weird, but i still think it's position based index, maybe it's 16 and accounts for more rows (grater level height), always allocates after the LiquidPhysics"
      },
      {
        "field": "total_liquid_spawned2?",
        "type": "UnsignedDword",
        "comment": "same as total_liquid_spawned?"
      },
      { "field": "unknown12", "type": "Bool" },
      { "field": "padding12a", "type": "Byte" },
      { "field": "padding12b", "type": "Byte" },
      { "field": "padding12c", "type": "Byte" },
      { "field": "unknown13", "type": "UnsignedDword" }
    ],
    "PointerToMap":
    [
    { "field": "unknown", "type": "Map" }
    ],
    "LiquidLake":
    [
      { "field": "position1", "type": "UnsignedDword" },
      { "field": "position2", "type": "UnsignedDword" },
      { "field": "position3", "type": "UnsignedDword" },
      { "field": "lake_type", "type": "UnsignedDword" },
      { "field": "impostor_lake", "type": "EntityPointer" }
    ],
    "LiquidPhysicsParams": [
      {
        "field": "shader_type?",
        "type": "State32",
        "states": {
          "1": "water",
          "2": "lava"
        },
        "comment": "can also be flags, as for water, any value with bit one is fine"
      },
      {
        "field": "unknown2",
        "type": "UnsignedByte",
        "comment": "shader related, shader id maybe?"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "Float" },
      {
        "field": "cohesion?",
        "type": "Float",
        "comment": "negative number makes the liquid balls come apart more easily?"
      },
      {
        "field": "gravity",
        "type": "Float",
        "comment": "negative number to invert gravity"
      },
      { "field": "unknown6", "type": "Float" },
      { "field": "unknown7", "type": "Float" },
      {
        "field": "agitation",
        "type": "Float",
        "comment": "is agitation the right word? for me is just how bouncy the liquid is"
      },
      {
        "field": "unknown9",
        "type": "Float",
        "comment": "starts going nuts at around 2.70, pressure force? it seam to only matter at spawn, when there is a lot of liquid in one place"
      },
      { "field": "unknown10", "type": "Float" },
      { "field": "unknown11", "type": "Float" },
      { "field": "unknown12", "type": "Float" },
      { "field": "unknown13", "type": "Float" },
      { "field": "unknown14", "type": "Float" },
      { "field": "unknown15", "type": "Float" },
      { "field": "unknown16", "type": "Float" },
      { "field": "unknown17", "type": "Float" },
      { "field": "unknown18", "type": "Float" },
      { "field": "unknown19", "type": "Float" },
      { "field": "unknown20", "type": "UnsignedDword" },
      { "field": "unknown21", "type": "Float" },
      { "field": "unknown22", "type": "UnsignedDword" },
      { "field": "unknown23", "type": "Float" },
      { "field": "unknown24", "type": "UnsignedDword" }
    ],
    "LiquidTileSpawnData": [
      {
        "field": "liquid_flags?",
        "type": "Flags32",
        "flags": {
          "1": "",
          "2": "lava_interaction? crashes the game if no lava is present",
          "3": "pause_physics",
          "4": "",
          "5": "",
          "6": "low_agitation?",
          "7": "high_agitation?",
          "8": "high_surface_tension?",
          "9": "low_surface_tension?",
          "10": "",
          "11": "high_bounce?",
          "12": "low_bounce?",
          "13": "",
          "14": "",
          "15": "",
          "16": "",
          "17": "",
          "18": "",
          "19": "",
          "20": "",
          "21": "",
          "22": "",
          "23": "",
          "24": "",
          "25": "",
          "26": "",
          "27": "",
          "28": "",
          "29": "",
          "30": "",
          "31": "",
          "32": ""
        }
      },
      { "field": "last_spawn_x", "type": "Float" },
      { "field": "last_spawn_y", "type": "Float" },
      { "field": "spawn_velocity_x", "type": "Float" },
      { "field": "spawn_velocity_y", "type": "Float" },
      { "field": "unknown31", "type": "UnsignedDword" },
      { "field": "unknown32", "type": "UnsignedDword" },
      { "field": "unknown33", "type": "UnsignedDword" },
      { "field": "unknown34", "type": "MysteryLiquidPointer2" },
      {
        "field": "unknown35",
        "type": "DataPointer",
        "comment": "DataPointer? seam to get access validation if you change to something"
      },
      {
        "field": "liquidtile_liquid_amount",
        "type": "UnsignedDword",
        "comment": "how much liquid will be spawned from tilecode, it's (this + 1) * this"
      },
      { "field": "blobs_separation", "type": "Float" },
      {
        "field": "unknown39",
        "type": "Float",
        "comment": "is the last 4 garbage? seams not accessed"
      },
      { "field": "unknown40", "type": "Float" },
      { "field": "unknown41", "type": "Byte" },
      { "field": "padding41a", "type": "Byte" },
      { "field": "padding41b", "type": "Byte" },
      { "field": "padding41c", "type": "Byte" },
      { "field": "unknown42", "type": "UnsignedDword" }
    ],
    "MysteryPointer4": [
      { "field": "unknown1", "type": "UnsignedQword" },
      { "field": "unknown2", "type": "DataPointer" },
      { "field": "unknown3", "type": "UnsignedQword" },
      { "field": "unknown4", "type": "EntityList" },
      { "field": "unknown5", "type": "EntityList" },
      { "field": "unknown6", "type": "EntityList" },
      { "field": "unknown13", "type": "DataPointer" },
      { "field": "unknown14", "type": "DataPointer" },
      { "field": "unknown15", "type": "DataPointer" },
      { "field": "unknown16", "type": "UnsignedQword" },
      { "field": "unknown17", "type": "DataPointer" },
      { "field": "unknown18", "type": "DataPointer" },
      { "field": "unknown19", "type": "DataPointer" },
      { "field": "get_entities_result", "type": "GetEntitiesResultPointer" },
      { "field": "unknown21", "type": "UnsignedQword" },
      { "field": "unknown22", "type": "UnsignedByte" },
      { "field": "unknown23", "type": "UnsignedByte" },
      { "field": "unknown24", "type": "UnsignedByte" },
      { "field": "unknown25", "type": "UnsignedByte" },
      { "field": "unknown26", "type": "UnsignedDword" }
    ],
    "GetEntitiesResultPointer": [{ "field": "entities", "type": "EntityList" }],
    "LogicPointer": [
      { "field": "tutorial", "type": "TutorialPointer" },
      { "field": "ouroboros", "type": "OuroborosPointer" },
      { "field": "basecamp_speedrun", "type": "BasecampSpeedrunPointer" },
      { "field": "ghost_trigger", "type": "GhostLogicPointer" },
      { "field": "ghost_toast_trigger", "type": "GhostToastLogicPointer" },
      { "field": "tun_aggro", "type": "TunAggroPointer" },
      { "field": "diceshop", "type": "DiceShopPointer" },
      {
        "field": "tun_pre_challenge",
        "type": "TunPreChallengePointer",
        "comment": "until the challenge actually starts"
      },
      { "field": "tun_moon_challenge", "type": "MoonChallengePointer" },
      { "field": "tun_star_challenge", "type": "StarChallengePointer" },
      { "field": "tun_sun_challenge", "type": "SunChallengePointer" },
      {
        "field": "volcana_related",
        "type": "VolcanaRelatedPointer",
        "comment": "size is most likely incorrect"
      },
      {
        "field": "water_related",
        "type": "WaterRelatedPointer"
      },
      { "field": "olmec_cutscene", "type": "OlmecCutscenePointer" },
      { "field": "tiamat_cutscene", "type": "TiamatCutscenePointer" },
      { "field": "apep_trigger", "type": "ApepTriggerPointer" },
      {
        "field": "city_of_gold_ankh_sacrifice",
        "type": "CogAnkhSacrificePointer"
      },
      { "field": "duat_bosses_trigger", "type": "DuatBossesTriggerPointer" },
      { "field": "tiamat", "type": "TiamatInfoPointer" },
      { "field": "tusk_pleasure_palace", "type": "TuskPleasurePalacePointer" },
      {
        "field": "discovery_info",
        "type": "DiscoveryPointer",
        "comment": "black market, vlad, wet fur discovery; shows the toast"
      },
      { "field": "black_market", "type": "BlackMarketDoorPointer" },
      { "field": "cosmic_ocean", "type": "CosmicOceanPointer" },
      { "field": "arena_1", "type": "Arena1Pointer" },
      { "field": "arena_2", "type": "Arena2Pointer" },
      { "field": "arena_3", "type": "Arena3Pointer" },
      { "field": "arena_alien_blast", "type": "ArenaAlienBlastPointer" },
      { "field": "arena_loose_bombs", "type": "ArenaLooseBombsPointer" }
    ],
    "TutorialPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~TutorialPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" }
    ],
    "OuroborosPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~OuroborosPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      {
        "field": "unknown3",
        "type": "DataPointer",
        "comment": "sound related?"
      },
      { "field": "timer", "type": "UnsignedWord" }
    ],
    "BasecampSpeedrunPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~BasecampSpeedrunPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      {
        "field": "official",
        "type": "EntityUID",
        "comment": "character that keeps the time"
      },
      {
        "field": "crate",
        "type": "EntityUID",
        "comment": "you must break this crate for the run to be valid, otherwise you're cheating"
      },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" }
    ],
    "GhostLogicPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~GhostLogicPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" }
    ],
    "GhostToastLogicPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~GhostLogicPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "toast_timer", "type": "UnsignedDword" }
    ],
    "TunAggroPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~GhostLogicPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" }
    ],
    "TunPreChallengePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~TunPreChallengePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" }
    ],
    "MoonChallengePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~MoonChallengePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "floor_challenge_entrance", "type": "EntityUID" },
      { "field": "floor_challenge_waitroom", "type": "EntityUID" },
      { "field": "challenge_active", "type": "Bool" },
      {
        "field": "forcefield_countdown",
        "type": "UnsignedByte",
        "comment": "waiting area forcefield activation timer (the one that locks you in)"
      },
      { "field": "unknown7", "type": "UnsignedWord" },
      { "field": "unknown8a", "type": "UnsignedWord" },
      { "field": "unknown8b", "type": "UnsignedWord" },
      { "field": "mattock", "type": "EntityUID" }
    ],
    "StarChallengePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~StarChallengePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "floor_challenge_entrance", "type": "EntityUID" },
      { "field": "floor_challenge_waitroom", "type": "EntityUID" },
      { "field": "challenge_active", "type": "Bool" },
      {
        "field": "forcefield_countdown",
        "type": "UnsignedByte",
        "comment": "waiting area forcefield activation timer (the one that locks you in)"
      },
      { "field": "unknown7", "type": "UnsignedWord" },
      { "field": "unknown8", "type": "UnsignedDword" },
      {
        "field": "torches",
        "type": "StdVector",
        "vectortype": "EntityPointer"
      },
      { "field": "start_countdown", "type": "UnsignedByte" }
    ],
    "SunChallengePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~SunChallengePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "floor_challenge_entrance", "type": "EntityUID" },
      { "field": "floor_challenge_waitroom", "type": "EntityUID" },
      { "field": "challenge_active", "type": "Bool" },
      {
        "field": "forcefield_countdown",
        "type": "UnsignedByte",
        "comment": "waiting area forcefield activation timer (the one that locks you in)"
      },
      { "field": "unknown7", "type": "UnsignedWord" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "start_countdown", "type": "UnsignedByte" }
    ],
    "VolcanaRelatedPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~VolcanaRelatedPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "DataPointer" },
      { "field": "unknown4", "type": "DataPointer" },
      { "field": "unknown5", "type": "DataPointer" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "DataPointer" },
      { "field": "unknown9", "type": "DataPointer" }
    ],
    "WaterRelatedPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~WaterRelatedPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedByte" }
    ],
    "DiceShopPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~DiceShopPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      {
        "field": "boss",
        "type": "EntityUID",
        "comment": "either tusk or the shopkeeper"
      },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "bet_machine", "type": "EntityUID" },
      { "field": "die1", "type": "EntityUID" },
      { "field": "die2", "type": "EntityUID" },
      { "field": "die_1_value", "type": "Byte" },
      { "field": "die_2_value", "type": "Byte" },
      { "field": "unknown8", "type": "UnsignedWord" },
      { "field": "prize_dispenser", "type": "EntityUID" },
      { "field": "prize", "type": "EntityUID" },
      { "field": "forcefield", "type": "EntityUID" },
      {
        "field": "bet_active",
        "type": "Bool",
        "comment": "whether money has been spent, a bet is ongoing"
      },
      { "field": "forcefield_deactivated", "type": "Bool" },
      { "field": "boss_angry", "type": "Bool" },
      {
        "field": "result_announcement_timer",
        "type": "UnsignedByte",
        "comment": "the time the boss waits after your second die throw to announce the results"
      },
      {
        "field": "won_prizes_count",
        "type": "UnsignedByte",
        "comment": "to see whether you achieved high roller status"
      },
      { "field": "unknown14", "type": "UnsignedByte" },
      { "field": "unknown15", "type": "UnsignedByte" },
      { "field": "unknown16", "type": "UnsignedByte" },
      {
        "field": "balance",
        "type": "Dword",
        "comment": "cash balance of all the games"
      }
    ],
    "OlmecCutscenePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~OlmecCutscenePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown6a", "type": "UnsignedByte" },
      { "field": "unknown6b", "type": "UnsignedByte" },
      { "field": "unknown6c", "type": "UnsignedByte" },
      { "field": "unknown6d", "type": "UnsignedByte" },
      { "field": "unknown7a", "type": "UnsignedByte" },
      { "field": "unknown7b", "type": "UnsignedByte" },
      { "field": "unknown7c", "type": "UnsignedByte" },
      { "field": "unknown7d", "type": "UnsignedByte" },
      { "field": "fx_olmecpart_large", "type": "EntityPointer" },
      { "field": "olmec", "type": "EntityPointer" },
      { "field": "player", "type": "EntityPointer" },
      { "field": "cinematic_anchor", "type": "EntityPointer" },
      { "field": "timer", "type": "UnsignedDword" }
    ],
    "TiamatCutscenePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~TiamatCutscenePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "tiamat", "type": "EntityPointer" },
      { "field": "player", "type": "EntityPointer" },
      { "field": "cinematic_anchor", "type": "EntityPointer" },
      { "field": "timer", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "Dword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" }
    ],
    "ApepTriggerPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ApepTriggerPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "spawn_cooldown", "type": "UnsignedDword" },
      { "field": "cooling_down", "type": "Bool" },
      { "field": "apep_journal_entry_logged", "type": "Bool" },
      { "field": "unknown4c", "type": "UnsignedByte" },
      { "field": "unknown4d", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "DuatBossesTriggerPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~DuatBossesTriggerPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "CogAnkhSacrificePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~CogAnkhSacrificePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "timer", "type": "UnsignedByte" }
    ],
    "TiamatInfoPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~TiamatInfoPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "bubble_spawn_timer", "type": "UnsignedByte" }
    ],
    "TuskPleasurePalacePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~TuskPleasurePalacePointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "locked_door", "type": "EntityUID" },
      { "field": "unknown4", "type": "UnsignedDword" }
    ],
    "DiscoveryPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~DiscoveryPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "BlackMarketDoorPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~BlackMarketDoorPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "CosmicOceanPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~CosmicOceanPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" }
    ],
    "Arena1Pointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~Arena1Pointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "crate_spawn_timer", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "Arena2Pointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~Arena2Pointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "unknown1", "type": "UnsignedByte" }
    ],
    "Arena3Pointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~Arena3Pointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" }
    ],
    "ArenaAlienBlastPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ArenaAlienBlastPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "timer", "type": "UnsignedDword" }
    ],
    "ArenaLooseBombsPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ArenaLooseBombsPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "perform",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "logic_index",
        "type": "UnsignedDword",
        "comment": "array index into static.logic"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "timer", "type": "UnsignedDword" }
    ],
    "QuestsInfoPointer": [
      { "field": "yang", "type": "QuestHandlerPointer" },
      { "field": "jungle_sisters", "type": "QuestHandlerPointer" },
      { "field": "van_horsing", "type": "QuestHandlerPointer" },
      { "field": "sparrow", "type": "QuestHandlerPointer" },
      { "field": "madame_tusk", "type": "QuestHandlerPointer" },
      { "field": "beg", "type": "QuestHandlerPointer" },
      {
        "field": "yang_state",
        "type": "State8",
        "states": {
          "-1": "Angered Yang",
          "0": "Quest not started",
          "2": "Turkey pen spawned",
          "3": "Both turkeys delivered",
          "4": "Turkey shop spawned",
          "5": "One turkey bought in turkey shop",
          "6": "Two turkeys bought in turkey shop",
          "7": "Three turkeys bought in turkey shop"
        }
      },
      {
        "field": "jungle_sisters_flags",
        "type": "Flags8",
        "flags": {
          "1": "Parsley rescued",
          "2": "Parsnip rescued",
          "3": "Parmesan rescued",
          "4": "Warning one way door",
          "5": "Great party, huh? Ooba",
          "6": "I wish I brought a jacket",
          "7": "",
          "8": ""
        },
        "comment": "-1 = angry"
      },
      {
        "field": "van_horsing_state",
        "type": "State8",
        "states": {
          "0": "Quest not started",
          "1": "Jailcell spawned",
          "2": "First encounter (diamond thrown)",
          "3": "Vlad's castle spot spawned",
          "4": "Horsing shot Vlad",
          "5": "Temple hideout spawned",
          "6": "Second encounter (alien compass thrown)",
          "7": "Tusk cellar (At least she removed my curse)"
        }
      },
      {
        "field": "sparrow_state",
        "type": "State8",
        "states": {
          "-2": "Angry",
          "-1": "Dead",
          "0": "Quest not started",
          "1": "Thief status",
          "2": "Finished level with thief status",
          "3": "First hideout spawned (rope throw)",
          "4": "First encounter (ropes thrown)",
          "5": "Tusk idol stolen",
          "6": "Second hideout spawned (Neo Babylon)",
          "7": "Second encounter (meet me at Tusk's basement)",
          "8": "Meeting at Tusk's basement (get past lasers)",
          "9": "After stealing half of the treasure, she says 'Great work team'"
        }
      },
      {
        "field": "madame_tusk_state",
        "type": "State8",
        "states": {
          "-2": "Angered Tusk",
          "-1": "Dead Tusk",
          "0": "Quest not started",
          "1": "Dice house spawned",
          "2": "High roller status",
          "3": "Palace welcome message"
        }
      },
      {
        "field": "beg_state",
        "type": "State8",
        "states": {
          "0": "Quest not started",
          "1": "Altar destroyed",
          "2": "Spawned with bomb bag",
          "3": "Bomb bag thrown",
          "4": "Spawned with true crown",
          "5": "True crown thrown"
        }
      },
      { "field": "unknown13", "type": "UnsignedByte" },
      { "field": "unknown14", "type": "UnsignedByte" }
    ],
    "QuestHandlerPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~QuestHandlerPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "initialize",
            "params": "",
            "return": "",
            "comment": [
              "Gets called on every non-CO level. Function checks whether the quest needs to be initialized.",
              "Yang: checks whether his quest status = 1 -> makes his pen work",
              "Sisters: make them appear on Olmec",
              "Horsing: makes him appear in Vlad's castle",
              "Sparrow: nop",
              "Tusk: populates pleasure palace with other characters depending on their quest state",
              "Beg: nop"
            ]
          },
          "2": {
            "name": "handle_beg_appearances",
            "params": "",
            "return": "",
            "comment": ["Only implemented for Beg quest"]
          }
        }
      },
      { "field": "id", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "ScreenPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenPointer",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "handle_camera_zoom_level",
            "params": "",
            "return": "",
            "comment": ["May do more than this"]
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      {
        "field": "buttons",
        "type": "Flags8",
        "flags": {
          "1": "Jump",
          "2": "Attack",
          "3": "Bomb",
          "4": "Rope",
          "5": "Run",
          "6": "Use door/buy",
          "7": "Pause",
          "8": "Journal"
        }
      },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedWord" },
      { "field": "unknown7", "type": "UnsignedWord" }
    ],
    "PlayerInputs": [
      { "field": "player_slot_1", "type": "PlayerSlot" },
      { "field": "player_slot_2", "type": "PlayerSlot" },
      { "field": "player_slot_3", "type": "PlayerSlot" },
      { "field": "player_slot_4", "type": "PlayerSlot" },
      { "field": "player_slot_1_settings", "type": "PlayerSlotSettings" },
      { "field": "player_slot_2_settings", "type": "PlayerSlotSettings" },
      { "field": "player_slot_3_settings", "type": "PlayerSlotSettings" },
      { "field": "player_slot_4_settings", "type": "PlayerSlotSettings" }
    ],
    "PlayerSlot": [
      {
        "field": "buttons_gameplay",
        "type": "Flags16",
        "ref": "buttons_player",
        "comment": "does not work in pause menu"
      },
      {
        "field": "buttons",
        "type": "Flags16",
        "ref": "buttons_player",
        "comment": "works everywhere, including in pause menu"
      },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "input_mapping_keyboard", "type": "InputMappingPointer" },
      { "field": "input_mapping_controller", "type": "InputMappingPointer" },
      { "field": "player_slot", "type": "UnsignedByte" },
      { "field": "is_participating", "type": "Bool" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedByte" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "PlayerSlotPointer": [
      { "field": "input", "type": "PlayerSlot" }
    ],
    "PlayerSlotSettings": [
      { "field": "controller_vibration", "type": "Bool" },
      { "field": "auto_run_enabled", "type": "Bool" },
      { "field": "controller_right_stick", "type": "Bool" }
    ],
    "InputMappingPointer": [
      { "field": "jump", "type": "Byte" },
      { "field": "attack", "type": "Byte" },
      { "field": "bomb", "type": "Byte" },
      { "field": "rope", "type": "Byte" },
      { "field": "walk_run", "type": "Byte" },
      { "field": "use_door_buy", "type": "Byte" },
      { "field": "pause_menu", "type": "Byte" },
      { "field": "journal", "type": "Byte" },
      { "field": "left", "type": "Byte" },
      { "field": "right", "type": "Byte" },
      { "field": "up", "type": "Byte" },
      { "field": "down", "type": "Byte" }
    ],
    "ScreenArenaIntroPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenArenaIntroPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "players", "type": "TextureRenderingInfo" },
      { "field": "background_colors", "type": "TextureRenderingInfo" },
      { "field": "vertical_lines", "type": "TextureRenderingInfo" },
      {
        "field": "vertical_line_electricity_effect",
        "type": "TextureRenderingInfo"
      },
      { "field": "all_forced", "type": "TextureRenderingInfo" },
      { "field": "left_scroll", "type": "TextureRenderingInfo" },
      { "field": "right_scroll", "type": "TextureRenderingInfo" },
      { "field": "scroll_unfurl_timer", "type": "Float" },
      {
        "field": "waiting",
        "type": "Bool",
        "comment": "when false, the cutscene ends and gameplay starts"
      },
      { "field": "unknown10b", "type": "UnsignedByte" },
      { "field": "unknown10c", "type": "UnsignedByte" },
      { "field": "unknown10d", "type": "UnsignedByte" },
      { "field": "unknown11a", "type": "UnsignedWord" },
      { "field": "unknown11c", "type": "UnsignedWord" },
      { "field": "names_opacity", "type": "Float" },
      { "field": "line_electricity_effect_timer", "type": "Float" },
      {
        "field": "state",
        "type": "UnsignedByte",
        "comment": "0 = start, 1 = show names, ..."
      },
      { "field": "unknown14b", "type": "UnsignedByte" },
      { "field": "unknown14c", "type": "UnsignedByte" },
      { "field": "unknown14d", "type": "UnsignedByte" },
      {
        "field": "countdown",
        "type": "UnsignedDword",
        "comment": "when 0, continues to gameplay"
      },
      { "field": "unknown16", "type": "UnsignedDword" }
    ],
    "ScreenTeamSelectPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenTeamSelectPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "ana_carrying_torch", "type": "TextureRenderingInfo" },
      { "field": "scroll_bottom_left", "type": "TextureRenderingInfo" },
      { "field": "scrollend_bottom_left", "type": "TextureRenderingInfo" },
      { "field": "four_ropes", "type": "TextureRenderingInfo" },
      { "field": "all_forced", "type": "TextureRenderingInfo" },
      {
        "field": "four_characters",
        "type": "TextureRenderingInfo",
        "comment": "the chosen characters climbing the ropes"
      },
      { "field": "left_arrow", "type": "TextureRenderingInfo" },
      { "field": "right_arrow", "type": "TextureRenderingInfo" },
      { "field": "start_panel", "type": "TextureRenderingInfo" },
      { "field": "start_panel_slide_timer", "type": "Float" },
      { "field": "pulsating_arrows_timer", "type": "Float" },
      { "field": "selected_player", "type": "UnsignedByte" },
      {
        "field": "buttons",
        "type": "Flags8",
        "flags": {
          "1": "Left",
          "2": "Right",
          "3": "Up",
          "4": "Down",
          "5": "-",
          "6": "-",
          "7": "-",
          "8": "-"
        }
      },
      { "field": "ready", "type": "Bool" },
      { "field": "unknown4d", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" }
    ],
    "ScreenArenaScorePointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenArenaScorePointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3a", "type": "UnsignedWord" },
      { "field": "unknown3b", "type": "UnsignedWord" },
      { "field": "woodpanel_slide_timer", "type": "Float" },
      { "field": "scroll_unfurl_timer", "type": "Float" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "unknown9", "type": "Float" },
      { "field": "unknown10", "type": "TextureRenderingInfo" },
      { "field": "woodpanel", "type": "TextureRenderingInfo" },
      { "field": "unknown_all_forced", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_left_scroll", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_right_scroll", "type": "TextureRenderingInfo" },
      { "field": "text_id_1", "type": "StringsTableID" },
      { "field": "text_id_2", "type": "StringsTableID" },
      { "field": "woodpanel_visible", "type": "Bool" },
      { "field": "unknown13b", "type": "UnsignedByte" },
      { "field": "woodpanel_slide_toggle", "type": "Bool" },
      { "field": "unknown13d", "type": "UnsignedByte" },
      {
        "field": "animation_sequence",
        "type": "UnsignedDword",
        "comment": "confetti, ..."
      },
      { "field": "background", "type": "TextureRenderingInfo" },
      { "field": "ok_panel", "type": "TextureRenderingInfo" },
      { "field": "ready_panel", "type": "TextureRenderingInfo" },
      {
        "field": "ready_speechbubble_indicator",
        "type": "TextureRenderingInfo"
      },
      { "field": "pillars", "type": "TextureRenderingInfo" },
      { "field": "bottom_lava", "type": "TextureRenderingInfo" },
      { "field": "players", "type": "TextureRenderingInfo" },
      { "field": "player_shadows", "type": "TextureRenderingInfo" },
      { "field": "unknown24", "type": "TextureRenderingInfo" },
      { "field": "unknown25", "type": "TextureRenderingInfo" },
      { "field": "score_counter", "type": "TextureRenderingInfo" },
      { "field": "unknown27", "type": "TextureRenderingInfo" },
      { "field": "lava_bubbles?", "type": "TextureRenderingInfo" },
      { "field": "player_1_won", "type": "Bool" },
      { "field": "player_2_won", "type": "Bool" },
      { "field": "player_3_won", "type": "Bool" },
      { "field": "player_4_won", "type": "Bool" },
      { "field": "victory_jump_y_pos", "type": "Float" },
      { "field": "victory_jump_velocity", "type": "Float" },
      { "field": "unknown35", "type": "Float" },
      { "field": "animation_frame?", "type": "UnsignedDword" },
      { "field": "unknown37", "type": "Bool" },
      { "field": "squash_and_celebrate", "type": "Bool" },
      { "field": "player_1_ready", "type": "Bool" },
      { "field": "player_2_ready", "type": "Bool" },
      { "field": "player_3_ready", "type": "Bool" },
      { "field": "player_4_ready", "type": "Bool" },
      { "field": "unknown43", "type": "Bool" },
      { "field": "unknown44", "type": "Bool" },
      { "field": "next_transition_timer", "type": "UnsignedDword" },
      {
        "field": "player_1_bottom_pillar_offset",
        "type": "Float",
        "comment": "0.0 = target, depending on score"
      },
      { "field": "player_2_bottom_pillar_offset", "type": "Float" },
      { "field": "player_3_bottom_pillar_offset", "type": "Float" },
      { "field": "player_4_bottom_pillar_offset", "type": "Float" },
      { "field": "player_1_crushing_pillar_height", "type": "Float" },
      { "field": "player_2_crushing_pillar_height", "type": "Float" },
      { "field": "player_3_crushing_pillar_height", "type": "Float" },
      { "field": "player_4_crushing_pillar_height", "type": "Float" },
      { "field": "player_1_create_giblets", "type": "Bool" },
      { "field": "player_2_create_giblets", "type": "Bool" },
      { "field": "player_3_create_giblets", "type": "Bool" },
      { "field": "player_4_create_giblets", "type": "Bool" },
      { "field": "next_sidepanel_slidein_timer", "type": "Float" }
    ],
    "ScreenArenaStagesSelectPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenArenaStagesSelectPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3a", "type": "UnsignedWord" },
      { "field": "unknown3b", "type": "UnsignedWord" },
      { "field": "woodenpanel_top_slidein_timer", "type": "Float" },
      { "field": "woodenpanel_top_scroll_unfurl_timer", "type": "Float" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "TextureRenderingInfo" },
      { "field": "woodenpanel_top", "type": "TextureRenderingInfo" },
      { "field": "unknown10", "type": "TextureRenderingInfo" },
      {
        "field": "woodenpanel_top_left_scroll",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "woodenpanel_top_right_scroll",
        "type": "TextureRenderingInfo"
      },
      { "field": "text_id_1", "type": "StringsTableID" },
      { "field": "text_id_2", "type": "StringsTableID" },
      { "field": "text_id_3", "type": "StringsTableID" },
      { "field": "text_id_4", "type": "StringsTableID" },
      { "field": "woodenpanel_top_visible", "type": "Bool" },
      { "field": "woodenpanel_bottom_visible", "type": "Bool" },
      { "field": "woodenpanels_toggle", "type": "Bool" },
      { "field": "unknown11d", "type": "Bool" },
      {
        "field": "buttons",
        "type": "Flags16",
        "ref": "buttons_player"
      },
      { "field": "padding1", "type": "UnsignedWord" },
      { "field": "brick_background", "type": "TextureRenderingInfo" },
      { "field": "info_black_background", "type": "TextureRenderingInfo" },
      { "field": "woodenpanel_center", "type": "TextureRenderingInfo" },
      {
        "field": "blocky_level_representation",
        "type": "TextureRenderingInfo"
      },
      { "field": "theme_indicator", "type": "TextureRenderingInfo" },
      { "field": "bricks_bottom_left", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_0", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_1", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_2", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_3", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_4", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_5", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_6", "type": "TextureRenderingInfo" },
      { "field": "grid_background_row_7", "type": "TextureRenderingInfo" },
      {
        "field": "grid_background_disabled_cross",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "grid_background_manipulators",
        "type": "TextureRenderingInfo"
      },
      { "field": "unknown21", "type": "TextureRenderingInfo" },
      { "field": "grid_disabled_cross", "type": "TextureRenderingInfo" },
      { "field": "grid_yellow_highlighter", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_esc", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_fight", "type": "TextureRenderingInfo" },
      { "field": "big_player_drawing", "type": "TextureRenderingInfo" },
      { "field": "players_turn_scroll", "type": "TextureRenderingInfo" },
      { "field": "players_turn_scroll_handle", "type": "TextureRenderingInfo" },
      { "field": "grid_player_icon", "type": "TextureRenderingInfo" },
      { "field": "unknown30", "type": "Float" },
      { "field": "unknown31", "type": "Float" },
      { "field": "unknown32", "type": "Float" }
    ],
    "ScreenArenaLevelPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenArenaLevelPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "get_ready", "type": "TextureRenderingInfo" },
      {
        "field": "get_ready_backdrop?",
        "type": "TextureRenderingInfo",
        "comment": "flies by too fast to see..."
      },
      { "field": "get_ready_gray_background", "type": "TextureRenderingInfo" },
      { "field": "get_ready_outline", "type": "TextureRenderingInfo" },
      { "field": "unknown7", "type": "TextureRenderingInfo" },
      { "field": "unknown8", "type": "TextureRenderingInfo" },
      { "field": "unknown9", "type": "TextureRenderingInfo" },
      { "field": "unknown10", "type": "TextureRenderingInfo" },
      { "field": "unknown11", "type": "TextureRenderingInfo" },
      { "field": "unknown12", "type": "TextureRenderingInfo" },
      { "field": "unknown13", "type": "TextureRenderingInfo" },
      { "field": "unknown14", "type": "TextureRenderingInfo" },
      { "field": "unknown15", "type": "TextureRenderingInfo" },
      { "field": "unknown16", "type": "TextureRenderingInfo" },
      { "field": "unknown17", "type": "TextureRenderingInfo" },
      { "field": "unknown18", "type": "TextureRenderingInfo" },
      { "field": "unknown19", "type": "TextureRenderingInfo" },
      { "field": "unknown20", "type": "TextureRenderingInfo" },
      { "field": "unknown21", "type": "TextureRenderingInfo" },
      { "field": "unknown22", "type": "TextureRenderingInfo" },
      { "field": "unknown23", "type": "TextureRenderingInfo" },
      { "field": "unknown24", "type": "TextureRenderingInfo" },
      { "field": "unknown25", "type": "TextureRenderingInfo" },
      { "field": "unknown26", "type": "TextureRenderingInfo" },
      { "field": "unknown27", "type": "TextureRenderingInfo" },
      { "field": "unknown28", "type": "TextureRenderingInfo" },
      { "field": "unknown29", "type": "TextureRenderingInfo" },
      { "field": "unknown30", "type": "TextureRenderingInfo" },
      { "field": "unknown31", "type": "TextureRenderingInfo" },
      { "field": "unknown32", "type": "TextureRenderingInfo" },
      { "field": "unknown33", "type": "TextureRenderingInfo" },
      { "field": "unknown34", "type": "TextureRenderingInfo" },
      { "field": "unknown35", "type": "TextureRenderingInfo" },
      { "field": "unknown36", "type": "TextureRenderingInfo" },
      { "field": "unknown37", "type": "TextureRenderingInfo" },
      { "field": "unknown38", "type": "TextureRenderingInfo" },
      { "field": "unknown39", "type": "TextureRenderingInfo" },
      { "field": "unknown40", "type": "TextureRenderingInfo" },
      { "field": "unknown41", "type": "TextureRenderingInfo" },
      { "field": "unknown42", "type": "TextureRenderingInfo" },
      { "field": "unknown43", "type": "TextureRenderingInfo" },
      { "field": "unknown44", "type": "TextureRenderingInfo" },
      { "field": "unknown45", "type": "TextureRenderingInfo" },
      { "field": "unknown46", "type": "TextureRenderingInfo" },
      { "field": "unknown47", "type": "TextureRenderingInfo" },
      { "field": "unknown48", "type": "TextureRenderingInfo" },
      { "field": "unknown49", "type": "TextureRenderingInfo" },
      { "field": "unknown50", "type": "TextureRenderingInfo" },
      { "field": "unknown51", "type": "TextureRenderingInfo" },
      { "field": "unknown52", "type": "TextureRenderingInfo" },
      { "field": "unknown53", "type": "TextureRenderingInfo" }
    ],
    "ScreenTransitionPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenTransitionPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "Float" },
      {
        "field": "woodpanel_pos",
        "type": "Float",
        "comment": "from 1.3 (invisible) to 0 (in its place)"
      },
      {
        "field": "stats_scroll_horizontal_pos",
        "type": "Float",
        "comment": "from 1 (invisible) to 0 (in its place)"
      },
      {
        "field": "stats_scroll_vertical_pos",
        "type": "Float",
        "comment": "from about 1.30 (invisible) to 0 (in its place)"
      },
      {
        "field": "level_completed_pos",
        "type": "Float",
        "comment": "top left thing on the chains that slides in, showing e.g. 1-2 COMPLETED! from 0.5 to 0"
      },
      { "field": "stats_scroll_unfurl_actualvalue", "type": "Float" },
      { "field": "stats_scroll_unfurl_targetvalue", "type": "Float" },
      { "field": "woodpanel1", "type": "TextureRenderingInfo" },
      { "field": "woodpanel2", "type": "TextureRenderingInfo" },
      { "field": "woodpanel3", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_cutout1", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_cutout2", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_cutout3", "type": "TextureRenderingInfo" },
      { "field": "woodplank", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_bottomcutout1", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_bottomcutout2", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_bottomcutout3", "type": "TextureRenderingInfo" },
      { "field": "all_forced", "type": "TextureRenderingInfo" },
      { "field": "stats_scroll_top_bottom", "type": "TextureRenderingInfo" },
      { "field": "killcount_rounded_rect", "type": "TextureRenderingInfo" },
      { "field": "level_completed_panel", "type": "TextureRenderingInfo" },
      { "field": "stats_scroll_state_1", "type": "UnsignedDword" },
      { "field": "stats_scroll_state_2", "type": "UnsignedDword" },
      { "field": "hide_press_to_go_next_level", "type": "Bool" },
      { "field": "unknown2b", "type": "Bool" },
      { "field": "unknown2c", "type": "Bool" },
      { "field": "unknown2d", "type": "Bool" },
      { "field": "mama_tunnel", "type": "TextureRenderingInfo" },
      { "field": "speechbubble", "type": "TextureRenderingInfo" },
      { "field": "speechbubble_arrow", "type": "TextureRenderingInfo" },
      { "field": "unknown5", "type": "Float" },
      { "field": "unknown6", "type": "Float" },
      { "field": "unknown7", "type": "Float" },
      { "field": "mama_tunnel_fade_actualvalue", "type": "Float" },
      {
        "field": "mama_tunnel_fade_targetvalue",
        "type": "Float",
        "comment": "0 = hidden; 1 = fully shown"
      },
      { "field": "mama_tunnel_text_id", "type": "StringsTableID" },
      {
        "field": "mama_tunnel_text_buffer",
        "type": "UTF16StringFixedSize",
        "offset": 512
      },
      { "field": "mama_tunnel_choice_visible", "type": "Bool" },
      { "field": "mama_tunnel_agree_with_gift", "type": "Bool" },
      { "field": "mama_tunnel_face_invisible", "type": "Bool" },
      {
        "field": "unknown18",
        "type": "UnsignedByte",
        "comment": "probably padding"
      },
      { "field": "mama_tunnel_face_transparency", "type": "Float" },
      { "field": "mama_tunnel_agree_panel", "type": "TextureRenderingInfo" },
      {
        "field": "mama_tunnel_agree_panel_indicator",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "woodpanel_cutout_big_money1",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "woodpanel_cutout_big_money2",
        "type": "TextureRenderingInfo"
      },
      {
        "field": "woodpanel_cutout_big_money3",
        "type": "TextureRenderingInfo"
      },
      { "field": "big_dollar_sign", "type": "TextureRenderingInfo" },
      { "field": "unknown26", "type": "TextureRenderingInfo" },
      {
        "field": "string_buffer",
        "type": "UTF16StringFixedSize",
        "offset": 260
      },
      {
        "field": "stats_scroll_unfurl_sequence_timer",
        "type": "UnsignedDword"
      },
      { "field": "unknown30", "type": "UnsignedDword" },
      { "field": "unknown31", "type": "UnsignedDword" },
      { "field": "player1_stats_scroll_numeric_value", "type": "Dword" },
      { "field": "player2_stats_scroll_numeric_value", "type": "Dword" },
      { "field": "player3_stats_scroll_numeric_value", "type": "Dword" },
      { "field": "player4_stats_scroll_numeric_value", "type": "Dword" },
      { "field": "player_1_secondary_icon", "type": "TextureRenderingInfo" },
      { "field": "player_2_secondary_icon", "type": "TextureRenderingInfo" },
      { "field": "player_3_secondary_icon", "type": "TextureRenderingInfo" },
      { "field": "player_4_secondary_icon", "type": "TextureRenderingInfo" },
      { "field": "player_1_icon", "type": "TextureRenderingInfo" },
      { "field": "player_2_icon", "type": "TextureRenderingInfo" },
      { "field": "player_3_icon", "type": "TextureRenderingInfo" },
      { "field": "player_4_icon", "type": "TextureRenderingInfo" },
      {
        "field": "player1_secondary_icon_type",
        "type": "Dword",
        "comment": "something strange going on here: same nr for diff players yields diff sprite"
      },
      { "field": "player2_secondary_icon_type", "type": "Dword" },
      { "field": "player3_secondary_icon_type", "type": "Dword" },
      { "field": "player4_secondary_icon_type", "type": "Dword" },
      { "field": "player1_icon_index", "type": "Dword" },
      { "field": "player2_icon_index", "type": "Dword" },
      { "field": "player3_icon_index", "type": "Dword" },
      { "field": "player4_icon_index", "type": "Dword" },
      { "field": "unknown32", "type": "TextureRenderingInfo" },
      { "field": "unknown33", "type": "TextureRenderingInfo" },
      { "field": "unknown34", "type": "TextureRenderingInfo" },
      { "field": "unknown35", "type": "TextureRenderingInfo" },
      { "field": "hourglasses", "type": "TextureRenderingInfo" },
      { "field": "small_dollar_signs", "type": "TextureRenderingInfo" },
      {
        "field": "string_buffer_this_level_time",
        "type": "UTF16StringFixedSize",
        "offset": 20
      },
      {
        "field": "string_buffer_total_time",
        "type": "UTF16StringFixedSize",
        "offset": 20
      },
      {
        "field": "string_buffer_this_level_milliseconds",
        "type": "UTF16StringFixedSize",
        "offset": 10
      },
      {
        "field": "string_buffer_total_milliseconds",
        "type": "UTF16StringFixedSize",
        "offset": 10
      },
      {
        "field": "string_buffer_this_level_money",
        "type": "UTF16StringFixedSize",
        "offset": 20
      },
      {
        "field": "string_buffer_total_money",
        "type": "UTF16StringFixedSize",
        "offset": 20
      },
      { "field": "this_level_money_color_red", "type": "Float" },
      { "field": "this_level_money_color_green", "type": "Float" },
      { "field": "this_level_money_color_blue", "type": "Float" },
      { "field": "this_level_money_color_alpha", "type": "Float" },
      { "field": "unknown41", "type": "UnsignedByte" },
      { "field": "unknown42", "type": "UnsignedByte" },
      { "field": "unknown43", "type": "UnsignedByte" },
      { "field": "unknown44", "type": "UnsignedByte" },
      { "field": "unknown45", "type": "UnsignedDword" },
      { "field": "unknown46", "type": "UnsignedDword" },
      { "field": "unknown47", "type": "UnsignedDword" },
      { "field": "unknown48", "type": "UnsignedDword" },
      { "field": "unknown49", "type": "UnsignedDword" }
    ],
    "ScreenRecapPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenRecapPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "ScreenConstellationPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenConstellationPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedDword" },
      {
        "field": "sequence_state",
        "type": "UnsignedWord",
        "comment": "0 = spinning; 1 = stars appear ; 2 = text starts fading in ; 3 = text finished fading ; 4 = text fades out ; 5 = text is gone, credits rolling ;  6 - 7 - 8 = final score shown"
      },
      { "field": "animation_timer", "type": "UnsignedWord" },
      { "field": "constellation_text_opacity", "type": "Float" },
      {
        "field": "constellation_text",
        "type": "UTF16StringFixedSize",
        "offset": 64
      },
      {
        "field": "credits_progression",
        "type": "ScrollingCreditsProgressionPointer",
        "comment": "points to float timer that indicates how far in the scrolling credits we are"
      },
      { "field": "explosion_loop", "type": "SoundMeta" },
      { "field": "bg_music", "type": "SoundMeta" },
      { "field": "unknown30", "type": "UnsignedQword" },
      { "field": "unknown31", "type": "UnsignedDword" },
      { "field": "unknown32", "type": "UnsignedDword" }
    ],
    "ScreenWinPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenWinPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedQword" },
      { "field": "unknown3", "type": "UnsignedQword" },
      { "field": "unknown4", "type": "UnsignedQword" },
      { "field": "unknown5", "type": "UnsignedQword" },
      {
        "field": "sequence_timer",
        "type": "UnsignedWord",
        "comment": "counts descent until door opens, closes, ..."
      },
      { "field": "frame_timer", "type": "UnsignedWord" },
      { "field": "animation_state", "type": "UnsignedDword" },
      { "field": "rescuing_ship_entity", "type": "EntityPointer" },
      { "field": "unknown8", "type": "UnsignedQword" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "UnsignedDword" }
    ],
    "ScreenCreditsPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenCreditsPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      {
        "field": "credits_progression",
        "type": "ScrollingCreditsProgressionPointer",
        "comment": "points to float timer that indicates how far in the scrolling credits we are"
      },
      {
        "field": "bg_music_info?",
        "type": "DataPointer",
        "comment": "points to object that has pointer related to BGM/BGM_credits"
      },
      { "field": "unknown4", "type": "UnsignedQword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" }
    ],
    "ScrollingCreditsProgressionPointer": [
      { "field": "timer", "type": "Float" }
    ],
    "ScreenScoresPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~ScreenScoresPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "render_timer", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedDword" },
      {
        "field": "animation_state",
        "type": "UnsignedDword",
        "comment": "states indicating whether money, time is shown, and to drop the treasure"
      },
      { "field": "woodpanel1", "type": "TextureRenderingInfo" },
      { "field": "woodpanel2", "type": "TextureRenderingInfo" },
      { "field": "woodpanel3", "type": "TextureRenderingInfo" },
      { "field": "woodpanel_cutout", "type": "TextureRenderingInfo" },
      { "field": "dollarsign", "type": "TextureRenderingInfo" },
      { "field": "hourglass", "type": "TextureRenderingInfo" },
      {
        "field": "animation_timer",
        "type": "UnsignedDword",
        "comment": "wait time to show the wood panel, score and timer text, ..."
      },
      { "field": "woodpanel_slidedown_timer", "type": "Float" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "unknown9", "type": "UnsignedDword" }
    ],
    "TextureRenderingInfo": [
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      { "field": "destination_bottom_left_x", "type": "Float" },
      { "field": "destination_bottom_left_y", "type": "Float" },
      { "field": "destination_bottom_right_x", "type": "Float" },
      { "field": "destination_bottom_right_y", "type": "Float" },
      { "field": "destination_top_left_x", "type": "Float" },
      { "field": "destination_top_left_y", "type": "Float" },
      { "field": "destination_top_right_x", "type": "Float" },
      { "field": "destination_top_right_y", "type": "Float" },
      { "field": "source_bottom_left_x", "type": "Float" },
      { "field": "source_bottom_left_y", "type": "Float" },
      { "field": "source_bottom_right_x", "type": "Float" },
      { "field": "source_bottom_right_y", "type": "Float" },
      { "field": "source_top_left_x", "type": "Float" },
      { "field": "source_top_left_y", "type": "Float" },
      { "field": "source_top_right_x", "type": "Float" },
      { "field": "source_top_right_y", "type": "Float" }
    ],
    "TextRenderingInfoPointer": [
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      { "field": "text_length", "type": "UnsignedDword" },
      { "field": "width", "type": "Float" },
      { "field": "height", "type": "Float" },
      { "field": "unknown3", "type": "UnsignedDword", "comment": "padding probably" },
      { "field": "dest", "type": "DataPointer", "comment": "12 * wcslen(input_text)" },
      { 
        "field": "source",
        "type": "DataPointer",
        "comment": "12 * wcslen(input_text), a bunch of float representing the matrix transformations (?) of the individual letters of the text"
      },
      { "field": "unknown5", "type": "DataPointer", "comment": "6 * wcslen(input_text)" },
      { "field": "unknown7", "type": "UnsignedWord" },
      { "field": "unknown8", "type": "UnsignedWord", "comment": "padding probably" },
      { "field": "unknown9", "type": "TextureDBID" },
      { "field": "shader", "type": "UnsignedByte" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      { "field": "padding4", "type": "Dword" },
      { "field": "font", "type": "TextureDBPointer" },
      { "field": "unknown13", "type": "Qword" }
    ],
    "SaveGame": [
      { "field": "places", "type": "SaveGamePlaces" },
      { "field": "bestiary", "type": "SaveGameBestiary" },
      { "field": "people", "type": "SaveGamePeople" },
      { "field": "items", "type": "SaveGameItems" },
      { "field": "traps", "type": "SaveGameTraps" },
      { "field": "bd2", "type": "Byte" },
      { "field": "bd3", "type": "Byte" },
      { "field": "time_tutorial", "type": "Dword" },
      {
        "field": "last_daily",
        "type": "Skip",
        "offset": 8,
        "comment": "last daily nothing to see here"
      },
      {
        "field": "show_longer_journal_popup_count",
        "type": "Byte",
        "comment": "the next n times the 'Journal entry added' popup is shown, it's shown for 300 frames instead of 180"
      },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Byte" },
      { "field": "padding3", "type": "Byte" },
      {
        "field": "characters",
        "type": "Flags32",
        "flags": {
          "1": "Ana Spelunky",
          "2": "Margaret Tunnel",
          "3": "Colin Northward",
          "4": "Roffy D. Sloth",
          "5": "Alto Singh",
          "6": "Liz Mutton",
          "7": "Nekka the Eagle ",
          "8": "LISE Project",
          "9": "Coco Von Diamonds",
          "10": "Manfred Tunnel",
          "11": "Little Jay",
          "12": "Tina Flan",
          "13": "Valerie Crump",
          "14": "Au",
          "15": "Demi Von Diamonds",
          "16": "Pilot",
          "17": "Princess Airyn",
          "18": "Dirk Yamaoka",
          "19": "Guy Spelunky",
          "20": "Classic Guy",
          "21": "-",
          "22": "-",
          "23": "-",
          "24": "-",
          "25": "-",
          "26": "-",
          "27": "-",
          "28": "-",
          "29": "-",
          "30": "-",
          "31": "-",
          "32": ""
        }
      },
      {
        "field": "tutorial_state",
        "type": "State8",
        "states": {
          "0": "Tutorial not started",
          "1": "You got the journal!",
          "2": "You opened the journal",
          "3": "Key used on big door",
          "4": "Finished - base camp shown"
        }
      },
      {
        "field": "shortcuts",
        "type": "State8",
        "states": {
          "0": "Nothing Unlocked / Never met Terra",
          "1": "Met Terra",
          "2": "1-4 Shortcut - Gave $2,000",
          "3": "1-4 Shortcut - Gave 1 bomb",
          "4": "1-4 Shortcut - Gave $10,000",
          "5": "3-1 Shortcut - Gave 1 Rope",
          "6": "3-1 Shortcut - Gave Weapon",
          "7": "3-1 Shortcut - Gave Mount",
          "8": "5-1 Shortcut - Gave $50,000",
          "9": "5-1 Shortcut - Gave Hired Hand",
          "10": "5-1 Shortcut - Gave Golden Key"
        }
      },
      { "field": "bea", "type": "Byte" },
      { "field": "beb", "type": "Byte" },
      { "field": "bestiary_killed", "type": "SaveGameBestiaryKilled" },
      { "field": "bestiary_killed_by", "type": "SaveGameBestiaryKilled" },
      { "field": "people_killed", "type": "SaveGamePeopleKilled" },
      { "field": "people_killed_by", "type": "SaveGamePeopleKilled" },
      { "field": "plays", "type": "Dword" },
      { "field": "deaths", "type": "Dword" },
      { "field": "wins_normal", "type": "Dword" },
      { "field": "wins_hard", "type": "Dword" },
      { "field": "wins_special", "type": "Dword" },
      { "field": "score_total", "type": "Qword" },
      { "field": "score_top", "type": "Dword" },
      { "field": "deepest_world", "type": "UnsignedByte" },
      { "field": "deepest_level", "type": "UnsignedByte" },
      { "field": "padding4", "type": "UnsignedByte" },
      { "field": "padding5", "type": "UnsignedByte" },
      { "field": "skip4", "type": "Skip", "offset": 1020 },
      { "field": "deathcount_dwelling", "type": "SaveGameDeathCountLevels" },
      {
        "field": "deathcount_jungle_volcana",
        "type": "SaveGameDeathCountLevels"
      },
      { "field": "deathcount_olmec", "type": "SaveGameDeathCountLevels" },
      {
        "field": "deathcount_tidepool_temple",
        "type": "SaveGameDeathCountLevels"
      },
      { "field": "deathcount_icecaves", "type": "SaveGameDeathCountLevels" },
      { "field": "deathcount_neobabylon", "type": "SaveGameDeathCountLevels" },
      { "field": "deathcount_sunkencity", "type": "SaveGameDeathCountLevels" },
      { "field": "deathcount_cosmicocean", "type": "SaveGameDeathCountLevels" },
      { "field": "time_total", "type": "Qword" },
      { "field": "time_best", "type": "Dword" },
      { "field": "character_deaths", "type": "SaveGameCharacterDeaths" },
      { "field": "pets_rescued", "type": "SaveGamePetsRescued" },
      { "field": "completed_themes", "type": "SaveGameThemesCompleted" },
      { "field": "completed_normal", "type": "Bool" },
      { "field": "completed_ironman", "type": "Bool" },
      { "field": "completed_hard", "type": "Bool" },
      { "field": "profile_seen", "type": "Bool" },
      { "field": "seeded_unlocked", "type": "Bool" },
      { "field": "world_last", "type": "UnsignedByte" },
      { "field": "level_last", "type": "UnsignedByte" },
      { "field": "theme_last", "type": "UnsignedByte" },
      { "field": "padding6", "type": "UnsignedByte" },
      { "field": "score_last", "type": "UnsignedDword" },
      { "field": "time_last", "type": "UnsignedDword" },
      { "field": "stickers", "type": "SaveGameStickers" },
      {
        "field": "skip8",
        "type": "Skip",
        "offset": 40,
        "comment": "first dword is a mask(?) that determines horizontal spacing between stickers"
      },
      { "field": "sticker_angles", "type": "SaveGameStickerAngles" },
      { "field": "skip8", "type": "Skip", "offset": 40 },
      {
        "field": "sticker_vert_offsets",
        "type": "SaveGameStickerVerticalOffsets"
      },
      { "field": "skip8", "type": "Skip", "offset": 40 },
      { "field": "players", "type": "SaveGamePlayers" },
      { "field": "arena_favorite_ruleset", "type": "SaveGameArenaRuleset" },
      { "field": "constellation", "type": "Constellation" }
    ],
    "Constellation": [
      { "field": "star_count", "type": "UnsignedDword" },
      { "field": "stars", "type": "ConstellationStars" },
      { "field": "scale", "type": "Float" },
      { "field": "line_count", "type": "UnsignedByte" },
      {
        "field": "lines",
        "type": "ConstellationLines",
        "comment": "You'd only need 44 lines if you have 45 stars, but there is room for 91. Could be to draw two lines on top of each other to make it brighter."
      },
      {
        "field": "line_red_intensity",
        "type": "Float",
        "comment": "0 = normal white, npc_kills 8 - 16 = 0.5 - 1.0 (pink to deep red for criminalis)"
      }
    ],
    "ConstellationStars": [
      { "field": "star_1", "type": "ConstellationStar" },
      { "field": "star_2", "type": "ConstellationStar" },
      { "field": "star_3", "type": "ConstellationStar" },
      { "field": "star_4", "type": "ConstellationStar" },
      { "field": "star_5", "type": "ConstellationStar" },
      { "field": "star_6", "type": "ConstellationStar" },
      { "field": "star_7", "type": "ConstellationStar" },
      { "field": "star_8", "type": "ConstellationStar" },
      { "field": "star_9", "type": "ConstellationStar" },
      { "field": "star_10", "type": "ConstellationStar" },
      { "field": "star_11", "type": "ConstellationStar" },
      { "field": "star_12", "type": "ConstellationStar" },
      { "field": "star_13", "type": "ConstellationStar" },
      { "field": "star_14", "type": "ConstellationStar" },
      { "field": "star_15", "type": "ConstellationStar" },
      { "field": "star_16", "type": "ConstellationStar" },
      { "field": "star_17", "type": "ConstellationStar" },
      { "field": "star_18", "type": "ConstellationStar" },
      { "field": "star_19", "type": "ConstellationStar" },
      { "field": "star_20", "type": "ConstellationStar" },
      { "field": "star_21", "type": "ConstellationStar" },
      { "field": "star_22", "type": "ConstellationStar" },
      { "field": "star_23", "type": "ConstellationStar" },
      { "field": "star_24", "type": "ConstellationStar" },
      { "field": "star_25", "type": "ConstellationStar" },
      { "field": "star_26", "type": "ConstellationStar" },
      { "field": "star_27", "type": "ConstellationStar" },
      { "field": "star_28", "type": "ConstellationStar" },
      { "field": "star_29", "type": "ConstellationStar" },
      { "field": "star_30", "type": "ConstellationStar" },
      { "field": "star_31", "type": "ConstellationStar" },
      { "field": "star_32", "type": "ConstellationStar" },
      { "field": "star_33", "type": "ConstellationStar" },
      { "field": "star_34", "type": "ConstellationStar" },
      { "field": "star_35", "type": "ConstellationStar" },
      { "field": "star_36", "type": "ConstellationStar" },
      { "field": "star_37", "type": "ConstellationStar" },
      { "field": "star_38", "type": "ConstellationStar" },
      { "field": "star_39", "type": "ConstellationStar" },
      { "field": "star_40", "type": "ConstellationStar" },
      { "field": "star_41", "type": "ConstellationStar" },
      { "field": "star_42", "type": "ConstellationStar" },
      { "field": "star_43", "type": "ConstellationStar" },
      { "field": "star_44", "type": "ConstellationStar" },
      { "field": "star_45", "type": "ConstellationStar" }
    ],
    "ConstellationStar": [
      {
        "field": "type",
        "type": "State32",
        "states": {
          "0": "Default plain star",
          "1": "Starburst effect",
          "2": "Eggplant bright purple"
        }
      },
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      { "field": "size", "type": "Float" },
      { "field": "red", "type": "Float" },
      { "field": "green", "type": "Float" },
      { "field": "blue", "type": "Float" },
      { "field": "alpha", "type": "Float" },
      { "field": "halo_red", "type": "Float" },
      { "field": "halo_green", "type": "Float" },
      { "field": "halo_blue", "type": "Float" },
      { "field": "halo_alpha", "type": "Float" },
      { "field": "canis_ring", "type": "Bool" },
      { "field": "fidelis_ring", "type": "Bool" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      {
        "field": "unknown14",
        "type": "UnsignedDword",
        "comment": "might have something to do with how they are laid out on the path, having/being offshoots etc"
      }
    ],
    "ConstellationLines": [
      { "field": "line_1", "type": "ConstellationLine" },
      { "field": "line_2", "type": "ConstellationLine" },
      { "field": "line_3", "type": "ConstellationLine" },
      { "field": "line_4", "type": "ConstellationLine" },
      { "field": "line_5", "type": "ConstellationLine" },
      { "field": "line_6", "type": "ConstellationLine" },
      { "field": "line_7", "type": "ConstellationLine" },
      { "field": "line_8", "type": "ConstellationLine" },
      { "field": "line_9", "type": "ConstellationLine" },
      { "field": "line_10", "type": "ConstellationLine" },
      { "field": "line_11", "type": "ConstellationLine" },
      { "field": "line_12", "type": "ConstellationLine" },
      { "field": "line_13", "type": "ConstellationLine" },
      { "field": "line_14", "type": "ConstellationLine" },
      { "field": "line_15", "type": "ConstellationLine" },
      { "field": "line_16", "type": "ConstellationLine" },
      { "field": "line_17", "type": "ConstellationLine" },
      { "field": "line_18", "type": "ConstellationLine" },
      { "field": "line_19", "type": "ConstellationLine" },
      { "field": "line_20", "type": "ConstellationLine" },
      { "field": "line_21", "type": "ConstellationLine" },
      { "field": "line_22", "type": "ConstellationLine" },
      { "field": "line_23", "type": "ConstellationLine" },
      { "field": "line_24", "type": "ConstellationLine" },
      { "field": "line_25", "type": "ConstellationLine" },
      { "field": "line_26", "type": "ConstellationLine" },
      { "field": "line_27", "type": "ConstellationLine" },
      { "field": "line_28", "type": "ConstellationLine" },
      { "field": "line_29", "type": "ConstellationLine" },
      { "field": "line_30", "type": "ConstellationLine" },
      { "field": "line_31", "type": "ConstellationLine" },
      { "field": "line_32", "type": "ConstellationLine" },
      { "field": "line_33", "type": "ConstellationLine" },
      { "field": "line_34", "type": "ConstellationLine" },
      { "field": "line_35", "type": "ConstellationLine" },
      { "field": "line_36", "type": "ConstellationLine" },
      { "field": "line_37", "type": "ConstellationLine" },
      { "field": "line_38", "type": "ConstellationLine" },
      { "field": "line_39", "type": "ConstellationLine" },
      { "field": "line_40", "type": "ConstellationLine" },
      { "field": "line_41", "type": "ConstellationLine" },
      { "field": "line_42", "type": "ConstellationLine" },
      { "field": "line_43", "type": "ConstellationLine" },
      { "field": "line_44", "type": "ConstellationLine" },
      { "field": "line_45", "type": "ConstellationLine" },
      { "field": "line_46", "type": "ConstellationLine" },
      { "field": "line_47", "type": "ConstellationLine" },
      { "field": "line_48", "type": "ConstellationLine" },
      { "field": "line_49", "type": "ConstellationLine" },
      { "field": "line_50", "type": "ConstellationLine" },
      { "field": "line_51", "type": "ConstellationLine" },
      { "field": "line_52", "type": "ConstellationLine" },
      { "field": "line_53", "type": "ConstellationLine" },
      { "field": "line_54", "type": "ConstellationLine" },
      { "field": "line_55", "type": "ConstellationLine" },
      { "field": "line_56", "type": "ConstellationLine" },
      { "field": "line_57", "type": "ConstellationLine" },
      { "field": "line_58", "type": "ConstellationLine" },
      { "field": "line_59", "type": "ConstellationLine" },
      { "field": "line_60", "type": "ConstellationLine" },
      { "field": "line_61", "type": "ConstellationLine" },
      { "field": "line_62", "type": "ConstellationLine" },
      { "field": "line_63", "type": "ConstellationLine" },
      { "field": "line_64", "type": "ConstellationLine" },
      { "field": "line_65", "type": "ConstellationLine" },
      { "field": "line_66", "type": "ConstellationLine" },
      { "field": "line_67", "type": "ConstellationLine" },
      { "field": "line_68", "type": "ConstellationLine" },
      { "field": "line_69", "type": "ConstellationLine" },
      { "field": "line_70", "type": "ConstellationLine" },
      { "field": "line_71", "type": "ConstellationLine" },
      { "field": "line_72", "type": "ConstellationLine" },
      { "field": "line_73", "type": "ConstellationLine" },
      { "field": "line_74", "type": "ConstellationLine" },
      { "field": "line_75", "type": "ConstellationLine" },
      { "field": "line_76", "type": "ConstellationLine" },
      { "field": "line_77", "type": "ConstellationLine" },
      { "field": "line_78", "type": "ConstellationLine" },
      { "field": "line_79", "type": "ConstellationLine" },
      { "field": "line_80", "type": "ConstellationLine" },
      { "field": "line_81", "type": "ConstellationLine" },
      { "field": "line_82", "type": "ConstellationLine" },
      { "field": "line_83", "type": "ConstellationLine" },
      { "field": "line_84", "type": "ConstellationLine" },
      { "field": "line_85", "type": "ConstellationLine" },
      { "field": "line_86", "type": "ConstellationLine" },
      { "field": "line_87", "type": "ConstellationLine" },
      { "field": "line_88", "type": "ConstellationLine" },
      { "field": "line_89", "type": "ConstellationLine" },
      { "field": "line_90", "type": "ConstellationLine" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" }
    ],
    "ConstellationLine": [
      { "field": "from", "type": "UnsignedByte", "comment": "star index" },
      { "field": "to", "type": "UnsignedByte" }
    ],
    "SaveGamePlaces": [
      { "field": "Dwelling", "type": "Bool" },
      { "field": "Jungle", "type": "Bool" },
      { "field": "Volcana", "type": "Bool" },
      { "field": "Olmec", "type": "Bool" },
      { "field": "Tide Pool", "type": "Bool" },
      { "field": "Abzu", "type": "Bool" },
      { "field": "Temple", "type": "Bool" },
      { "field": "City of Gold", "type": "Bool" },
      { "field": "Duat", "type": "Bool" },
      { "field": "Ice Caves", "type": "Bool" },
      { "field": "Neo Babylon", "type": "Bool" },
      { "field": "Tiamat", "type": "Bool" },
      { "field": "Sunken City", "type": "Bool" },
      { "field": "Eggplant World", "type": "Bool" },
      { "field": "Hundun", "type": "Bool" },
      { "field": "Cosmic Ocean", "type": "Bool" }
    ],
    "SaveGameBestiary": [
      { "field": "Snake", "type": "Bool" },
      { "field": "Spider", "type": "Bool" },
      { "field": "Bat", "type": "Bool" },
      { "field": "Caveman", "type": "Bool" },
      { "field": "Skeleton", "type": "Bool" },
      { "field": "Horned Lizard", "type": "Bool" },
      { "field": "Cave Mole", "type": "Bool" },
      { "field": "Quillback", "type": "Bool" },
      { "field": "Mantrap", "type": "Bool" },
      { "field": "Tiki Man", "type": "Bool" },
      { "field": "Witch Doctor", "type": "Bool" },
      { "field": "Mosquito", "type": "Bool" },
      { "field": "Monkey", "type": "Bool" },
      { "field": "Hang Spider", "type": "Bool" },
      { "field": "Giant Spider", "type": "Bool" },
      { "field": "Magmar", "type": "Bool" },
      { "field": "Robot", "type": "Bool" },
      { "field": "Fire Bug", "type": "Bool" },
      { "field": "Imp", "type": "Bool" },
      { "field": "Lavamander", "type": "Bool" },
      { "field": "Vampire", "type": "Bool" },
      { "field": "Vlad", "type": "Bool" },
      { "field": "Olmec", "type": "Bool" },
      { "field": "Jiangshi", "type": "Bool" },
      { "field": "Jiangshi Assassin", "type": "Bool" },
      { "field": "Flying Fish", "type": "Bool" },
      { "field": "Octopy", "type": "Bool" },
      { "field": "Hermit Crab", "type": "Bool" },
      { "field": "Pangxie", "type": "Bool" },
      { "field": "Great Humphead", "type": "Bool" },
      { "field": "Kingu", "type": "Bool" },
      { "field": "Crocman", "type": "Bool" },
      { "field": "Cobra", "type": "Bool" },
      { "field": "Mummy", "type": "Bool" },
      { "field": "Sorceress", "type": "Bool" },
      { "field": "Cat Mummy", "type": "Bool" },
      { "field": "Necromancer", "type": "Bool" },
      { "field": "Anubis", "type": "Bool" },
      { "field": "Ammit", "type": "Bool" },
      { "field": "Apep", "type": "Bool" },
      { "field": "Anubis2", "type": "Bool" },
      { "field": "Osiris", "type": "Bool" },
      { "field": "UFO", "type": "Bool" },
      { "field": "Alien", "type": "Bool" },
      { "field": "Yeti", "type": "Bool" },
      { "field": "Yeti King", "type": "Bool" },
      { "field": "Yeti Queen", "type": "Bool" },
      { "field": "Lahamu", "type": "Bool" },
      { "field": "Proto Shopkeeper", "type": "Bool" },
      { "field": "Olmite", "type": "Bool" },
      { "field": "Lamassu", "type": "Bool" },
      { "field": "Tiamat", "type": "Bool" },
      { "field": "Tadpole", "type": "Bool" },
      { "field": "Frog", "type": "Bool" },
      { "field": "Fire Frog", "type": "Bool" },
      { "field": "Goliath Frog", "type": "Bool" },
      { "field": "Grub", "type": "Bool" },
      { "field": "Giant Fly", "type": "Bool" },
      { "field": "Hundun", "type": "Bool" },
      { "field": "Eggplant Minister", "type": "Bool" },
      { "field": "Eggplup", "type": "Bool" },
      { "field": "Celestial Jelly", "type": "Bool" },
      { "field": "Scorpion", "type": "Bool" },
      { "field": "Bee", "type": "Bool" },
      { "field": "Queen Bee", "type": "Bool" },
      { "field": "Scarab", "type": "Bool" },
      { "field": "Golden Monkey", "type": "Bool" },
      { "field": "Leprechaun", "type": "Bool" },
      { "field": "Monty", "type": "Bool" },
      { "field": "Percy", "type": "Bool" },
      { "field": "Poochi", "type": "Bool" },
      { "field": "Ghist", "type": "Bool" },
      { "field": "Ghost", "type": "Bool" },
      { "field": "Cave Turkey", "type": "Bool" },
      { "field": "Rock Dog", "type": "Bool" },
      { "field": "Axolotl", "type": "Bool" },
      { "field": "Qilin", "type": "Bool" },
      { "field": "Mech Rider", "type": "Bool" }
    ],
    "SaveGamePeople": [
      { "field": "Ana Spelunky", "type": "Bool" },
      { "field": "Margaret Tunnel", "type": "Bool" },
      { "field": "Colin Northward", "type": "Bool" },
      { "field": "Roffy D. Sloth", "type": "Bool" },
      { "field": "Alto Singh", "type": "Bool" },
      { "field": "Liz Mutton", "type": "Bool" },
      { "field": "Nekka the Eagle ", "type": "Bool" },
      { "field": "LISE Project", "type": "Bool" },
      { "field": "Coco Von Diamonds", "type": "Bool" },
      { "field": "Manfred Tunnel", "type": "Bool" },
      { "field": "Little Jay", "type": "Bool" },
      { "field": "Tina Flan", "type": "Bool" },
      { "field": "Valerie Crump", "type": "Bool" },
      { "field": "Au", "type": "Bool" },
      { "field": "Demi Von Diamonds", "type": "Bool" },
      { "field": "Pilot", "type": "Bool" },
      { "field": "Princess Airyn", "type": "Bool" },
      { "field": "Dirk Yamaoka", "type": "Bool" },
      { "field": "Guy Spelunky", "type": "Bool" },
      { "field": "Classic Guy", "type": "Bool" },
      { "field": "Terra Tunnel", "type": "Bool" },
      { "field": "Hired Hand", "type": "Bool" },
      { "field": "Eggplant Child", "type": "Bool" },
      { "field": "Shopkeeper", "type": "Bool" },
      { "field": "Tun", "type": "Bool" },
      { "field": "Yang", "type": "Bool" },
      { "field": "Madame Tusk", "type": "Bool" },
      { "field": "Tusk's Bodyguard", "type": "Bool" },
      { "field": "Waddler", "type": "Bool" },
      { "field": "Caveman Shopkeeper", "type": "Bool" },
      { "field": "Ghist Shopkeeper", "type": "Bool" },
      { "field": "Van Horsing", "type": "Bool" },
      { "field": "Parsley", "type": "Bool" },
      { "field": "Parsnip", "type": "Bool" },
      { "field": "Parmesan", "type": "Bool" },
      { "field": "Sparrow", "type": "Bool" },
      { "field": "Beg", "type": "Bool" },
      { "field": "Eggplant King", "type": "Bool" }
    ],
    "SaveGameItems": [
      { "field": "Rope Pile", "type": "Bool" },
      { "field": "Bomb Bag", "type": "Bool" },
      { "field": "Bomb Box", "type": "Bool" },
      { "field": "Paste", "type": "Bool" },
      { "field": "Spectacles", "type": "Bool" },
      { "field": "Climbing Gloves", "type": "Bool" },
      { "field": "Pitcher's Mitt", "type": "Bool" },
      { "field": "Spring Shoes", "type": "Bool" },
      { "field": "Spike Shoes", "type": "Bool" },
      { "field": "Compass", "type": "Bool" },
      { "field": "Alien Compass", "type": "Bool" },
      { "field": "Parachute", "type": "Bool" },
      { "field": "Udjat Eye", "type": "Bool" },
      { "field": "Kapala", "type": "Bool" },
      { "field": "Hedjet", "type": "Bool" },
      { "field": "Crown", "type": "Bool" },
      { "field": "Eggplant Crown", "type": "Bool" },
      { "field": "The True Crown", "type": "Bool" },
      { "field": "Ankh", "type": "Bool" },
      { "field": "Tablet of Destiny", "type": "Bool" },
      { "field": "Skeleton Key", "type": "Bool" },
      { "field": "Royal Jelly", "type": "Bool" },
      { "field": "Cape", "type": "Bool" },
      { "field": "Vlad's Cape", "type": "Bool" },
      { "field": "Jetpack", "type": "Bool" },
      { "field": "Telepack", "type": "Bool" },
      { "field": "Hoverpack", "type": "Bool" },
      { "field": "Powerpack", "type": "Bool" },
      { "field": "Webgun", "type": "Bool" },
      { "field": "Shotgun", "type": "Bool" },
      { "field": "Freeze Ray", "type": "Bool" },
      { "field": "Clone Gun", "type": "Bool" },
      { "field": "Crossbow", "type": "Bool" },
      { "field": "Camera", "type": "Bool" },
      { "field": "Teleporter", "type": "Bool" },
      { "field": "Mattock", "type": "Bool" },
      { "field": "Boomerang", "type": "Bool" },
      { "field": "Machete", "type": "Bool" },
      { "field": "Excalibur", "type": "Bool" },
      { "field": "Broken Sword", "type": "Bool" },
      { "field": "Plasma Cannon", "type": "Bool" },
      { "field": "Scepter", "type": "Bool" },
      { "field": "Hou Yi's Bow", "type": "Bool" },
      { "field": "Arrow of Light", "type": "Bool" },
      { "field": "Wooden Shield", "type": "Bool" },
      { "field": "Metal Shield", "type": "Bool" },
      { "field": "Idol", "type": "Bool" },
      { "field": "The Tusk Idol", "type": "Bool" },
      { "field": "Curse Pot", "type": "Bool" },
      { "field": "Ushabti", "type": "Bool" },
      { "field": "Eggplant", "type": "Bool" },
      { "field": "Cooked Turkey", "type": "Bool" },
      { "field": "Elixir", "type": "Bool" },
      { "field": "Four-Leaf Clover", "type": "Bool" }
    ],
    "SaveGameTraps": [
      { "field": "Spikes", "type": "Bool" },
      { "field": "Arrow Trap", "type": "Bool" },
      { "field": "Totem Trap", "type": "Bool" },
      { "field": "Log Trap", "type": "Bool" },
      { "field": "Spear Trap", "type": "Bool" },
      { "field": "Thorny Vine", "type": "Bool" },
      { "field": "Bear Trap", "type": "Bool" },
      { "field": "Powder Box", "type": "Bool" },
      { "field": "Falling Platform", "type": "Bool" },
      { "field": "Spikeball", "type": "Bool" },
      { "field": "Lion Trap", "type": "Bool" },
      { "field": "Giant Clam", "type": "Bool" },
      { "field": "Sliding Wall", "type": "Bool" },
      { "field": "Crush Trap", "type": "Bool" },
      { "field": "Giant Crush Trap", "type": "Bool" },
      { "field": "Boulder", "type": "Bool" },
      { "field": "Spring Trap", "type": "Bool" },
      { "field": "Landmine", "type": "Bool" },
      { "field": "Laser Trap", "type": "Bool" },
      { "field": "Spark Trap", "type": "Bool" },
      { "field": "Frog Trap", "type": "Bool" },
      { "field": "Sticky Trap", "type": "Bool" },
      { "field": "Bone Drop", "type": "Bool" },
      { "field": "Egg Sac", "type": "Bool" }
    ],
    "SaveGameBestiaryKilled": [
      { "field": "Snake", "type": "Dword" },
      { "field": "Spider", "type": "Dword" },
      { "field": "Bat", "type": "Dword" },
      { "field": "Caveman", "type": "Dword" },
      { "field": "Skeleton", "type": "Dword" },
      { "field": "Horned Lizard", "type": "Dword" },
      { "field": "Cave Mole", "type": "Dword" },
      { "field": "Quillback", "type": "Dword" },
      { "field": "Mantrap", "type": "Dword" },
      { "field": "Tiki Man", "type": "Dword" },
      { "field": "Witch Doctor", "type": "Dword" },
      { "field": "Mosquito", "type": "Dword" },
      { "field": "Monkey", "type": "Dword" },
      { "field": "Hang Spider", "type": "Dword" },
      { "field": "Giant Spider", "type": "Dword" },
      { "field": "Magmar", "type": "Dword" },
      { "field": "Robot", "type": "Dword" },
      { "field": "Fire Bug", "type": "Dword" },
      { "field": "Imp", "type": "Dword" },
      { "field": "Lavamander", "type": "Dword" },
      { "field": "Vampire", "type": "Dword" },
      { "field": "Vlad", "type": "Dword" },
      { "field": "Olmec", "type": "Dword" },
      { "field": "Jiangshi", "type": "Dword" },
      { "field": "Jiangshi Assassin", "type": "Dword" },
      { "field": "Flying Fish", "type": "Dword" },
      { "field": "Octopy", "type": "Dword" },
      { "field": "Hermit Crab", "type": "Dword" },
      { "field": "Pangxie", "type": "Dword" },
      { "field": "Great Humphead", "type": "Dword" },
      { "field": "Kingu", "type": "Dword" },
      { "field": "Crocman", "type": "Dword" },
      { "field": "Cobra", "type": "Dword" },
      { "field": "Mummy", "type": "Dword" },
      { "field": "Sorceress", "type": "Dword" },
      { "field": "Cat Mummy", "type": "Dword" },
      { "field": "Necromancer", "type": "Dword" },
      { "field": "Anubis", "type": "Dword" },
      { "field": "Ammit", "type": "Dword" },
      { "field": "Apep", "type": "Dword" },
      { "field": "Anubis2", "type": "Dword" },
      { "field": "Osiris", "type": "Dword" },
      { "field": "UFO", "type": "Dword" },
      { "field": "Alien", "type": "Dword" },
      { "field": "Yeti", "type": "Dword" },
      { "field": "Yeti King", "type": "Dword" },
      { "field": "Yeti Queen", "type": "Dword" },
      { "field": "Lahamu", "type": "Dword" },
      { "field": "Proto Shopkeeper", "type": "Dword" },
      { "field": "Olmite", "type": "Dword" },
      { "field": "Lamassu", "type": "Dword" },
      { "field": "Tiamat", "type": "Dword" },
      { "field": "Tadpole", "type": "Dword" },
      { "field": "Frog", "type": "Dword" },
      { "field": "Fire Frog", "type": "Dword" },
      { "field": "Goliath Frog", "type": "Dword" },
      { "field": "Grub", "type": "Dword" },
      { "field": "Giant Fly", "type": "Dword" },
      { "field": "Hundun", "type": "Dword" },
      { "field": "Eggplant Minister", "type": "Dword" },
      { "field": "Eggplup", "type": "Dword" },
      { "field": "Celestial Jelly", "type": "Dword" },
      { "field": "Scorpion", "type": "Dword" },
      { "field": "Bee", "type": "Dword" },
      { "field": "Queen Bee", "type": "Dword" },
      { "field": "Scarab", "type": "Dword" },
      { "field": "Golden Monkey", "type": "Dword" },
      { "field": "Leprechaun", "type": "Dword" },
      { "field": "Monty", "type": "Dword" },
      { "field": "Percy", "type": "Dword" },
      { "field": "Poochi", "type": "Dword" },
      { "field": "Ghist", "type": "Dword" },
      { "field": "Ghost", "type": "Dword" },
      { "field": "Cave Turkey", "type": "Dword" },
      { "field": "Rock Dog", "type": "Dword" },
      { "field": "Axolotl", "type": "Dword" },
      { "field": "Qilin", "type": "Dword" },
      { "field": "Mech Rider", "type": "Dword" }
    ],
    "SaveGamePeopleKilled": [
      { "field": "Ana Spelunky", "type": "Dword" },
      { "field": "Margaret Tunnel", "type": "Dword" },
      { "field": "Colin Northward", "type": "Dword" },
      { "field": "Roffy D. Sloth", "type": "Dword" },
      { "field": "Alto Singh", "type": "Dword" },
      { "field": "Liz Mutton", "type": "Dword" },
      { "field": "Nekka the Eagle ", "type": "Dword" },
      { "field": "LISE Project", "type": "Dword" },
      { "field": "Coco Von Diamonds", "type": "Dword" },
      { "field": "Manfred Tunnel", "type": "Dword" },
      { "field": "Little Jay", "type": "Dword" },
      { "field": "Tina Flan", "type": "Dword" },
      { "field": "Valerie Crump", "type": "Dword" },
      { "field": "Au", "type": "Dword" },
      { "field": "Demi Von Diamonds", "type": "Dword" },
      { "field": "Pilot", "type": "Dword" },
      { "field": "Princess Airyn", "type": "Dword" },
      { "field": "Dirk Yamaoka", "type": "Dword" },
      { "field": "Guy Spelunky", "type": "Dword" },
      { "field": "Classic Guy", "type": "Dword" },
      { "field": "Terra Tunnel", "type": "Dword" },
      { "field": "Hired Hand", "type": "Dword" },
      { "field": "Eggplant Child", "type": "Dword" },
      { "field": "Shopkeeper", "type": "Dword" },
      { "field": "Tun", "type": "Dword" },
      { "field": "Yang", "type": "Dword" },
      { "field": "Madame Tusk", "type": "Dword" },
      { "field": "Tusk's Bodyguard", "type": "Dword" },
      { "field": "Waddler", "type": "Dword" },
      { "field": "Caveman Shopkeeper", "type": "Dword" },
      { "field": "Ghist Shopkeeper", "type": "Dword" },
      { "field": "Van Horsing", "type": "Dword" },
      { "field": "Parsley", "type": "Dword" },
      { "field": "Parsnip", "type": "Dword" },
      { "field": "Parmesan", "type": "Dword" },
      { "field": "Sparrow", "type": "Dword" },
      { "field": "Beg", "type": "Dword" },
      { "field": "Eggplant King", "type": "Dword" }
    ],
    "SaveGameCharacterDeaths": [
      { "field": "Ana Spelunky", "type": "Dword" },
      { "field": "Margaret Tunnel", "type": "Dword" },
      { "field": "Colin Northward", "type": "Dword" },
      { "field": "Roffy D. Sloth", "type": "Dword" },
      { "field": "Alto Singh", "type": "Dword" },
      { "field": "Liz Mutton", "type": "Dword" },
      { "field": "Nekka the Eagle ", "type": "Dword" },
      { "field": "LISE Project", "type": "Dword" },
      { "field": "Coco Von Diamonds", "type": "Dword" },
      { "field": "Manfred Tunnel", "type": "Dword" },
      { "field": "Little Jay", "type": "Dword" },
      { "field": "Tina Flan", "type": "Dword" },
      { "field": "Valerie Crump", "type": "Dword" },
      { "field": "Au", "type": "Dword" },
      { "field": "Demi Von Diamonds", "type": "Dword" },
      { "field": "Pilot", "type": "Dword" },
      { "field": "Princess Airyn", "type": "Dword" },
      { "field": "Dirk Yamaoka", "type": "Dword" },
      { "field": "Guy Spelunky", "type": "Dword" },
      { "field": "Classic Guy", "type": "Dword" }
    ],
    "SaveGamePetsRescued": [
      { "field": "Dog", "type": "UnsignedByte" },
      { "field": "Cat", "type": "UnsignedByte" },
      { "field": "Hamster", "type": "UnsignedByte" }
    ],
    "SaveGameStickers": [
      { "field": "sticker1", "type": "EntityDBID" },
      { "field": "sticker2", "type": "EntityDBID" },
      { "field": "sticker3", "type": "EntityDBID" },
      { "field": "sticker4", "type": "EntityDBID" },
      { "field": "sticker5", "type": "EntityDBID" },
      { "field": "sticker6", "type": "EntityDBID" },
      { "field": "sticker7", "type": "EntityDBID" },
      { "field": "sticker8", "type": "EntityDBID" },
      { "field": "sticker9", "type": "EntityDBID" },
      { "field": "sticker10", "type": "EntityDBID" },
      { "field": "sticker11", "type": "EntityDBID" },
      { "field": "sticker12", "type": "EntityDBID" },
      { "field": "sticker13", "type": "EntityDBID" },
      { "field": "sticker14", "type": "EntityDBID" },
      { "field": "sticker15", "type": "EntityDBID" },
      { "field": "sticker16", "type": "EntityDBID" },
      { "field": "sticker17", "type": "EntityDBID" },
      { "field": "sticker18", "type": "EntityDBID" },
      { "field": "sticker19", "type": "EntityDBID" },
      { "field": "sticker20", "type": "EntityDBID" }
    ],
    "SaveGameStickerAngles": [
      { "field": "sticker1", "type": "Float" },
      { "field": "sticker2", "type": "Float" },
      { "field": "sticker3", "type": "Float" },
      { "field": "sticker4", "type": "Float" },
      { "field": "sticker5", "type": "Float" },
      { "field": "sticker6", "type": "Float" },
      { "field": "sticker7", "type": "Float" },
      { "field": "sticker8", "type": "Float" },
      { "field": "sticker9", "type": "Float" },
      { "field": "sticker10", "type": "Float" },
      { "field": "sticker11", "type": "Float" },
      { "field": "sticker12", "type": "Float" },
      { "field": "sticker13", "type": "Float" },
      { "field": "sticker14", "type": "Float" },
      { "field": "sticker15", "type": "Float" },
      { "field": "sticker16", "type": "Float" },
      { "field": "sticker17", "type": "Float" },
      { "field": "sticker18", "type": "Float" },
      { "field": "sticker19", "type": "Float" },
      { "field": "sticker20", "type": "Float" }
    ],
    "SaveGameStickerVerticalOffsets": [
      { "field": "sticker1", "type": "Float" },
      { "field": "sticker2", "type": "Float" },
      { "field": "sticker3", "type": "Float" },
      { "field": "sticker4", "type": "Float" },
      { "field": "sticker5", "type": "Float" },
      { "field": "sticker6", "type": "Float" },
      { "field": "sticker7", "type": "Float" },
      { "field": "sticker8", "type": "Float" },
      { "field": "sticker9", "type": "Float" },
      { "field": "sticker10", "type": "Float" },
      { "field": "sticker11", "type": "Float" },
      { "field": "sticker12", "type": "Float" },
      { "field": "sticker13", "type": "Float" },
      { "field": "sticker14", "type": "Float" },
      { "field": "sticker15", "type": "Float" },
      { "field": "sticker16", "type": "Float" },
      { "field": "sticker17", "type": "Float" },
      { "field": "sticker18", "type": "Float" },
      { "field": "sticker19", "type": "Float" },
      { "field": "sticker20", "type": "Float" }
    ],
    "SaveGamePlayers": [
      { "field": "player1", "type": "State8", "ref": "character_states" },
      { "field": "player2", "type": "State8", "ref": "character_states" },
      { "field": "player3", "type": "State8", "ref": "character_states" },
      { "field": "player4", "type": "State8", "ref": "character_states" }
    ],
    "SaveGameDeathCountLevels": [
      { "field": "level0", "type": "UnsignedDword" },
      { "field": "level1", "type": "UnsignedDword" },
      { "field": "level2", "type": "UnsignedDword" },
      { "field": "level3", "type": "UnsignedDword" },
      { "field": "level4", "type": "UnsignedDword" },
      { "field": "level5", "type": "UnsignedDword" },
      { "field": "level6", "type": "UnsignedDword" },
      { "field": "level7", "type": "UnsignedDword" },
      { "field": "level8", "type": "UnsignedDword" },
      { "field": "level9", "type": "UnsignedDword" },
      { "field": "level10", "type": "UnsignedDword" },
      { "field": "level11", "type": "UnsignedDword" },
      { "field": "level12", "type": "UnsignedDword" },
      { "field": "level13", "type": "UnsignedDword" },
      { "field": "level14", "type": "UnsignedDword" },
      { "field": "level15", "type": "UnsignedDword" },
      { "field": "level16", "type": "UnsignedDword" },
      { "field": "level17", "type": "UnsignedDword" },
      { "field": "level18", "type": "UnsignedDword" },
      { "field": "level19", "type": "UnsignedDword" },
      { "field": "level20", "type": "UnsignedDword" },
      { "field": "level21", "type": "UnsignedDword" },
      { "field": "level22", "type": "UnsignedDword" },
      { "field": "level23", "type": "UnsignedDword" },
      { "field": "level24", "type": "UnsignedDword" },
      { "field": "level25", "type": "UnsignedDword" },
      { "field": "level26", "type": "UnsignedDword" },
      { "field": "level27", "type": "UnsignedDword" },
      { "field": "level28", "type": "UnsignedDword" },
      { "field": "level29", "type": "UnsignedDword" },
      { "field": "level30", "type": "UnsignedDword" },
      { "field": "level31", "type": "UnsignedDword" },
      { "field": "level32", "type": "UnsignedDword" },
      { "field": "level33", "type": "UnsignedDword" },
      { "field": "level34", "type": "UnsignedDword" },
      { "field": "level35", "type": "UnsignedDword" },
      { "field": "level36", "type": "UnsignedDword" },
      { "field": "level37", "type": "UnsignedDword" },
      { "field": "level38", "type": "UnsignedDword" },
      { "field": "level39", "type": "UnsignedDword" },
      { "field": "level40", "type": "UnsignedDword" },
      { "field": "level41", "type": "UnsignedDword" },
      { "field": "level42", "type": "UnsignedDword" },
      { "field": "level43", "type": "UnsignedDword" },
      { "field": "level44", "type": "UnsignedDword" },
      { "field": "level45", "type": "UnsignedDword" },
      { "field": "level46", "type": "UnsignedDword" },
      { "field": "level47", "type": "UnsignedDword" },
      { "field": "level48", "type": "UnsignedDword" },
      { "field": "level49", "type": "UnsignedDword" },
      { "field": "level50", "type": "UnsignedDword" },
      { "field": "level51", "type": "UnsignedDword" },
      { "field": "level52", "type": "UnsignedDword" },
      { "field": "level53", "type": "UnsignedDword" },
      { "field": "level54", "type": "UnsignedDword" },
      { "field": "level55", "type": "UnsignedDword" },
      { "field": "level56", "type": "UnsignedDword" },
      { "field": "level57", "type": "UnsignedDword" },
      { "field": "level58", "type": "UnsignedDword" },
      { "field": "level59", "type": "UnsignedDword" },
      { "field": "level60", "type": "UnsignedDword" },
      { "field": "level61", "type": "UnsignedDword" },
      { "field": "level62", "type": "UnsignedDword" },
      { "field": "level63", "type": "UnsignedDword" },
      { "field": "level64", "type": "UnsignedDword" },
      { "field": "level65", "type": "UnsignedDword" },
      { "field": "level66", "type": "UnsignedDword" },
      { "field": "level67", "type": "UnsignedDword" },
      { "field": "level68", "type": "UnsignedDword" },
      { "field": "level69", "type": "UnsignedDword" },
      { "field": "level70", "type": "UnsignedDword" },
      { "field": "level71", "type": "UnsignedDword" },
      { "field": "level72", "type": "UnsignedDword" },
      { "field": "level73", "type": "UnsignedDword" },
      { "field": "level74", "type": "UnsignedDword" },
      { "field": "level75", "type": "UnsignedDword" },
      { "field": "level76", "type": "UnsignedDword" },
      { "field": "level77", "type": "UnsignedDword" },
      { "field": "level78", "type": "UnsignedDword" },
      { "field": "level79", "type": "UnsignedDword" },
      { "field": "level80", "type": "UnsignedDword" },
      { "field": "level81", "type": "UnsignedDword" },
      { "field": "level82", "type": "UnsignedDword" },
      { "field": "level83", "type": "UnsignedDword" },
      { "field": "level84", "type": "UnsignedDword" },
      { "field": "level85", "type": "UnsignedDword" },
      { "field": "level86", "type": "UnsignedDword" },
      { "field": "level87", "type": "UnsignedDword" },
      { "field": "level88", "type": "UnsignedDword" },
      { "field": "level89", "type": "UnsignedDword" },
      { "field": "level90", "type": "UnsignedDword" },
      { "field": "level91", "type": "UnsignedDword" },
      { "field": "level92", "type": "UnsignedDword" },
      { "field": "level93", "type": "UnsignedDword" },
      { "field": "level94", "type": "UnsignedDword" },
      { "field": "level95", "type": "UnsignedDword" },
      { "field": "level96", "type": "UnsignedDword" },
      { "field": "level97", "type": "UnsignedDword" },
      { "field": "level98", "type": "UnsignedDword" },
      { "field": "level99", "type": "UnsignedDword" },
      { "field": "level100", "type": "UnsignedDword" },
      { "field": "level101", "type": "UnsignedDword" },
      { "field": "level102", "type": "UnsignedDword" },
      { "field": "level103", "type": "UnsignedDword" },
      { "field": "level104", "type": "UnsignedDword" },
      { "field": "level105", "type": "UnsignedDword" },
      { "field": "level106", "type": "UnsignedDword" },
      { "field": "level107", "type": "UnsignedDword" },
      { "field": "level108", "type": "UnsignedDword" },
      { "field": "level109", "type": "UnsignedDword" },
      { "field": "level110", "type": "UnsignedDword" },
      { "field": "level111", "type": "UnsignedDword" },
      { "field": "level112", "type": "UnsignedDword" },
      { "field": "level113", "type": "UnsignedDword" },
      { "field": "level114", "type": "UnsignedDword" },
      { "field": "level115", "type": "UnsignedDword" },
      { "field": "level116", "type": "UnsignedDword" },
      { "field": "level117", "type": "UnsignedDword" },
      { "field": "level118", "type": "UnsignedDword" },
      { "field": "level119", "type": "UnsignedDword" },
      { "field": "level120", "type": "UnsignedDword" },
      { "field": "level121", "type": "UnsignedDword" },
      { "field": "level122", "type": "UnsignedDword" },
      { "field": "level123", "type": "UnsignedDword" },
      { "field": "level124", "type": "UnsignedDword" },
      { "field": "level125", "type": "UnsignedDword" },
      { "field": "level126", "type": "UnsignedDword" },
      { "field": "level127", "type": "UnsignedDword" },
      { "field": "level128", "type": "UnsignedDword" },
      { "field": "level129", "type": "UnsignedDword" },
      { "field": "level130", "type": "UnsignedDword" },
      { "field": "level131", "type": "UnsignedDword" },
      { "field": "level132", "type": "UnsignedDword" },
      { "field": "level133", "type": "UnsignedDword" },
      { "field": "level134", "type": "UnsignedDword" },
      { "field": "level135", "type": "UnsignedDword" },
      { "field": "level136", "type": "UnsignedDword" },
      { "field": "level137", "type": "UnsignedDword" },
      { "field": "level138", "type": "UnsignedDword" },
      { "field": "level139", "type": "UnsignedDword" },
      { "field": "level140", "type": "UnsignedDword" },
      { "field": "level141", "type": "UnsignedDword" },
      { "field": "level142", "type": "UnsignedDword" },
      { "field": "level143", "type": "UnsignedDword" },
      { "field": "level144", "type": "UnsignedDword" },
      { "field": "level145", "type": "UnsignedDword" },
      { "field": "level146", "type": "UnsignedDword" },
      { "field": "level147", "type": "UnsignedDword" },
      { "field": "level148", "type": "UnsignedDword" },
      { "field": "level149", "type": "UnsignedDword" },
      { "field": "level150", "type": "UnsignedDword" },
      { "field": "level151", "type": "UnsignedDword" },
      { "field": "level152", "type": "UnsignedDword" },
      { "field": "level153", "type": "UnsignedDword" },
      { "field": "level154", "type": "UnsignedDword" },
      { "field": "level155", "type": "UnsignedDword" },
      { "field": "level156", "type": "UnsignedDword" },
      { "field": "level157", "type": "UnsignedDword" },
      { "field": "level158", "type": "UnsignedDword" },
      { "field": "level159", "type": "UnsignedDword" },
      { "field": "level160", "type": "UnsignedDword" },
      { "field": "level161", "type": "UnsignedDword" },
      { "field": "level162", "type": "UnsignedDword" },
      { "field": "level163", "type": "UnsignedDword" },
      { "field": "level164", "type": "UnsignedDword" },
      { "field": "level165", "type": "UnsignedDword" },
      { "field": "level166", "type": "UnsignedDword" },
      { "field": "level167", "type": "UnsignedDword" },
      { "field": "level168", "type": "UnsignedDword" },
      { "field": "level169", "type": "UnsignedDword" },
      { "field": "level170", "type": "UnsignedDword" },
      { "field": "level171", "type": "UnsignedDword" },
      { "field": "level172", "type": "UnsignedDword" },
      { "field": "level173", "type": "UnsignedDword" },
      { "field": "level174", "type": "UnsignedDword" },
      { "field": "level175", "type": "UnsignedDword" },
      { "field": "level176", "type": "UnsignedDword" },
      { "field": "level177", "type": "UnsignedDword" },
      { "field": "level178", "type": "UnsignedDword" },
      { "field": "level179", "type": "UnsignedDword" },
      { "field": "level180", "type": "UnsignedDword" },
      { "field": "level181", "type": "UnsignedDword" },
      { "field": "level182", "type": "UnsignedDword" },
      { "field": "level183", "type": "UnsignedDword" },
      { "field": "level184", "type": "UnsignedDword" },
      { "field": "level185", "type": "UnsignedDword" },
      { "field": "level186", "type": "UnsignedDword" },
      { "field": "level187", "type": "UnsignedDword" },
      { "field": "level188", "type": "UnsignedDword" },
      { "field": "level189", "type": "UnsignedDword" },
      { "field": "level190", "type": "UnsignedDword" },
      { "field": "level191", "type": "UnsignedDword" },
      { "field": "level192", "type": "UnsignedDword" },
      { "field": "level193", "type": "UnsignedDword" },
      { "field": "level194", "type": "UnsignedDword" },
      { "field": "level195", "type": "UnsignedDword" },
      { "field": "level196", "type": "UnsignedDword" },
      { "field": "level197", "type": "UnsignedDword" },
      { "field": "level198", "type": "UnsignedDword" },
      { "field": "level199", "type": "UnsignedDword" },
      { "field": "level200", "type": "UnsignedDword" },
      { "field": "level201", "type": "UnsignedDword" },
      { "field": "level202", "type": "UnsignedDword" },
      { "field": "level203", "type": "UnsignedDword" },
      { "field": "level204", "type": "UnsignedDword" },
      { "field": "level205", "type": "UnsignedDword" },
      { "field": "level206", "type": "UnsignedDword" },
      { "field": "level207", "type": "UnsignedDword" },
      { "field": "level208", "type": "UnsignedDword" },
      { "field": "level209", "type": "UnsignedDword" },
      { "field": "level210", "type": "UnsignedDword" },
      { "field": "level211", "type": "UnsignedDword" },
      { "field": "level212", "type": "UnsignedDword" },
      { "field": "level213", "type": "UnsignedDword" },
      { "field": "level214", "type": "UnsignedDword" },
      { "field": "level215", "type": "UnsignedDword" },
      { "field": "level216", "type": "UnsignedDword" },
      { "field": "level217", "type": "UnsignedDword" },
      { "field": "level218", "type": "UnsignedDword" },
      { "field": "level219", "type": "UnsignedDword" },
      { "field": "level220", "type": "UnsignedDword" },
      { "field": "level221", "type": "UnsignedDword" },
      { "field": "level222", "type": "UnsignedDword" },
      { "field": "level223", "type": "UnsignedDword" },
      { "field": "level224", "type": "UnsignedDword" },
      { "field": "level225", "type": "UnsignedDword" },
      { "field": "level226", "type": "UnsignedDword" },
      { "field": "level227", "type": "UnsignedDword" },
      { "field": "level228", "type": "UnsignedDword" },
      { "field": "level229", "type": "UnsignedDword" },
      { "field": "level230", "type": "UnsignedDword" },
      { "field": "level231", "type": "UnsignedDword" },
      { "field": "level232", "type": "UnsignedDword" },
      { "field": "level233", "type": "UnsignedDword" },
      { "field": "level234", "type": "UnsignedDword" },
      { "field": "level235", "type": "UnsignedDword" },
      { "field": "level236", "type": "UnsignedDword" },
      { "field": "level237", "type": "UnsignedDword" },
      { "field": "level238", "type": "UnsignedDword" },
      { "field": "level239", "type": "UnsignedDword" },
      { "field": "level240", "type": "UnsignedDword" },
      { "field": "level241", "type": "UnsignedDword" },
      { "field": "level242", "type": "UnsignedDword" },
      { "field": "level243", "type": "UnsignedDword" },
      { "field": "level244", "type": "UnsignedDword" },
      { "field": "level245", "type": "UnsignedDword" },
      { "field": "level246", "type": "UnsignedDword" },
      { "field": "level247", "type": "UnsignedDword" },
      { "field": "level248", "type": "UnsignedDword" },
      { "field": "level249", "type": "UnsignedDword" },
      { "field": "level250", "type": "UnsignedDword" },
      { "field": "level251", "type": "UnsignedDword" },
      { "field": "level252", "type": "UnsignedDword" },
      { "field": "level253", "type": "UnsignedDword" },
      { "field": "level254", "type": "UnsignedDword" }
    ],
    "SaveGameThemesCompleted": [
      {
        "field": "theme0",
        "type": "Bool",
        "comment": "themes are 1-based, so in this array theme zero refers to nothing"
      },
      { "field": "dwelling", "type": "Bool" },
      { "field": "jungle", "type": "Bool" },
      { "field": "volcana", "type": "Bool" },
      { "field": "olmec", "type": "Bool" },
      { "field": "tidepool", "type": "Bool" },
      { "field": "temple", "type": "Bool" },
      { "field": "icecaves", "type": "Bool" },
      {
        "field": "neobabylon",
        "type": "Bool",
        "comment": "due to Tiamat, this only gets triggered when you finish a neobab 7-98"
      },
      {
        "field": "sunkencity",
        "type": "Bool",
        "comment": "due to Hundun, this only gets triggered when you finish a sunkencity 7-98"
      },
      { "field": "cosmicocean", "type": "Bool" },
      { "field": "city_of_gold", "type": "Bool" },
      { "field": "duat", "type": "Bool" },
      { "field": "abzu", "type": "Bool" },
      { "field": "tiamat", "type": "Bool" },
      { "field": "eggplant_world", "type": "Bool" },
      { "field": "hundun", "type": "Bool" },
      { "field": "basecamp", "type": "Bool" },
      { "field": "arena", "type": "Bool" },
      { "field": "unknown", "type": "Bool" }
    ],
    "SaveGameArenaRuleset": [
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "timer", "type": "State8", "ref": "arena_timer_states" },
      {
        "field": "timer_ending",
        "type": "State8",
        "ref": "arena_timer_ending_states"
      },
      { "field": "wins", "type": "UnsignedByte" },
      { "field": "lives", "type": "UnsignedByte" },
      { "field": "unknown7", "type": "UnsignedByte" },
      { "field": "unknown8", "type": "UnsignedByte" },
      {
        "field": "unused_player1_idolheld_countdown",
        "type": "UnsignedWord",
        "comment": "struct is similar to state.arenas so they just copied it, but this is not useful to store in the savegame"
      },
      { "field": "unused_player2_idolheld_countdown", "type": "UnsignedWord" },
      { "field": "unused_player3_idolheld_countdown", "type": "UnsignedWord" },
      { "field": "unused_player4_idolheld_countdown", "type": "UnsignedWord" },
      { "field": "health", "type": "UnsignedByte" },
      { "field": "bombs", "type": "UnsignedByte" },
      { "field": "ropes", "type": "UnsignedByte" },
      {
        "field": "stun_time",
        "type": "State8",
        "ref": "arena_stun_time_states"
      },
      { "field": "mount", "type": "State8", "ref": "arena_mount_states" },
      {
        "field": "arena_select",
        "type": "State8",
        "ref": "arena_select_states"
      },
      { "field": "arenas", "type": "ArenaConfigArenas" },
      {
        "field": "dark_level_chance",
        "type": "State8",
        "ref": "arena_dark_level_chance_states"
      },
      {
        "field": "crate_frequency",
        "type": "State8",
        "ref": "arena_crate_frequency_states"
      },
      { "field": "items_enabled", "type": "ArenaConfigItems" },
      { "field": "items_in_crate", "type": "ArenaConfigItems" },
      {
        "field": "held_item",
        "type": "State8",
        "ref": "arena_held_item_states"
      },
      {
        "field": "equipped_backitem",
        "type": "State8",
        "ref": "arena_equipped_backitem_states"
      },
      { "field": "equipped_items", "type": "ArenaConfigEquippedItems" },
      {
        "field": "whip_damage",
        "type": "State8",
        "ref": "arena_whip_damage_states"
      },
      { "field": "final_ghost", "type": "Bool" },
      {
        "field": "breath_cooldown",
        "type": "State8",
        "ref": "arena_breath_cooldown_states"
      },
      { "field": "punish_ball", "type": "Bool" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" }
    ],
    "LevelGen": [
      { "field": "data", "type": "LevelGenDataPointer" },
      { "field": "unknown2", "type": "UnsignedQword" },
      { "field": "theme_dwelling", "type": "ThemeInfoPointer" },
      { "field": "theme_jungle", "type": "ThemeInfoPointer" },
      { "field": "theme_volcana", "type": "ThemeInfoPointer" },
      { "field": "theme_olmec", "type": "ThemeInfoPointer" },
      { "field": "theme_tidepool", "type": "ThemeInfoPointer" },
      { "field": "theme_temple", "type": "ThemeInfoPointer" },
      { "field": "theme_icecaves", "type": "ThemeInfoPointer" },
      { "field": "theme_neobabylon", "type": "ThemeInfoPointer" },
      { "field": "theme_sunkencity", "type": "ThemeInfoPointer" },
      { "field": "theme_cosmicocean", "type": "ThemeInfoPointer" },
      { "field": "theme_city_of_gold", "type": "ThemeInfoPointer" },
      { "field": "theme_duat", "type": "ThemeInfoPointer" },
      { "field": "theme_abzu", "type": "ThemeInfoPointer" },
      { "field": "theme_tiamat", "type": "ThemeInfoPointer" },
      { "field": "theme_eggplantworld", "type": "ThemeInfoPointer" },
      { "field": "theme_hundun", "type": "ThemeInfoPointer" },
      { "field": "theme_basecamp", "type": "ThemeInfoPointer" },
      { "field": "theme_arena", "type": "ThemeInfoPointer" },
      { "field": "unknown21", "type": "UnsignedQword" },
      { "field": "bee_gen", "type": "SpecialLevelGeneration" },
      { "field": "leprechaun_gen", "type": "SpecialLevelGeneration" },
      { "field": "rooms_frontlayer", "type": "LevelGenRoomsPointer" },
      { "field": "rooms_backlayer", "type": "LevelGenRoomsPointer" },
      { "field": "flipped_rooms", "type": "LevelGenRoomsMetaPointer" },
      { "field": "rooms_meta_27", "type": "LevelGenRoomsMetaPointer" },
      { "field": "set_room_front_layer", "type": "LevelGenRoomsMetaPointer" },
      { "field": "set_room_back_layer", "type": "LevelGenRoomsMetaPointer" },
      {
        "field": "backlayer_room_exists",
        "type": "LevelGenRoomsMetaPointer"
      },
      { "field": "machine_room_origin", "type": "LevelGenRoomsMetaPointer" },
      { "field": "dual_room", "type": "LevelGenRoomsMetaPointer" },
      { "field": "rooms_meta_33", "type": "LevelGenRoomsMetaPointer" },
      { "field": "rooms_meta_34", "type": "LevelGenRoomsMetaPointer" },
      { "field": "spawn_room_x", "type": "UnsignedDword" },
      { "field": "spawn_room_y", "type": "UnsignedDword" },
      { "field": "spawn_x", "type": "Float" },
      { "field": "spawn_y", "type": "Float" },
      {
        "field": "exit_doors_locations",
        "type": "StdVector",
        "vectortype": "XY"
      },
      {
        "field": "flags",
        "type": "Flags8",
        "flags": {
          "1": "Should generate path",
          "2": "Can spawn vault",
          "3": "Can spawn shops",
          "4": "Can have outpost?",
          "5": "Should spawn hard floor decorations",
          "6": "Apply ambient occlusion",
          "7": "Should spawn behind-floor and below-floorstyled decorations",
          "8": "unknown"
        }
      },
      {
        "field": "flags2",
        "type": "Flags8",
        "flags": {
          "1": "Spawns background decorations on ground (ceiling if false)",
          "2": "Spawns fake ladder/chain midbg?",
          "3": "Spawn entrance door background (Ignored in 7-1 to 7-2 transition)",
          "4": "Procedural backlayer door midbg indicator related",
          "5": "Spawn backlayer border/background",
          "6": "Should spawn procedural backlayers",
          "7": "Should spawn backlayer torches",
          "8": "Has ghost"
        }
      },
      {
        "field": "flags3",
        "type": "Flags8",
        "flags": {
          "1": "Can spawn angry NPCs",
          "2": "Can echo",
          "3": "Can spawn Dead are Restless",
          "4": "Can spawn procedural skeletons",
          "5": "Can have quests?",
          "6": "Can spawn player coffins",
          "7": "unknown",
          "8": "unknown"
        }
      },
      { "field": "shop_type", "type": "State8", "ref": "shop_types" },
      { "field": "backlayer_shop_type", "type": "State8", "ref": "shop_types" },
      { "field": "frontlayer_shop_music", "type": "UnsignedByte" },
      { "field": "backlayer_shop_music", "type": "UnsignedByte" },
      {
        "field": "unknown47",
        "type": "UnsignedByte",
        "comment": "set to 0 at the start of level gen, nothing check it thou"
      },
      { "field": "unknown48", "type": "Bool" },
      { "field": "unknown49", "type": "UnsignedByte" },
      { "field": "padding1?", "type": "UnsignedWord" },
      { "field": "padding2?", "type": "UnsignedDword" },
      { "field": "unknown50", "type": "UnsignedQword" }
    ],
    "LevelGenDataPointer": [
      { "field": "back_room_chance", "type": "UnsignedDword" },
      { "field": "back_room_interconnection_chance", "type": "UnsignedDword" },
      { "field": "back_room_hidden_door_chance", "type": "UnsignedDword" },
      { "field": "back_room_hidden_door_cache_chance", "type": "UnsignedDword" },
      { "field": "mount_chance", "type": "UnsignedDword" },
      { "field": "altar_room_chance", "type": "UnsignedDword" },
      { "field": "idol_room_chance", "type": "UnsignedDword" },
      { "field": "floor_side_spread_chance", "type": "UnsignedDword" },
      { "field": "floor_bottom_spread_chance", "type": "UnsignedDword" },
      { "field": "background_chance", "type": "UnsignedDword" },
      { "field": "ground_background_chance", "type": "UnsignedDword" },
      { "field": "machine_bigroom_chance", "type": "UnsignedDword" },
      { "field": "machine_wideroom_chance", "type": "UnsignedDword" },
      { "field": "machine_tallroom_chance", "type": "UnsignedDword" },
      { "field": "machine_rewardroom_chance", "type": "UnsignedDword" },
      { "field": "max_liquid_particles", "type": "UnsignedDword" },
      { "field": "flagged_liquid_rooms", "type": "UnsignedDword" },
      { "field": "unknown_config", "type": "UnsignedDword" },
      {
        "field": "short_tile_codes",
        "type": "UnorderedMap",
        "comment": "unordered_map<uint8_t, ShortTileCodeDef>"
      },
      {
        "field": "tile_codes",
        "type": "UnorderedMap",
        "comment": "unordered_map<string, TileCodeDef>"
      },
      {
        "field": "room_templates",
        "type": "UnorderedMap",
        "comment": "unordered_map<string, TemplateDef>"
      },
      {
        "field": "room_template_datas",
        "type": "UnorderedMap",
        "comment": "unordered_map<uint16_t, RoomTemplateData"
      }
    ],
    "SpecialLevelGeneration": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~SpecialLevelGeneration",
            "params": "",
            "return": ""
          },
          "1": {
            "name": "set_rooms",
            "params": "",
            "return": ""
          },
          "2": {
            "name": "spawn_backgrounds",
            "params": "",
            "return": ""
          },
          "3": {
            "name": "procedural_spawns",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedByte" },
      { "field": "unknown6", "type": "UnsignedByte" },
      { "field": "unknown7", "type": "UnsignedByte" },
      { "field": "unknown8", "type": "UnsignedByte" },
      { "field": "unknown9", "type": "UnsignedByte" },
      { "field": "unknown10", "type": "UnsignedByte" },
      { "field": "unknown11", "type": "UnsignedByte" },
      { "field": "unknown12", "type": "UnsignedByte" },
      { "field": "unknown13", "type": "UnsignedByte" },
      { "field": "unknown14", "type": "UnsignedByte" },
      { "field": "unknown15", "type": "UnsignedByte" },
      { "field": "unknown16", "type": "UnsignedByte" },
      { "field": "unknown17", "type": "UnsignedByte" },
      { "field": "unknown18", "type": "UnsignedByte" },
      { "field": "unknown19", "type": "UnsignedByte" },
      { "field": "unknown20", "type": "UnsignedByte" },
      { "field": "unknown21", "type": "UnsignedByte" },
      { "field": "unknown22", "type": "UnsignedByte" },
      { "field": "unknown23", "type": "UnsignedByte" },
      { "field": "unknown24", "type": "UnsignedByte" },
      { "field": "unknown25", "type": "UnsignedByte" },
      { "field": "unknown26", "type": "UnsignedByte" },
      { "field": "unknown27", "type": "UnsignedByte" },
      { "field": "unknown28", "type": "UnsignedByte" },
      { "field": "unknown29", "type": "UnsignedByte" },
      { "field": "unknown30", "type": "UnsignedByte" },
      { "field": "unknown31", "type": "UnsignedByte" },
      { "field": "unknown32", "type": "UnsignedByte" },
      { "field": "unknown33", "type": "UnsignedByte" },
      { "field": "unknown34", "type": "UnsignedByte" },
      { "field": "unknown35", "type": "UnsignedByte" },
      { "field": "unknown36", "type": "UnsignedByte" },
      { "field": "unknown37", "type": "UnsignedByte" },
      { "field": "unknown38", "type": "UnsignedByte" },
      { "field": "unknown39", "type": "UnsignedByte" },
      { "field": "unknown40", "type": "UnsignedByte" },
      { "field": "unknown41", "type": "UnsignedByte" },
      { "field": "unknown42", "type": "UnsignedByte" },
      { "field": "unknown43", "type": "UnsignedByte" },
      { "field": "unknown44", "type": "UnsignedByte" },
      { "field": "unknown45", "type": "UnsignedByte" },
      { "field": "unknown46", "type": "UnsignedByte" },
      { "field": "unknown47", "type": "UnsignedByte" },
      { "field": "unknown48", "type": "UnsignedByte" },
      { "field": "unknown49", "type": "UnsignedDword" },
      { "field": "unknown50", "type": "UnsignedDword" }
    ],
    "Online": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~Online", "params": "", "return": "" }
        }
      },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "unknown10", "type": "UnsignedDword" },
      { "field": "unknown11", "type": "UnsignedDword" },
      { "field": "unknown12", "type": "UnsignedDword" },
      { "field": "unknown13", "type": "UnsignedDword" },
      { "field": "unknown14", "type": "UnsignedDword" },
      { "field": "socket", "type": "UnsignedDword" },
      { "field": "unknown16", "type": "UnsignedDword" },
      { "field": "unknown17", "type": "UnsignedDword" },
      { "field": "unknown18", "type": "UnsignedDword" },
      { "field": "unknown19", "type": "UnsignedDword" },
      { "field": "unknown20", "type": "UnsignedDword" },
      { "field": "unknown21", "type": "UnsignedDword" },
      { "field": "unknown22", "type": "UnsignedDword" },
      { "field": "sockaddr_unknown1", "type": "SockAddrIn" },
      {
        "field": "sockaddr_unknown2",
        "type": "SockAddrIn",
        "comment": "to edge server"
      },
      { "field": "unknown27", "type": "UnsignedDword" },
      { "field": "unknown28", "type": "UnsignedDword" },
      { "field": "unknown29", "type": "UnsignedDword" },
      { "field": "unknown30", "type": "UnsignedDword" },
      { "field": "unknown31", "type": "UnsignedDword" },
      { "field": "unknown32", "type": "UnsignedDword" },
      { "field": "unknown33", "type": "UnsignedDword" },
      { "field": "unknown34", "type": "UnsignedDword" },
      { "field": "unknown35", "type": "UnsignedDword" },
      { "field": "unknown36", "type": "UnsignedDword" },
      { "field": "unknown37", "type": "UnsignedDword" },
      { "field": "unknown38", "type": "UnsignedDword" },
      { "field": "online_player_1", "type": "OnlinePlayer" },
      { "field": "online_player_2", "type": "OnlinePlayer" },
      { "field": "online_player_3", "type": "OnlinePlayer" },
      { "field": "online_player_4", "type": "OnlinePlayer" },
      { "field": "local_player", "type": "OnlinePlayer" },
      { "field": "lobby", "type": "OnlineLobby" },
      { "field": "lobby_dupe", "type": "OnlineLobby" },
      { "field": "servers", "type": "OnlineServers" },
      { "field": "unknown40", "type": "UnsignedDword" },
      { "field": "unknown41", "type": "UnsignedDword" },
      { "field": "unknown42", "type": "DataPointer" },
      { "field": "unknown43", "type": "UnsignedDword" },
      { "field": "unknown44", "type": "UnsignedDword" },
      { "field": "unknown45", "type": "UnsignedDword" },
      { "field": "unknown46", "type": "UnsignedDword" },
      { "field": "sockaddr_game", "type": "SockAddrIn" },
      { "field": "unknown47", "type": "StdVector", "vectortype": "UnsignedQword" },
      { "field": "unknown48", "type": "StdVector", "vectortype": "UnsignedQword" },
      { "field": "unknown49", "type": "StdVector", "vectortype": "UnsignedQword" }
    ],
    "OnlineServers": [
      { "field": "server1", "type": "OnlineServer" },
      { "field": "server2", "type": "OnlineServer" },
      { "field": "server3", "type": "OnlineServer" },
      { "field": "server4", "type": "OnlineServer" },
      { "field": "server5", "type": "OnlineServer" },
      { "field": "server6", "type": "OnlineServer" },
      { "field": "server7", "type": "OnlineServer" },
      { "field": "server8", "type": "OnlineServer" },
      { "field": "server9", "type": "OnlineServer" },
      { "field": "server10", "type": "OnlineServer" },
      { "field": "server11", "type": "OnlineServer" },
      { "field": "server12", "type": "OnlineServer" },
      { "field": "server13", "type": "OnlineServer" },
      { "field": "server14", "type": "OnlineServer" },
      { "field": "server15", "type": "OnlineServer" },
      { "field": "server16", "type": "OnlineServer" },
      { "field": "server17", "type": "OnlineServer" },
      { "field": "server18", "type": "OnlineServer" },
      { "field": "server19", "type": "OnlineServer" },
      { "field": "server20", "type": "OnlineServer" },
      { "field": "server21", "type": "OnlineServer" },
      { "field": "server22", "type": "OnlineServer" },
      { "field": "server23", "type": "OnlineServer" },
      { "field": "server24", "type": "OnlineServer" },
      { "field": "server25", "type": "OnlineServer" },
      { "field": "server26", "type": "OnlineServer" },
      { "field": "server27", "type": "OnlineServer" },
      { "field": "server28", "type": "OnlineServer" },
      { "field": "server29", "type": "OnlineServer" },
      { "field": "server30", "type": "OnlineServer" },
      { "field": "server31", "type": "OnlineServer" },
      { "field": "server32", "type": "OnlineServer" }
    ],
    "OnlineServer": [
      { "field": "sockaddr", "type": "SockAddrIn" },
      { "field": "unknown_query", "type": "Qword" },
      { "field": "unknown_response", "type": "Qword" }
    ],
    "SockAddrIn": [
      { "field": "family", "type": "Word" },
      { "field": "port", "type": "UnsignedWord" },
      { "field": "address", "type": "IPv4Address" }
    ],
    "OnlinePlayer": [
      { "field": "unknown39", "type": "UnsignedByte" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "unknown5", "type": "UnsignedByte" },
      {
        "field": "ready_state",
        "type": "State8",
        "states": {
          "0": "Unassigned",
          "72": "Not ready",
          "73": "Ready"
        }
      },
      { "field": "character", "type": "State8", "ref": "character_states" },
      {
        "field": "player_name",
        "type": "UTF8StringFixedSize",
        "offset": 33
      }
    ],
    "OnlineLobby": [
      { "field": "code", "type": "UnsignedDword" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "keys_pressed", "type": "UnsignedDword" },
      { "field": "keys_pressed_sync", "type": "UnsignedDword" },
      { "field": "local_player_slot", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "Byte" },
      { "field": "unknown5", "type": "Byte" },
      { "field": "unknown6", "type": "Dword" },
      { "field": "unknown7", "type": "Byte" },
      { "field": "unknown8", "type": "Byte" },
      { "field": "unknown9", "type": "UnsignedByte" },
      { "field": "unknown10", "type": "UnsignedByte" },
      { "field": "unknown11", "type": "Dword" },
      { "field": "unknown12", "type": "Dword" },
      { "field": "unknown13", "type": "Byte" },
      { "field": "unknown14", "type": "Byte" },
      { "field": "unknown15", "type": "UnsignedByte" },
      { "field": "unknown16", "type": "UnsignedByte" },
      { "field": "unknown17", "type": "UnsignedDword" },
      { "field": "unknown18", "type": "UnsignedByte" },
      { "field": "unknown19", "type": "UnsignedByte" },
      { "field": "unknown20", "type": "Byte" },
      { "field": "unknown21", "type": "Byte" },
      { "field": "unknown22", "type": "Byte" },
      { "field": "unknown23", "type": "UnsignedByte" },
      { "field": "unknown24", "type": "UnsignedByte" },
      { "field": "unknown25", "type": "UnsignedByte" },
      { "field": "unknown26", "type": "UnsignedDword" }
    ],
    "CollisionInfo": [
      { "field": "rect", "type": "Rect" },
      { 
        "field": "shape",
        "type": "State8",
        "states": {
            "0": "NONE",
            "1": "RECTANGLE",
            "2": "CIRCLE"
        }
      },
      { "field": "hitbox_enabled", "type": "Bool" },
      { "field": "field_3A", "type": "UnsignedByte" },
      { "field": "field_3B", "type": "UnsignedByte" }
    ],
    "Entity": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~Entity", "params": "", "return": "" },
          "1": {
            "name": "create_rendering_info",
            "params": "",
            "return": "void"
          },
          "2": {
            "name": "handle_state_machine",
            "params": "",
            "return": "void"
          },
          "3": {
            "name": "kill",
            "params": "bool, Entity* frm",
            "return": "void"
          },
          "4": {
            "name": "on_collision1",
            "params": "Entity* other_entity",
            "return": "void",
            "comment": "triggers on collision between whip and hit object"
          },
          "5": {
            "name": "destroy",
            "params": "",
            "return": "void",
            "comment": ""
          },
          "6": {
            "name": "apply_texture",
            "params": "Texture*",
            "return": "void"
          },
          "7": {
            "name": "format_shopitem_name",
            "params": "char16_t*",
            "return": "void"
          },
          "8": {
            "name": "generate_stomp_damage_particles",
            "params": "Entity* victim",
            "return": "void",
            "comment": "particles when jumping on top of enemy"
          },
          "9": {
            "name": "get_type_field_a8",
            "params": "",
            "return": "float"
          },
          "10": {
            "name": "can_be_pushed",
            "params": "",
            "return": "bool",
            "comment": "(runs only for activefloors?) checks if entity type is pushblock, for chained push block checks ChainedPushBlock.is_chained, is only a check that allows for the pushing animation"
          },
          "11": {
            "name": "v11",
            "params": "",
            "return": "bool",
            "comment": "for arrows: returns true if it's moving (for y possibily checks for some speed as well?)"
          },
          "12": {
            "name": "is_in_liquid",
            "params": "",
            "return": "bool"
          },
          "13": {
            "name": "check_type_properties_flags_19",
            "params": "",
            "return": "bool",
            "comment": "checks (properties_flags >> 0x12) & 1; for hermitcrab checks if he's invisible; can't get it to trigger"
          },
          "14": {
            "name": "get_type_field_60",
            "params": "",
            "return": "uint32_t"
          },
          "15": { "name": "set_invisible", "params": "bool", "return": "void" },
          "16": {
            "name": "handle_turning_left",
            "params": "bool apply",
            "return": "void",
            "comment": "if disabled, monsters don't turn left and keep walking in the wall (and other right-left issues)"
          },
          "17": {
            "name": "set_draw_depth",
            "params": "uint8_t draw_depth",
            "return": "void"
          },
          "18": {
            "name": "resume_ai",
            "params": "",
            "return": "",
            "comment": "works on entities with ai_func != 0; runs when companions are let go from being held"
          },
          "19": { "name": "friction", "params": "", "return": "float" },
          "20": { "name": "set_as_sound_source", "params": "SoundMeta*", "return": "" },
          "21": {
            "name": "remove_item_ptr",
            "params": "Entity*",
            "return": "void"
          },
          "22": {
            "name": "get_held_entity",
            "params": "Entity*",
            "return": "void"
          },
          "23": {
            "name": "v23",
            "params": "Entity* logical_trigger, Entity* who_triggered_it",
            "return": ""
          },
          "24": {
            "name": "trigger_action",
            "params": "Entity* user",
            "return": "bool"
          },
          "25": {
            "name": "activate",
            "params": "Entity* activator",
            "return": "void",
            "comment": "Activates a button prompt (with the Use door/Buy button), e.g. buy shop item, activate drill, read sign, interact in camp ..."
          },
          "26": {
            "name": "on_collision2",
            "params": "Entity* other_entity",
            "return": "",
            "comment": "needs investigating, difference between this and on_collision1"
          },
          "27": {
            "name": "get_metadata",
            "params": "",
            "return": "uint16_t",
            "comment": "e.g. for turkey: stores health, poison/curse state, for mattock: remaining swings (returned value is transferred)"
          },
          "28": {
            "name": "apply_metadata",
            "params": "uint16_t metadata",
            "return": "void"
          },
          "29": {
            "name": "on_walked_on_by",
            "params": "Entity* walker",
            "return": "void",
            "comment": "hits when monster/player walks on a floor, does something when walker.velocityy<-0.21 (falling onto) and walker.hitboxy * hitboxx > 0.09"
          },
          "30": {
            "name": "on_walked_off_by",
            "params": "Entity* walker",
            "return": "void",
            "comment": "hits when monster/player walks off a floor, it checks whether the walker has floor as overlay, and if so, removes walker from floor's items by calling virtual 20 (remove_item_ptr)"
          },
          "31": {
            "name": "on_ledge_grab",
            "params": "Entity* who",
            "return": "",
            "comment": "only ACTIVEFLOOR_FALLING_PLATFORM, does something with game menager"
          },
          "32": {
            "name": "on_stood_on_by",
            "params": "Entity* entity",
            "return": "",
            "comment": "e.g. pots, skulls, pushblocks, ... standing on floors"
          },
          "33": {
            "name": "toggle_backlayer_illumination",
            "params": "",
            "return": "",
            "comment": "only for CHAR_*, when going to the backlayer, turns on player emitted light"
          },
          "34": {
            "name": "v34",
            "params": "",
            "return": "",
            "comment": "only ITEM_TORCH, calls Torch.light_up(false), can't get it to trigger"
          },
          "35": {
            "name": "liberate_from_shop",
            "params": "",
            "return": "",
            "comment": "can also be seen as event: when you anger the shopkeeper, this function gets called for each item; can be called on shopitems individually as well and they become 'purchased'"
          },
          "36": { "name": "apply_db", "params": "", "return": "void" }
        }
      },
      { "field": "type", "type": "EntityDBPointer" },
      { "field": "overlay", "type": "EntityPointer" },
      { "field": "items", "type": "Vector" },
      {
        "field": "flags",
        "type": "Flags32",
        "ref": "entity_flags"
      },
      {
        "field": "more_flags",
        "type": "Flags32",
        "ref": "entity_more_flags"
      },
      { "field": "uid", "type": "EntityUID" },
      { "field": "animation_frame", "type": "UnsignedWord" },
      { "field": "draw_depth", "type": "UnsignedByte" },
      {
        "field": "b3f",
        "type": "Byte",
        "comment": "depth related, changed when going thru doors etc."
      },
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      {
        "field": "abs_x",
        "type": "Float",
        "comment": "abs - only for movable entities, or entities that can be spawned without overlay, for the rest it's FLOAT_MIN?"
      },
      { "field": "abs_y", "type": "Float" },
      { "field": "w", "type": "Float" },
      { "field": "h", "type": "Float" },
      { "field": "special_offsetx", "type": "Float" },
      { "field": "special_offsety", "type": "Float" },
      { "field": "color", "type": "Color" },
      { "field": "collision", "type": "CollisionInfo" },
      { "field": "angle", "type": "Float" },
      { "field": "rendering_info", "type": "RenderInfoPointer" },
      { "field": "texture", "type": "TextureDBPointer" },
      { "field": "tilew", "type": "Float" },
      { "field": "tileh", "type": "Float" },
      { "field": "layer", "type": "UnsignedByte" },
      {
        "field": "b99",
        "type": "UnsignedByte",
        "comment": "this looks like FLOORSTYLED post-processing"
      },
      { "field": "b9a", "type": "UnsignedByte" },
      { "field": "b9b", "type": "UnsignedByte" },
      { "field": "i9c", "type": "UnsignedDword" }
    ],
    "Movable": [
      {
        "vftablefunctions": {
          "37": {
            "name": "can_jump",
            "params": "bool",
            "return": "",
            "comment": "disable to allow unlimited multijump; checks jump flags"
          },
          "38": { "name": "v38", "params": "", "return": "" },
          "39": { "name": "sprint_factor", "params": "", "return": "float" },
          "40": {
            "name": "calculate_jump_height",
            "params": "",
            "return": "",
            "comment": "when disabled, jump height is very high"
          },
          "41": {
            "name": "get_animation_map",
            "params": "",
            "return": "std::unordered_map<uint8_t, Animation>&"
          },
          "42": {
            "name": "apply_velocity",
            "params": "float* velocities",
            "return": "",
            "comment": "param is pointer to an array of two floats: velocity x and y"
          },
          "43": {
            "name": "stomp_damage",
            "params": "",
            "return": "int8_t",
            "comment": "calculates the amount of stomp damage applied (checks spike shoes, movable.state and stand_counter resulting in different damage values)"
          },
          "44": {
            "name": "stomp_damage_trampoline",
            "params": "",
            "return": "int8_t",
            "comment": "simply jumps to the 43rd virtual function, aka stomp_damage..."
          },
          "45": {
            "name": "is_on_fire",
            "params": "",
            "return": "bool"
          },
          "46": {
            "name": "v46",
            "params": "",
            "return": ""
          },
          "47": {
            "name": "v47",
            "params": "",
            "return": ""
          },
          "48": {
            "name": "on_regular_damage",
            "params": "Entity* damage_dealer, int8_t damage_amount, uint8_t unknown = 1",
            "return": "",
            "comment": "disable for regular damage invincibility; does not handle crush deaths (boulder, quillback, ghost); unknown param = 2 when hired hand gets hit by player"
          },
          "49": {
            "name": "on_stun_damage",
            "params": "Entity* damage_dealer",
            "return": "",
            "comment": "triggers for broken arrow hit, calls handle_regular_damage with 0 damage; unsure about functionality and name"
          },
          "50": {
            "name": "v50",
            "params": "",
            "return": ""
          },
          "51": {
            "name": "stun",
            "params": "uint16_t framecount",
            "return": "void"
          },
          "52": {
            "name": "freeze",
            "params": "uint8_t framecount",
            "return": "void"
          },
          "53": {
            "name": "light_on_fire",
            "params": "uint8_t time",
            "return": "void",
            "comment": "Does not damage entity"
          },
          "54": {
            "name": "set_cursed",
            "params": "bool b",
            "return": "void"
          },
          "55": {
            "name": "on_spiderweb_collision",
            "params": "",
            "return": ""
          },
          "56": {
            "name": "set_last_owner_uid_b127",
            "params": "Entity* owner",
            "return": "",
            "comment": "assigns player as last_owner_uid and also manipulates movable.b127"
          },
          "57": {
            "name": "get_last_owner_uid",
            "params": "",
            "return": "uint32_t",
            "comment": "for players, it checks !stunned && !frozen && !cursed && !has_overlay; for others: just returns last_owner_uid"
          },
          "58": {
            "name": "check_out_of_bounds",
            "params": "",
            "return": "",
            "comment": "kills with the 'still falling' death cause"
          },
          "59": {
            "name": "v59",
            "params": "",
            "return": ""
          },
          "60": {
            "name": "standing_on",
            "params": "",
            "return": "Entity*",
            "comment": "looks up movable.standing_on_uid in state.instance_id_to_pointer"
          },
          "61": {
            "name": "on_stomped_on_by",
            "params": "Entity* stomper",
            "return": ""
          },
          "62": {
            "name": "on_thrown_by",
            "params": "Entity* thrower",
            "return": "",
            "comment": "implemented for special cases like hired hand (player with ai_func), horned lizard..."
          },
          "63": {
            "name": "on_clonegunshot_hit",
            "params": "Entity* clone",
            "return": "",
            "comment": "implemented for player/hired hand: copies health to clone etc"
          },
          "64": {
            "name": "get_type_id",
            "params": "",
            "return": "uint32_t"
          },
          "65": {
            "name": "doesnt_have_spikeshoes",
            "params": "",
            "return": "bool"
          },
          "66": {
            "name": "is_player_mount_or_monster",
            "params": "",
            "return": "bool"
          },
          "67": {
            "name": "pick_up",
            "params": "Entity* entity_to_pick_up",
            "return": ""
          },
          "68": {
            "name": "picked_up_by",
            "params": "Entity* entity_picking_up",
            "return": ""
          },
          "69": {
            "name": "drop",
            "params": "Entity* entity",
            "return": "",
            "comment": "also used when throwing"
          },
          "70": {
            "name": "add_money",
            "params": "uint32_t money",
            "return": ""
          },
          "71": {
            "name": "apply_movement",
            "params": "",
            "return": "",
            "comment": "disable this function and things can't move, some spin in place"
          },
          "72": {
            "name": "damage_entity",
            "params": "Entity* victim",
            "return": "",
            "comment": "can't trigger, maybe extra params are needed"
          },
          "73": {
            "name": "is_monster_or_player",
            "params": "",
            "return": "bool"
          },
          "74": {
            "name": "initialize",
            "params": "",
            "return": "",
            "comment": "e.g. cobra: set random spit_timer; bat: set random stand_counter; emerald: set price"
          },
          "75": {
            "name": "check_is_falling",
            "params": "",
            "return": "",
            "comment": "sets more_flags.falling by comparing velocityy to 0"
          },
          "76": {
            "name": "handle_stun_transition_animation",
            "params": "",
            "return": "e.g. the wiggle the dog does when waking up from being stunned"
          },
          "77": {
            "name": "process_input",
            "params": "",
            "return": ""
          },
          "78": {
            "name": "post_collision_damage_related",
            "params": "",
            "return": "",
            "comment": "seems to start processing invincibility timer in victim, not *this"
          },
          "79": {
            "name": "picked_up",
            "params": "",
            "return": "",
            "comment": "gets called after picked_up_by"
          },
          "80": {
            "name": "hired_hand_related",
            "params": "",
            "return": "",
            "comment": "checks ai_func, gets triggered just after throwing hired hand"
          },
          "81": {
            "name": "generate_fall_poof_particles",
            "params": "",
            "return": "",
            "comment": "entity.velocityy must be < -0.12 to generate a poof, might to other stuff regarding falling/landing"
          },
          "82": {
            "name": "handle_fall_logic",
            "params": "",
            "return": "",
            "comment": "adjusts entity.velocityy when falling"
          },
          "83": {
            "name": "apply_friction",
            "params": "",
            "return": "",
            "comment": "applies entity.type.friction to entity.velocityx"
          },
          "84": {
            "name": "boss_related",
            "params": "",
            "return": "",
            "comment": "when disabled, quillback keeps stomping through the level, including border tiles"
          },
          "85": {
            "name": "tusk_last_owner_uid_related",
            "params": "",
            "return": "",
            "comment": "triggers when tusk is angered, calls get_last_owner_uid"
          },
          "86": {
            "name": "gravity_related",
            "params": "",
            "return": ""
          },
          "87": { "name": "v87", "params": "", "return": "" },
          "88": { "name": "v88", "params": "", "return": "" },
          "89": {
            "name": "stack_plus_28_is_0",
            "params": "",
            "return": "",
            "comment": "triggers on item_rubble"
          },
          "90": {
            "name": "on_crushed_by",
            "params": "Entity*",
            "return": "",
            "comment": "e.g. crushed by elevator, punishball, pushblock, crushtrap (not quillback or boulder)"
          },
          "91": {
            "name": "on_fall_onto",
            "params": "uint32_t unknown, Entity* fell_on_entity",
            "return": ""
          },
          "92": {
            "name": "on_instakill_death",
            "params": "",
            "return": "",
            "comment": "seems to only trigger for enemies that die in one hit"
          }
        }
      },
      {
        "field": "behavior_map",
        "type": "Map",
        "comment": "map of avaible behaviors for this entity"
      },
      { "field": "pb0", "type": "Map" },
      {
        "field": "behavior",
        "type": "DataPointer",
        "comment": "pointer to array element, that array is list of pointers that point to a list of code pointers (funcitons)"
      },
      { "field": "ic8", "type": "Qword" },
      { "field": "movex", "type": "Float" },
      { "field": "movey", "type": "Float" },
      { "field": "buttons", "type": "Flags8", "ref": "buttons_entity" },
      {
        "field": "buttons_previous",
        "type": "Flags8",
        "ref": "buttons_entity"
      },
      { "field": "unknown_padding", "type": "Word", "comment": "garbage?" },
      { "field": "stand_counter", "type": "UnsignedDword" },
      {
        "field": "jump_height_multiplier",
        "type": "Float",
        "comment": "entitydb.jump gets multiplied by this value"
      },
      { "field": "price", "type": "Dword" },
      { "field": "owner_uid", "type": "EntityUID" },
      { "field": "last_owner_uid", "type": "EntityUID" },
      { "field": "animation_func", "type": "DataPointer" },
      { "field": "idle_counter", "type": "UnsignedDword" },
      { "field": "standing_on_uid", "type": "EntityUID" },
      { "field": "velocityx", "type": "Float" },
      { "field": "velocityy", "type": "Float" },
      { "field": "holding_uid", "type": "EntityUID" },
      { "field": "state", "type": "UnsignedByte" },
      { "field": "last_state", "type": "UnsignedByte" },
      { "field": "move_state", "type": "UnsignedByte" },
      { "field": "health", "type": "UnsignedByte" },
      { "field": "stun_timer", "type": "UnsignedWord" },
      { "field": "stun_state", "type": "UnsignedWord" },
      {
        "field": "lock_input_timer",
        "type": "UnsignedWord",
        "comment": "Related to taking damage, also drops you from ladder/rope, can't be set while on the ground unless you'r on a mount"
      },
      { "field": "wet_effect_timer", "type": "UnsignedWord" },
      { "field": "poison_tick_timer", "type": "Word" },
      { "field": "onfire_effect_timer", "type": "UnsignedByte" },
      {
        "field": "exit_invincibility_timer",
        "type": "UnsignedByte",
        "comment": "when exiting a door or a pipe, ..."
      },
      {
        "field": "invincibility_frames_timer",
        "type": "UnsignedByte",
        "comment": "blinks the entity"
      },
      { "field": "frozen_timer", "type": "UnsignedByte" },
      { "field": "unknown_damage_counter_a", "type": "UnsignedByte" },
      { "field": "unknown_damage_counter_b", "type": "UnsignedByte" },
      {
        "field": "i120a",
        "type": "UnsignedByte",
        "comment": "timer, damage related"
      },
      { "field": "i120b", "type": "UnsignedByte", "comment": "timer" },
      { "field": "i120c", "type": "UnsignedByte", "comment": "timer" },
      { "field": "i120d", "type": "UnsignedByte" },
      { "field": "b124", "type": "UnsignedByte" },
      { "field": "falling_timer", "type": "UnsignedByte" },
      {
        "field": "b126",
        "type": "UnsignedByte",
        "comment": "timer, after layer change?"
      },
      { "field": "b127", "type": "UnsignedByte" }
    ],
    "PowerupCapable": [
      {
        "vftablefunctions": {
          "93": {
            "name": "on_blood_collision",
            "params": "",
            "return": "",
            "comment": "only triggers when player has kapala"
          },
          "94": {
            "name": "unknown_v94",
            "params": "",
            "return": "",
            "comment": "some post damage related? triggers for some monsters that don't die after one hit"
          }
        }
      },
      {
        "field": "powerups",
        "type": "Map",
        "comment": "std::map<uint32_t, Entity*>"
      }
    ],
    "Monster": [
      {
        "vftablefunctions": {
          "95": {
            "name": "increase_killcount",
            "params": "",
            "return": "",
            "comment": "increases state.kills_npc, is not called for normal monsters but they all have the same function"
          },
          "96": {
            "name": "on_aggro",
            "params": "uint8_t, bool",
            "return": "",
            "comment": "updates state.quests in case of npc"
          },
          "97": {
            "name": "unknown_v97",
            "params": "",
            "return": "",
            "comment": "can't trigger it"
          },
          "98": {
            "name": "on_shop_entered",
            "params": "",
            "return": "",
            "comment": ""
          },
          "99": {
            "name": "attack_logic_related",
            "params": "",
            "return": "",
            "comment": [
              "shopkeeper will walk towards you (doesn't work for Yang, even though he has the same virtual)",
              "if disabled some monster will stop moving (like bats, jiangshi) some wont attack (crabman), shopkeeper can still kick you but won't fire hes weapon"
            ]
          },
          "100": {
            "name": "update_target",
            "params": "Entity*",
            "return": "bool"
          }
        }
      },
      { "field": "chased_target_uid", "type": "EntityUID" },
      { "field": "target_selection_timer", "type": "UnsignedDword" }
    ],
    "Player": [
      { "field": "inventory_ptr", "type": "PlayerInventoryPointer" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "linked_companion_child", "type": "EntityUID" },
      { "field": "linked_companion_parent", "type": "EntityUID" },
      { "field": "ai_func", "type": "Ai_func" },
      { "field": "input_ptr", "type": "PlayerSlotPointer" },
      { "field": "basecamp_button", "type": "EntityPointer" },
      { "field": "i168", "type": "Dword" },
      { "field": "i16c", "type": "Dword" },
      { "field": "y_pos?", "type": "Float" },
      { "field": "jump_lock_timer", "type": "UnsignedByte", "comment": "Increases when jump button is held, set to 0 when not held. Set to max value upon a jump. Unless this is at 0, a jump will only occur if the jump button was not held on the previous frame. "},
      {
        "field": "coyote_timer",
        "type": "Byte",
        "comment": "can jump while airborne if greater than 0"
      },
      { "field": "hired_hand_name_index", "type": "UnsignedByte" },
      { "field": "swim_timer", "type": "UnsignedByte", "comment": "45 frame delay between jumps when holding jump button in water." },
      {
        "field": "timer_since_last_jump",
        "type": "UnsignedByte",
        "comment": "something different happens before or after 6"
      },
      {
        "field": "can_use",
        "type": "Flags8",
        "flags": {
          "1": "is overlaying something or is attached to something or who the hell knowns sometimes",
          "2": "changing layer",
          "3": "unknown, stays on when switching on",
          "4": "unknown, stays on when switching on",
          "5": "unknown, stays on when switching on",
          "6": "unknown, stays on when switching on",
          "7": "unknown, stays on when switching on",
          "8": "unknown, stays on when switching on"
        },
        "comment": "is compared with bit numbers, so probably flags"
      }
    ],
    "PlayerInventoryPointer": [
      { "field": "inventory", "type": "PlayerInventory" }
    ],
    "PlayerInventory": [
      { "field": "money", "type": "UnsignedDword" },
      { "field": "bombs", "type": "UnsignedByte" },
      { "field": "ropes", "type": "UnsignedByte" },
      {
        "field": "poison_tick_timer",
        "type": "Word",
        "comment": "Used in level transition to transfer to new player entity"
      },
      {
        "field": "cursed",
        "type": "Bool",
        "comment": "Used in level transition to transfer to new player entity"
      },
      {
        "field": "elixir_buff",
        "type": "Bool",
        "comment": "Used in level transition to transfer to new player entity"
      },
      { "field": "health", "type": "UnsignedByte" },
      {
        "field": "kapala_blood_amount",
        "type": "UnsignedByte",
        "comment": "Used in level transition to transfer to new player entity"
      },
      {
        "field": "time_of_death",
        "type": "UnsignedDword",
        "comment": "is set to state.time_total when player dies"
      },
      { "field": "held_item", "type": "EntityDBID" },
      { "field": "held_item_metadata", "type": "Word" },
      { "field": "unknown5c", "type": "UnsignedByte", "comment": "padding?" },
      { "field": "player_slot", "type": "Byte" },
      { "field": "mount_type", "type": "EntityDBID" },
      { "field": "mount_metadata", "type": "Word" },
      { "field": "unknown_mount_ralated", "type": "Word" },
      {
        "field": "collected_money",
        "type": "TruncatedEntityDBIDArray",
        "comment": "512 slots in total"
      },
      {
        "field": "-",
        "type": "Skip",
        "offset": 2008,
        "comment": "the remaining 502 slots"
      },
      {
        "field": "collected_money_values",
        "type": "TruncatedUnsignedDwordArray",
        "comment": "512 slots in total"
      },
      {
        "field": "-",
        "type": "Skip",
        "offset": 2008,
        "comment": "the remaining 502 slots"
      },
      {
        "field": "collected_money_count",
        "type": "UnsignedDword",
        "comment": "the amount of entries in the collected_money arrays"
      },
      {
        "field": "killed_enemies",
        "type": "TruncatedEntityDBIDArray",
        "comment": "256 slots in total"
      },
      {
        "field": "-",
        "type": "Skip",
        "offset": 984,
        "comment": "the remaining 246 slots"
      },
      { "field": "kills_level", "type": "UnsignedDword" },
      { "field": "kills_total", "type": "UnsignedDword" },
      { "field": "companion1_held_item_metadata", "type": "Word" },
      { "field": "companion2_held_item_metadata", "type": "Word" },
      { "field": "companion3_held_item_metadata", "type": "Word" },
      { "field": "companion4_held_item_metadata", "type": "Word" },
      { "field": "companion5_held_item_metadata", "type": "Word" },
      { "field": "companion6_held_item_metadata", "type": "Word" },
      { "field": "companion7_held_item_metadata", "type": "Word" },
      { "field": "companion8_held_item_metadata", "type": "Word" },
      { "field": "companion1_poison_tick_timer", "type": "Word" },
      { "field": "companion2_poison_tick_timer", "type": "Word" },
      { "field": "companion3_poison_tick_timer", "type": "Word" },
      { "field": "companion4_poison_tick_timer", "type": "Word" },
      { "field": "companion5_poison_tick_timer", "type": "Word" },
      { "field": "companion6_poison_tick_timer", "type": "Word" },
      { "field": "companion7_poison_tick_timer", "type": "Word" },
      { "field": "companion8_poison_tick_timer", "type": "Word" },
      { "field": "companion1", "type": "EntityDBID" },
      { "field": "companion2", "type": "EntityDBID" },
      { "field": "companion3", "type": "EntityDBID" },
      { "field": "companion4", "type": "EntityDBID" },
      { "field": "companion5", "type": "EntityDBID" },
      { "field": "companion6", "type": "EntityDBID" },
      { "field": "companion7", "type": "EntityDBID" },
      { "field": "companion8", "type": "EntityDBID" },
      { "field": "companion1_held_item", "type": "EntityDBID" },
      { "field": "companion2_held_item", "type": "EntityDBID" },
      { "field": "companion3_held_item", "type": "EntityDBID" },
      { "field": "companion4_held_item", "type": "EntityDBID" },
      { "field": "companion5_held_item", "type": "EntityDBID" },
      { "field": "companion6_held_item", "type": "EntityDBID" },
      { "field": "companion7_held_item", "type": "EntityDBID" },
      { "field": "companion8_held_item", "type": "EntityDBID" },
      { "field": "companion1_trust", "type": "UnsignedByte" },
      { "field": "companion2_trust", "type": "UnsignedByte" },
      { "field": "companion3_trust", "type": "UnsignedByte" },
      { "field": "companion4_trust", "type": "UnsignedByte" },
      { "field": "companion5_trust", "type": "UnsignedByte" },
      { "field": "companion6_trust", "type": "UnsignedByte" },
      { "field": "companion7_trust", "type": "UnsignedByte" },
      { "field": "companion8_trust", "type": "UnsignedByte" },
      { "field": "companion_count", "type": "UnsignedByte" },
      {
        "field": "companion1_health",
        "type": "UnsignedByte",
        "comment": "only when exiting the level"
      },
      { "field": "companion2_health", "type": "UnsignedByte" },
      { "field": "companion3_health", "type": "UnsignedByte" },
      { "field": "companion4_health", "type": "UnsignedByte" },
      { "field": "companion5_health", "type": "UnsignedByte" },
      { "field": "companion6_health", "type": "UnsignedByte" },
      { "field": "companion7_health", "type": "UnsignedByte" },
      { "field": "companion8_health", "type": "UnsignedByte" },
      { "field": "companion1_cursed", "type": "Bool" },
      { "field": "companion2_cursed", "type": "Bool" },
      { "field": "companion3_cursed", "type": "Bool" },
      { "field": "companion4_cursed", "type": "Bool" },
      { "field": "companion5_cursed", "type": "Bool" },
      { "field": "companion6_cursed", "type": "Bool" },
      { "field": "companion7_cursed", "type": "Bool" },
      { "field": "companion8_cursed", "type": "Bool" },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Byte" },
      { "field": "padding3", "type": "Byte" },
      {
        "field": "acquired_powerups",
        "type": "AquiredPowerups",
        "comment": "assigned during level transition, so they can be applied to the newly created player entity in the next level"
      },
      { "field": "collected_money_total", "type": "UnsignedDword" }
    ],
    "AquiredPowerups": [
      { "field": "slot_1", "type": "EntityDBID" },
      { "field": "slot_2", "type": "EntityDBID" },
      { "field": "slot_3", "type": "EntityDBID" },
      { "field": "slot_4", "type": "EntityDBID" },
      { "field": "slot_5", "type": "EntityDBID" },
      { "field": "slot_6", "type": "EntityDBID" },
      { "field": "slot_7", "type": "EntityDBID" },
      { "field": "slot_8", "type": "EntityDBID" },
      { "field": "slot_9", "type": "EntityDBID" },
      { "field": "slot_10", "type": "EntityDBID" },
      { "field": "slot_11", "type": "EntityDBID" },
      { "field": "slot_12", "type": "EntityDBID" },
      { "field": "slot_13", "type": "EntityDBID" },
      { "field": "slot_14", "type": "EntityDBID" },
      { "field": "slot_15", "type": "EntityDBID" },
      { "field": "slot_16", "type": "EntityDBID" },
      { "field": "slot_17", "type": "EntityDBID" },
      { "field": "slot_18", "type": "EntityDBID" },
      { "field": "slot_19", "type": "EntityDBID" },
      { "field": "slot_20", "type": "EntityDBID" },
      { "field": "slot_21", "type": "EntityDBID" },
      { "field": "slot_22", "type": "EntityDBID" },
      { "field": "slot_23", "type": "EntityDBID" },
      { "field": "slot_24", "type": "EntityDBID" },
      { "field": "slot_25", "type": "EntityDBID" },
      { "field": "slot_26", "type": "EntityDBID" },
      { "field": "slot_27", "type": "EntityDBID" },
      { "field": "slot_28", "type": "EntityDBID" },
      { "field": "slot_29", "type": "EntityDBID" },
      { "field": "slot_30", "type": "EntityDBID" }
    ],
    "TruncatedEntityDBIDArray": [
      { "field": "slot_1", "type": "EntityDBID" },
      { "field": "slot_2", "type": "EntityDBID" },
      { "field": "slot_3", "type": "EntityDBID" },
      { "field": "slot_4", "type": "EntityDBID" },
      { "field": "slot_5", "type": "EntityDBID" },
      { "field": "slot_6", "type": "EntityDBID" },
      { "field": "slot_7", "type": "EntityDBID" },
      { "field": "slot_8", "type": "EntityDBID" },
      { "field": "slot_9", "type": "EntityDBID" },
      { "field": "slot_10", "type": "EntityDBID" }
    ],
    "TruncatedUnsignedDwordArray": [
      { "field": "slot_1", "type": "UnsignedDword" },
      { "field": "slot_2", "type": "UnsignedDword" },
      { "field": "slot_3", "type": "UnsignedDword" },
      { "field": "slot_4", "type": "UnsignedDword" },
      { "field": "slot_5", "type": "UnsignedDword" },
      { "field": "slot_6", "type": "UnsignedDword" },
      { "field": "slot_7", "type": "UnsignedDword" },
      { "field": "slot_8", "type": "UnsignedDword" },
      { "field": "slot_9", "type": "UnsignedDword" },
      { "field": "slot_10", "type": "UnsignedDword" }
    ],
    "Map": [
      { "field": "items", "type": "MapBucket" },
      { "field": "size", "type": "UnsignedQword" }
    ],
    "MapBucket": [
      { "field": "unknown1", "type": "MapBucket1" },
      { "field": "unknown2", "type": "MapBucket1" },
      { "field": "unknown3", "type": "MapBucket1" },
      {
        "field": "unknown4",
        "type": "Bool",
        "comment": "if both bools are set true the bucket is marked as deleted"
      },
      { "field": "unknown5", "type": "Bool" },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Byte" },
      { "field": "padding3?", "type": "Dword" },
      { "field": "key", "type": "Dword", "comment": "type obviously may vary" },
      {
        "field": "value",
        "type": "Dword",
        "comment": "type obviously may vary, at the end there is always Qword with small number"
      }
    ],
    "MapBucket1": [
      { "field": "unknown1", "type": "MapBucket2" },
      { "field": "unknown2", "type": "MapBucket2" },
      { "field": "unknown3", "type": "MapBucket2" },
      {
        "field": "unknown4",
        "type": "Bool",
        "comment": "if both bools are set true the bucket is marked as deleted"
      },
      { "field": "unknown5", "type": "Bool" },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Byte" },
      { "field": "padding3?", "type": "Dword" },
      { "field": "key", "type": "Dword", "comment": "type obviously may vary" },
      {
        "field": "value",
        "type": "Dword",
        "comment": "type obviously may vary"
      }
    ],
    "MapBucket2": [
      { "field": "unknown1", "type": "DataPointer" },
      { "field": "unknown2", "type": "DataPointer" },
      { "field": "unknown3", "type": "DataPointer" },
      {
        "field": "unknown4",
        "type": "Bool",
        "comment": "if both bools are set true the bucket is marked as deleted"
      },
      { "field": "unknown5", "type": "Bool" },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Byte" },
      { "field": "padding3?", "type": "Dword" },
      { "field": "key", "type": "Dword", "comment": "type obviously may vary" },
      {
        "field": "value",
        "type": "Dword",
        "comment": "type obviously may vary"
      }
    ],
    "UnorderedMap": [
      { "field": "max_load_factor", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedDword" },
      {
        "field": "end",
        "type": "DataPointer",
        "comment": "value is address that represents a terminal for Nodes"
      },
      {
        "field": "size",
        "type": "UnsignedQword",
        "comment": "number of elements in the map"
      },
      {
        "field": "first_bucket_ptr",
        "type": "UnorderedMapBucketPointer",
        "comment": "points to Bucket[]"
      },
      {
        "field": "end_of_buckets",
        "type": "DataPointer",
        "comment": "this is the address after the last bucket, not the last bucket"
      },
      {
        "field": "unknown4",
        "type": "DataPointer",
        "comment": "this is always the same as end of buckets above under observation"
      },
      {
        "field": "mask",
        "type": "UnsignedQword",
        "comment": "&'d with hashed key to find bucket"
      },
      {
        "field": "bucket_size",
        "type": "UnsignedQword",
        "comment": "number of buckets"
      }
    ],
    "UnorderedMapBucketPointer": [
      // If the bucket is empty it'll point to UnorderedMap::end
      {
        "field": "first",
        "type": "UnorderedMapRecordPointer",
        "comment": "Points to first element in linked list"
      },
      {
        "field": "last",
        "type": "UnorderedMapRecordPointer",
        "comment": "Points to last element in linked list"
      }
    ],
    "UnorderedMapRecordPointer": [
      // next/prev point to things even when they're the only record in the bucket so you
      // need to compare to the addresses from the Bucket to know if you're done iterating
      // through the bucket. Following the linked list will traverse all buckets. If a Record
      // is the first or last record in the entiry map the value will be UnorderedMap::end
      {
        "field": "next",
        "type": "DataPointer",
        "comment": "Also an UnorderedMapRecordPointer but will infinite recurse; just view the memory"
      },
      {
        "field": "prev",
        "type": "DataPointer",
        "comment": "Also an UnorderedMapRecordPointer but will infinite recurse; just view the memory"
      },
      {
        "field": "key",
        "type": "UnsignedDword",
        "comment": "Key from the map, obviously type dependent (UnsignedDword just for visualization purposes in plugin)"
      },
      {
        "field": "value",
        "type": "UnsignedDword",
        "comment": "Value from the map, obviously type dependent (UnsignedDword just for visualization purposes in plugin)"
      }
    ],
    "StdVectorPointerParticleEmitterInfo": [
      {
        "field": "vector",
        "type": "StdVector",
        "vectortype": "ParticleEmitterInfoPointer"
      }
    ],
    "StdVectorPointerIllumination": [
      {
        "field": "vector",
        "type": "StdVector",
        "vectortype": "IlluminationPointer"
      },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "UnsignedDword" }
    ],
    "TextureDB": [
      { "field": "id", "type": "UnsignedQword" },
      { "field": "name", "type": "ConstCharPointerPointer" },
      { "field": "width", "type": "UnsignedDword" },
      { "field": "height", "type": "UnsignedDword" },
      { "field": "num_tiles_width", "type": "UnsignedDword" },
      { "field": "num_tiles_height", "type": "UnsignedDword" },
      { "field": "offset_x_weird_math", "type": "Float" },
      { "field": "offset_y_weird_math", "type": "Float" },
      { "field": "tile_width_fraction", "type": "Float" },
      { "field": "tile_height_fraction", "type": "Float" },
      { "field": "tile_width_minus_one_fraction", "type": "Float" },
      { "field": "tile_height_minus_one_fraction", "type": "Float" },
      { "field": "one_over_width", "type": "Float" },
      { "field": "one_over_height", "type": "Float" }
    ],
    "Color": [
      { "field": "red", "type": "Float" },
      { "field": "green", "type": "Float" },
      { "field": "blue", "type": "Float" },
      { "field": "alpha", "type": "Float" }
    ],
    "Vector": [
      { "field": "heap", "type": "DataPointer" },
      { "field": "begin", "type": "DataPointer" },
      { "field": "size", "type": "UnsignedDword" },
      { "field": "count", "type": "UnsignedDword" }
    ],
    "StdVector": [
      { "field": "begin", "type": "DataPointer" },
      { "field": "end", "type": "DataPointer" },
      { "field": "end_capacity", "type": "DataPointer" }
    ],
    "LayerPointer": [
      { "field": "is_back_layer", "type": "Bool" },
      { "field": "-", "type": "Skip", "offset": 7, "comment": "skip padding" },
      { "field": "all_entities", "type": "EntityList" },
      {
        "field": "unknown_entities1",
        "type": "EntityList",
        "comment": "char + fx + mons + item + logical + mount + activefloor + BG (excluding BG_SHOP, BG_LEVEL_*)"
      },
      { "field": "unknown1", "type": "MysteryLayerPointer1" },
      { "field": "entities_by_mask", "type": "Map" },

      { "field": "entities_by_unknown", "type": "EntityList" },
      {
        "field": "-",
        "type": "Skip",
        "offset": 15504,
        "comment": "647*EntityList (minus on above)"
      },

      {
        "field": "-",
        "type": "Skip",
        "offset": 46968,
        "comment": "unknown, maybe more of the array above?"
      },

      {
        "field": "unknown_map/set",
        "type": "Map",
        "comment": "some movable and liquids and something else maybe?"
      },
      { "field": "grid_entities_begin", "type": "Qword" },
      {
        "field": "-",
        "type": "Skip",
        "offset": 86680,
        "comment": "grid_entities 126*86*8 minus the one above"
      },
      { "field": "entities_overlaping_grid_begin", "type": "Qword" },
      {
        "field": "-",
        "type": "Skip",
        "offset": 260056,
        "comment": "126*86*EntityList (minus the Qword above)"
      },
      { "field": "unknown_entities2", "type": "EntityList" },
      { "field": "entities_by_draw_depth_0", "type": "EntityList" },
      {
        "field": "-",
        "type": "Skip",
        "offset": 1272,
        "comment": "entities_by_draw_depth 53 * EntityList (minus one above)"
      },
      {
        "field": "unknown_entities3",
        "type": "EntityList",
        "comment": "debris, explosions, laserbeams etc. ?"
      },
      {
        "field": "unknown_entities4",
        "type": "EntityList",
        "comment": "explosions, laserbeams, BG_LEVEL_*_SOOT ? only for short time while there are spawned?"
      },

      {
        "field": "unknown3",
        "type": "StdVector",
        "vectortype": "EntityPointer"
      },
      { "field": "unknown6", "type": "MysteryLayerPointer1" },
      { "field": "expired_entities", "type": "EntityList" },
      { "field": "is_layer_loading", "type": "Bool" },
      { "field": "unknown14", "type": "Bool" },
      { "field": "unknown15", "type": "UnsignedByte" },
      { "field": "unknown16", "type": "UnsignedByte" },
      { "field": "unknown17", "type": "UnsignedDword" },
      { "field": "unknown18", "type": "UnsignedDword" },
      { "field": "unknown19", "type": "UnsignedDword" },
      {
        "field": "entity_items_begin",
        "type": "DataPointer",
        "comment": "begin of the memory that holds the items of entities"
      },
      { "field": "unknown21", "type": "DataPointer" },
      { "field": "unknown22", "type": "DataPointer" },
      { "field": "unknown23", "type": "Bool" },
      {
        "field": "layer_freeze?",
        "type": "Bool",
        "comment": "locking mechanism?"
      },
      { "field": "unknown25", "type": "UnsignedByte" },
      { "field": "unknown26", "type": "UnsignedByte" },
      { "field": "unknown27", "type": "UnsignedDword" },
      { "field": "unknown28", "type": "UnsignedQword" },
      { "field": "unknown29", "type": "UnsignedQword" },
      { "field": "unknown30", "type": "UnsignedQword" },
      { "field": "unknown31", "type": "UnsignedQword" },
      { "field": "unknown32", "type": "UnsignedQword" },
      { "field": "unknown33", "type": "UnsignedDword" },
      { "field": "unknown34", "type": "UnsignedDword" },
      { "field": "unknown35", "type": "DataPointer" },
      { "field": "unknown36", "type": "DataPointer" },
      { "field": "unknown37", "type": "DataPointer" },
      { "field": "unknown38", "type": "Bool" },
      { "field": "unknown39", "type": "Bool" },
      { "field": "unknown40", "type": "UnsignedByte" },
      { "field": "unknown41", "type": "UnsignedByte" },
      { "field": "unknown42", "type": "UnsignedDword" },
      { "field": "unknown43", "type": "UnsignedQword" },
      { "field": "unknown44", "type": "UnsignedQword" },
      { "field": "unknown45", "type": "UnsignedQword" },
      {
        "field": "unknown46",
        "type": "UnsignedQword",
        "comment": "next layer below"
      }
    ],
    "EntityList": [
      {
        "field": "entities",
        "type": "EntityListPointer",
        "comment": "Entity**"
      },
      {
        "field": "udis",
        "type": "EntityUIDsListPointer",
        "comment": "int32_t*"
      },
      { "field": "capacity", "type": "UnsignedDword" },
      { "field": "size", "type": "UnsignedDword" }
    ],
    "MysteryLayerPointer1": [
      {
        "field": "unknown1",
        "type": "DataPointer",
        "comment": "points to 4 EntityList?"
      },
      { "field": "unknown2a", "type": "UnsignedByte" },
      { "field": "unknown2b", "type": "UnsignedByte" },
      {
        "field": "unknown2c",
        "type": "UnsignedByte",
        "comment": "padding probably"
      },
      {
        "field": "unknown2d",
        "type": "UnsignedByte",
        "comment": "padding probably"
      },
      {
        "field": "unknown3",
        "type": "UnsignedDword",
        "comment": "padding probably"
      },
      { "field": "unknown4", "type": "UnsignedQword" },
      { "field": "unknown5", "type": "UnsignedQword" }
    ],
    "EntityListPointer": [
      { "field": "entity_1", "type": "EntityPointer" },
      { "field": "entity_2", "type": "EntityPointer" },
      { "field": "entity_3", "type": "EntityPointer" },
      { "field": "entity_4", "type": "EntityPointer" },
      { "field": "entity_5", "type": "EntityPointer" },
      { "field": "entity_6", "type": "EntityPointer" },
      { "field": "entity_7", "type": "EntityPointer" },
      { "field": "entity_8", "type": "EntityPointer" },
      { "field": "entity_9", "type": "EntityPointer" },
      { "field": "entity_10", "type": "EntityPointer" }
    ],
    "EntityUIDsListPointer": [
      { "field": "entity_uid_1", "type": "EntityUID" },
      { "field": "entity_uid_2", "type": "EntityUID" },
      { "field": "entity_uid_3", "type": "EntityUID" },
      { "field": "entity_uid_4", "type": "EntityUID" },
      { "field": "entity_uid_5", "type": "EntityUID" },
      { "field": "entity_uid_6", "type": "EntityUID" },
      { "field": "entity_uid_7", "type": "EntityUID" },
      { "field": "entity_uid_8", "type": "EntityUID" },
      { "field": "entity_uid_9", "type": "EntityUID" },
      { "field": "entity_uid_10", "type": "EntityUID" }
    ],
    "StateItemsPointer": [
      { "field": "flag_player_index", "type": "UnsignedByte", "comment": "player who currently holds the flag and controls the camera" },
      { "field": "unknown_player2", "type": "Bool" },
      { "field": "unknown_player3", "type": "Bool" },
      { "field": "unknown_player4", "type": "Bool" },
      { "field": "padding?", "type": "Dword" },
      { "field": "player1", "type": "EntityPointer" },
      { "field": "player2", "type": "EntityPointer" },
      { "field": "player3", "type": "EntityPointer" },
      { "field": "player4", "type": "EntityPointer" },
      { "field": "player1_inventory", "type": "PlayerInventory" },
      { "field": "player2_inventory", "type": "PlayerInventory" },
      { "field": "player3_inventory", "type": "PlayerInventory" },
      { "field": "player4_inventory", "type": "PlayerInventory" },
      { "field": "select_player1_slot", "type": "SelectPlayerSlot" },
      { "field": "select_player2_slot", "type": "SelectPlayerSlot" },
      { "field": "select_player3_slot", "type": "SelectPlayerSlot" },
      { "field": "select_player4_slot", "type": "SelectPlayerSlot" },
      { "field": "saved_pet1", "type": "EntityDBID" },
      { "field": "saved_pet2", "type": "EntityDBID" },
      { "field": "saved_pet3", "type": "EntityDBID" },
      { "field": "saved_pet4", "type": "EntityDBID" },
      { "field": "is_pet_cursed1", "type": "Bool" },
      { "field": "is_pet_cursed2", "type": "Bool" },
      { "field": "is_pet_cursed3", "type": "Bool" },
      { "field": "is_pet_cursed4", "type": "Bool" },
      { "field": "is_pet_poisoned1", "type": "Bool" },
      { "field": "is_pet_poisoned2", "type": "Bool" },
      { "field": "is_pet_poisoned3", "type": "Bool" },
      { "field": "is_pet_poisoned4", "type": "Bool" },
      { "field": "saved_pets_count", "type": "UnsignedByte" },
      { "field": "player_count", "type": "UnsignedByte" },
      { "field": "unknown9", "type": "UnsignedByte" },
      { "field": "unknown10", "type": "UnsignedByte" },
      { "field": "unknown11", "type": "UnsignedDword" },
      { "field": "unknown12", "type": "UnsignedDword" },
      { "field": "unknown13", "type": "UnsignedDword" }
    ],
    "SelectPlayerSlot": [
      { "field": "activated", "type": "Bool" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      { "field": "character", "type": "EntityDBID" },
      { "field": "texture_id", "type": "TextureDBID" }
    ],
    "LightParams": [
      { "field": "red", "type": "Float" },
      { "field": "green", "type": "Float" },
      { "field": "blue", "type": "Float" },
      { "field": "size", "type": "Float" }
    ],
    "IlluminationPointer": [
      { "field": "light1", "type": "LightParams" },
      { "field": "light2", "type": "LightParams" },
      { "field": "light3", "type": "LightParams" },
      {
        "field": "light4",
        "type": "LightParams",
        "comment": "It's rendered on objects around, not as an actual bright spot"
      },
      { "field": "brightness", "type": "Float" },
      { "field": "brightness_multiplier", "type": "Float" },
      { "field": "light_pos_x", "type": "Float" },
      { "field": "light_pos_y", "type": "Float" },
      { "field": "offset_x", "type": "Float" },
      { "field": "offset_y", "type": "Float" },
      {
        "field": "distortion",
        "type": "Float",
        "comment": "1 = circular, <1 = vertical ellipse ; >1 = horizontal ellipse"
      },
      { "field": "entity_uid", "type": "EntityUID" },
      { "field": "timer", "type": "UnsignedDword" },
      {
        "field": "flags",
        "type": "Flags8",
        "flags": {
          "1": "Disable light1",
          "2": "Enable light2",
          "3": "Enable light3",
          "4": "Enable light4",
          "5": "",
          "6": "",
          "7": "Modulate brightness_multiplier",
          "8": ""
        }
      },
      {
        "field": "type_flags",
        "type": "Flags8",
        "flags": {
          "1": "Follow camera",
          "2": "Follow entity",
          "3": "Static, Rectangle, Full brightness",
          "4": "unused",
          "5": "unused",
          "6": "unused",
          "7": "unused",
          "8": "unused"
        },
        "comment": "only one can be chosen, Rectangle always uses light1, even when it's disabled in flags"
      },
      { "field": "layer", "type": "UnsignedByte" },
      { "field": "Enabled", "type": "Bool" }
    ],
    "Rect": [
      { "field": "offsetx", "type": "Float" },
      { "field": "offsety", "type": "Float" },
      { "field": "hitboxx", "type": "Float" },
      { "field": "hitboxy", "type": "Float" }
    ],
    "Arrowtrap": [
      {
        "vftablefunctions": {
          "40": {
            "name": "spawn_arrow",
            "params": "float x, float y",
            "return": "Entity*",
            "comment": "nothing fancy, all the flags and velocities are done by the logical trigger i believe"
          }
        }
      },
      { "field": "arrow_shot", "type": "Bool" }
    ],
    "Container": [{ "field": "inside", "type": "EntityDBID" }],
    "Gun": [
      { "field": "cooldown", "type": "UnsignedByte" },
      {
        "field": "shots",
        "type": "UnsignedByte",
        "comment": "used only for webgun"
      },
      {
        "field": "shots2",
        "type": "UnsignedByte",
        "comment": "used only for clonegun"
      },
      { "field": "unused", "type": "UnsignedByte" },
      {
        "field": "in_chamber",
        "type": "EntityUID",
        "comment": "only for webgun"
      }
    ],
    "CrushTrap": [
      { "field": "dirx", "type": "Float" },
      { "field": "diry", "type": "Float" },
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "counts from 30 to 0 when detecting player, then moves, when stops moving counts from 60 to 0 before it can be triggered again"
      },
      {
        "field": "bounce_back_timer",
        "type": "UnsignedByte",
        "comment": "counts from 7 to 0 when it hits the wall and moves away from the wall, then moves back and count's from 255 until it hits the wall again, if needed it will start the counter again for another bounce"
      }
    ],
    "Altar": [
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "counts from 0 to 20 then 0, then 1 then 0 and sacrifice happens"
      },
      {
        "field": "unknown",
        "type": "Bool",
        "comment": "goes true/false when body is landing on it, when it stops moving it increments timer on true"
      }
    ],
    "Mattock": [{ "field": "remaining", "type": "UnsignedByte" }],
    "Backpack": [
      {
        "vftablefunctions": {
          "93": {
            "name": "93",
            "params": "",
            "return": ""
          },
          "94": {
            "name": "94",
            "params": "",
            "return": ""
          },
          "95": {
            "name": "95",
            "params": "",
            "return": ""
          },
          "96": {
            "name": "on_putting_on",
            "params": "Entity* who",
            "return": ""
          },
          "97": {
            "name": "on_putting_off",
            "params": "Entity* who",
            "return": ""
          },
          "98": {
            "name": "is_active",
            "params": "",
            "return": "bool"
          },
          "99": {
            "name": "trigger_explosion",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "explosion_trigger", "type": "Bool" },
      {
        "field": "explosion_timer",
        "type": "UnsignedByte",
        "comment": "counts from 0 to 30"
      },
      { "field": "unused1", "type": "UnsignedWord" },
      { "field": "unused2", "type": "UnsignedDword" }
    ],
    "Jetpack": [
      {
        "field": "flame_on",
        "type": "Bool",
        "comment": "Can be used as is_on"
      },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" },
      {
        "field": "fly_counter",
        "type": "UnsignedDword",
        "comment": "it's per level, not per jetpack, it also adds at when it explodes"
      },
      { "field": "fuel", "type": "UnsignedWord" }
    ],
    "TeleporterBackpack": [
      {
        "field": "teleport_number",
        "type": "UnsignedWord"
      }
    ],
    "Hoverpack": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "is_on", "type": "Bool" }
    ],
    "Bomb": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "scale_hor",
        "type": "Float",
        "comment": "1.25 = default regular bomb ; 1.875 = default giant bomb ; > 1.25 generates ENT_TYPE_FX_POWEREDEXPLOSION"
      },
      { "field": "scale_ver", "type": "Float" },
      {
        "field": "is_big_bomb",
        "type": "Bool",
        "comment": "is bomb from powerpack"
      }
    ],
    "Olmec": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "target_uid", "type": "EntityUID" },
      { "field": "attack_phase", "type": "UnsignedByte" },
      { "field": "attack_timer", "type": "UnsignedByte" },
      { "field": "ai_timer", "type": "UnsignedByte" },
      { "field": "move_direction", "type": "Byte" },
      { "field": "jump_timer", "type": "UnsignedByte" },
      { "field": "phase1_amount_of_bomb_salvos", "type": "UnsignedByte" },
      {
        "field": "attack_flags",
        "type": "Flags8",
        "flags": {
          "1": "Hasn't Stomped (Phase 2, set when spawning UFOs, cleared when stomping first time)",
          "2": "Has Broken Layer (Phase 1, cleared when floaters broken, set when breaking the first layer)",
          "3": "",
          "4": "",
          "5": "",
          "6": "",
          "7": "",
          "8": ""
        }
      }
    ],
    "OlmecFloater": [
      { "field": "both_floaters_intact", "type": "Bool" },
      { "field": "on_breaking", "type": "Bool" }
    ],
    "Cape": [
      {
        "vftablefunctions": {
          "100": {
            "name": "100",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "floating_down", "type": "Bool" },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" },
      {
        "field": "floating_count",
        "type": "UnsignedDword",
        "comment": "it's per level, not per cape"
      }
    ],
    "YellowCape": [{ "field": "sound", "type": "SoundMeta" }],
    "VladsCape": [{ "field": "can_double_jump", "type": "Bool" }],
    "KapalaPowerup": [{ "field": "amount_of_blood", "type": "UnsignedByte" }],
    "Ghost": [
      {
        "field": "split_timer",
        "type": "UnsignedWord",
        "comment": "for SMALL_HAPPY this is also the sequence timer of its various states"
      },
      { "field": "wobble_timer", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "velocity_multiplier", "type": "Float" },
      {
        "field": "pace_timer",
        "type": "UnsignedWord",
        "comment": "Controls ghost pacing when all players are dead."
      },
      {
        "field": "ghost_behaviour",
        "type": "State8",
        "states": {
          "0": "standard, chasing",
          "1": "SMALL_SURPRISED",
          "2": "SMALL_SAD",
          "3": "SMALL_HAPPY",
          "4": "will move up and down, moving slightly more in one direction"
        },
        "comment": "everything above 4 seems to be the same as 4"
      },
      { "field": "blown_by_player", "type": "Bool" },
      { "field": "happy_dancing_clockwise", "type": "Bool", "comment": "Randomly set at the start of happy's dance phase to determine the dance rotation direction." },
      { "field": "unknown8", "type": "UnsignedByte" },
      { "field": "unknown9", "type": "UnsignedByte" },
      { "field": "unknown10", "type": "UnsignedByte" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "linked_ghost", "type": "EntityPointer" },
      {
        "field": "target_dist_visibility_factor",
        "type": "Float",
        "comment": "Value from 0.5 to 1, based on the distance to the ghost's target, multiplied by the target_layer_visibility_factor to set the transparency and illumination of the ghost."
      },
      {
        "field": "target_layer_visibility_factor",
        "type": "Float",
        "comment": "Value from 0 to 1, based on how long the ghost has been in the same layer as its target, multiplied by the target_dist_visibility_factor to set the transparency and illumination of the ghost."
      },
      { "field": "sound", "type": "SoundMeta" }
    ],
    "Monkey": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "jump_timer", "type": "UnsignedByte" },
      { "field": "on_vine", "type": "Bool" }
    ],
    "SoundMeta": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "play", "params": "", "return": "", "comment": "sets music_on to true" },
          "1": { "name": "fade_out", "params": "uint8_t", "return": "", "comment": "unsure, parameter sets the unknown49" },
          "2": { "name": "get_name?", "params": "void* buttor, uint32_t size", "return": "", "comment": "" },
          "3": { "name": "~SoundMeta", "params": "", "return": "" },
          "4": { "name": "update", "params": "", "return": "", "comment": "disabling this function does not progresses the track, does not stop it at the end level etc." },
          "5": { "name": "v4", "params": "", "return": "bool" }
        }
      },
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      {
        "field": "sound_info",
        "type": "SoundInfoPointer",
        "comment": "param to FMOD::Studio::EventInstance::SetParameterByID (this ptr + 0x30)"
      },
      {
        "field": "fmod_param_id?",
        "type": "UnsignedQword",
        "comment": "param to FMOD::Studio::EventInstance::SetParameterByID"
      },
      { "field": "left_channel", "type": "AudioChannelParams" },
      { "field": "right_channel", "type": "AudioChannelParams" },
      {
        "field": "music_start_over",
        "type": "Bool",
        "comment": "when false, current track starts from the beginning"
      },
      { "field": "play_ending_sequence", "type": "Bool" },
      { "field": "music_on", "type": "Bool" },
      { "field": "unknown51", "type": "UnsignedByte" },
      { "field": "garbage1", "type": "UnsignedDword" },
      { "field": "destroy_sound", "type": "Bool", "comment": "only backgound music?" }
    ],
    "GoldMonkey": [
      { "field": "jump_timer", "type": "UnsignedByte" },
      { "field": "padding", "type": "UnsignedByte" },
      { "field": "poop_timer", "type": "UnsignedWord" },
      { "field": "poop_count", "type": "UnsignedByte" }
    ],
    "Mole": [
      { "field": "burrowing_sound", "type": "SoundMeta" },
      { "field": "nonburrowing_sound", "type": "SoundMeta" },
      { "field": "burrowing_particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "burrow_dir_x", "type": "Float" },
      { "field": "burrow_dir_y", "type": "Float" },
      {
        "field": "burrowing_in_uid",
        "type": "EntityUID",
        "comment": "stores the last uid as well"
      },
      { "field": "counter_burrowing", "type": "UnsignedByte" },
      { "field": "counter_nonburrowing", "type": "UnsignedByte" },
      { "field": "countdown_for_appearing", "type": "UnsignedByte" },
      { "field": "unknown_two_while_burrowed", "type": "UnsignedByte" },
      {
        "field": "state",
        "type": "State8",
        "states": {
          "0": "non_burrowed",
          "2": "burrowed",
          "3": "state_change"
        }
      }
    ],
    "Spider": [
      {
        "vftablefunctions": {
          "101": {
            "name": "spawn_offset_related",
            "params": "",
            "return": "",
            "comment": "disabling this function makes the spider spawn in wierd position"
          },
          "102": {
            "name": "v_102",
            "params": "",
            "return": "float",
            "comment": "for spider returns 0.02, for giant spider 0.025, game does some calculations with this when triggered by player"
          },
          "103": {
            "name": "on_ceiling",
            "params": "",
            "return": "bool"
          }
        }
      },
      { "field": "ceiling_pos_x", "type": "Float" },
      { "field": "ceiling_pos_y", "type": "Float" },
      {
        "field": "jump_timer",
        "type": "UnsignedByte",
        "comment": "for the giant spider, some times he shot web instead of jumping"
      },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" },
      {
        "field": "trigger_distance",
        "type": "Float",
        "comment": "only in the x coord"
      }
    ],
    "HangSpider": [
      { "field": "dangle_jump_timer", "type": "Word" },
      { "field": "padding", "type": "UnsignedWord" },
      { "field": "ceiling_pos_x", "type": "Float" },
      { "field": "ceiling_pos_y", "type": "Float" }
    ],
    "RoomOwner": [
      {
        "vftablefunctions": {
          "101": {
            "name": "on_criminal_act_committed",
            "params": "uint8_t",
            "return": "",
            "comment": ["shows the appropriate message (vandal, cheater, ...)"]
          },
          "102": {
            "name": "should_attack_on_sight",
            "params": "",
            "return": "bool",
            "comment": [
              "for shopkeepers: checks state.shoppie_aggro_levels, for waddler checks the state.quest_flags",
              "if you return false, but you have attacked them before, they will be patrolling but won't attack you on sight"
            ]
          },
          "103": {
            "name": "is_angry_flag_set",
            "params": "",
            "return": "bool",
            "comment": [
              "checks state.level_flags 10-16 depending on the monster"
            ]
          },
          "104": {
            "name": "set_initial_attack_delay",
            "params": "",
            "return": "",
            "comment": [
              "for shopkeeper: sets shopkeeper.shotgun_attack_delay to 6",
              "triggers only at the start when aggroed",
              "does nothing for yang, waddler, tun"
            ]
          },
          "105": {
            "name": "on_spawn_weapon",
            "params": "",
            "return": "Entity*",
            "comment": [
              "return the weapon entity that will be used to attack the player"
            ]
          },
          "106": {
            "name": "weapon_type",
            "params": "",
            "return": "uint32_t",
            "comment": [
              "the entity type of the weapon that will be spawned to attack the player"
            ]
          },
          "107": {
            "name": "can_attack",
            "params": "",
            "return": "bool",
            "comment": "parameter is some struct that contains the target"
          },
          "108": {
            "name": "unknown_v108",
            "params": "",
            "return": "",
            "comment": [
              "for shopkeepers, it loops over (some of) the items for sale"
            ]
          },
          "109": {
            "name": "on_death_treasure_drop",
            "params": "",
            "return": "",
            "comment": ["coins and if you're lucky, gold bar from shopkeeper"]
          }
        }
      },
      { "field": "room_index", "type": "UnsignedDword" },
      {
        "field": "climb_y_direction",
        "type": "Float",
        "comment": "when on a rope or ladder"
      },
      { "field": "ai_state", "type": "UnsignedByte" },
      { "field": "patrol_timer", "type": "UnsignedByte" },
      {
        "field": "lose_interest_timer",
        "type": "UnsignedByte",
        "comment": "delay in-between attacks"
      },
      { "field": "unknown_timer1", "type": "UnsignedByte" },
      {
        "field": "countdown_timer",
        "type": "UnsignedWord",
        "comment": "counts down to 0 when a value is forced, can't shot when the timer is running"
      },
      { "field": "unknown1", "type": "UnsignedByte" },
      {
        "field": "is_patrolling",
        "type": "Bool",
        "comment": "used to make shopkeeper walk, for other can sometimes be used as is_active"
      },
      {
        "field": "aggro",
        "type": "Bool",
        "comment": "setting this makes him angry, if it's shopkeeper you get 2 agrro points"
      },
      {
        "field": "was_hurt",
        "type": "Bool",
        "comment": "also is set true if you set aggro to true, get's trigger even when whiping"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "Dword" }
    ],
    "Shopkeeper": [
      {
        "field": "name",
        "type": "State8",
        "states": {
          "0": "Ali",
          "1": "Bob",
          "2": "Cosmo",
          "3": "Darwin",
          "4": "Ear",
          "5": "Earl",
          "6": "Frank",
          "7": "Garth",
          "8": "Hakim",
          "9": "Iggy",
          "10": "Ivan",
          "11": "Jimbo",
          "12": "Kinni",
          "13": "Lou",
          "14": "Micky",
          "15": "Nacho",
          "16": "Omar",
          "17": "Pancho",
          "18": "Quincy",
          "19": "Ron",
          "20": "Sparky",
          "21": "Tarn",
          "22": "Ulf",
          "23": "Vern",
          "24": "Wang",
          "25": "Willy",
          "26": "Xander",
          "27": "Yoshi",
          "28": "Ziggy"
          //29 - "No"
          //30 - 31 - game crash
          //32 - 36 - "Yes"
          //37 - 43 - game crash
          //not gonna check futher, if someone want's to, go on
        },
        "comment": "anything above 28 is just random string, can crash the game"
      },
      {
        "field": "shotgun_attack_delay",
        "type": "UnsignedByte",
        "comment": "can't shot when the timer is running"
      },
      {
        "field": "have_key",
        "type": "Bool",
        "comment": "will drop key after stun/kill"
      },
      {
        "field": "shop_owner",
        "type": "Bool"
      },
      {
        "field": "is_ear",
        "type": "Bool",
        "comment": "sometimes set to true"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" }
    ],
    "Ghist": [
      {
        "vftablefunctions": {
          "101": {
            "name": "on_body_destroyed",
            "params": "",
            "return": "",
            "comment": "clears level_flags [Angry ghist shopkeeper] and other stuff, then calls ->destroy()"
          }
        }
      },
      { "field": "body_uid", "type": "EntityUID" },
      {
        "field": "idle_timer",
        "type": "UnsignedByte",
        "comment": "will not chase after you while the timer is running"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedWord" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "movement_related_timer_1", "type": "UnsignedByte" },
      { "field": "movement_related_timer_2", "type": "UnsignedByte" },
      { "field": "transparency", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" },
      {
        "field": "fadeout",
        "type": "UnsignedWord",
        "comment": "when 0, ghist fades out/dies"
      }
    ],
    "Yang": [
      { "field": "turkeys_in_den", "type": "Map" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "unknown5", "type": "UnsignedByte" },
      {
        "field": "first_message_shown",
        "type": "Bool",
        "comment": "I'm looking for turkeys, wanna help?"
      },
      {
        "field": "quest_incomplete",
        "type": "Bool",
        "comment": "gets set to false when the quest is over (Yang dead or second turkey delivered)"
      },
      {
        "field": "special_message_shown",
        "type": "Bool",
        "comment": "tusk palace, black market or one way door message shown"
      },
      { "field": "padding4", "type": "UnsignedByte" },
      { "field": "padding5", "type": "UnsignedByte" },
      { "field": "padding6", "type": "UnsignedByte" }
    ],
    "Pet": [
      { "field": "fx_button", "type": "EntityPointer" },
      { "field": "petting_by_uid", "type": "EntityUID" },
      {
        "field": "yell_counter",
        "type": "Word",
        "comment": "counts up to 400 (6.6 sec); when 0 the pet yells out"
      },
      { "field": "unknown1", "type": "UnsignedWord" },
      { "field": "unknown2", "type": "UnsignedWord" },
      {
        "field": "func_timer",
        "type": "Word",
        "comment": "used when free running in the camp"
      },
      {
        "field": "active_state",
        "type": "Byte",
        "comment": "-1 = sitting and yelling; 0 = either running, dead or picked up"
      },
      {
        "field": "petted_counter",
        "type": "UnsignedByte",
        "comment": "number of times petted in the camp"
      }
    ],
    "WalkingMonster": [
      {
        "vftablefunctions": {
          "101": {
            "name": "can_aggro",
            "params": "",
            "return": "bool",
            "comment": "Aggro or calm, if forced to return 0 it will not aggro unless you overlap his hitbox. For caveman this is called when he wakes up (from sleep or stun)"
          },
          "102": {
            "name": "v_102",
            "params": "some_struct?",
            "return": "parameter is some struct, that it changes and returns it (looks like 3x bool at the start and more)"
          }
        }
      },
      { "field": "chatting_to_uid", "type": "EntityUID" },
      {
        "field": "walk_pause_timer",
        "type": "Word",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      {
        "field": "cooldown_timer",
        "type": "Word",
        "comment": "used fo chatting with other monsters, attack cooldowns etc."
      }
    ],
    "Caveman": [
      { "field": "wake_up_timer", "type": "UnsignedByte" },
      {
        "field": "can_pick_up_timer",
        "type": "UnsignedByte",
        "comment": "0 = can pick something up; when holding forced to 179; after tripping and regaining consciousness counts down to 0"
      },
      {
        "field": "unknown_aggro_timer",
        "type": "Word",
        "comment": "1 sec timer at the start of getting aggro"
      },
      {
        "field": "aggro_timer",
        "type": "Word",
        "comment": "keeps resetting when angry and a player is nearby"
      }
    ],
    "Mosquito": [
      { "field": "direction_x", "type": "Float" },
      { "field": "direction_y", "type": "Float" },
      {
        "field": "stuck_rel_pos_x",
        "type": "Float",
        "comment": "position relative to the block the mosquito is stuck in"
      },
      { "field": "stuck_rel_pos_y", "type": "Float" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "timer", "type": "UnsignedDword" }
    ],
    "Mantrap": [
      {
        "field": "walk_pause_timer",
        "type": "Dword",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      {
        "field": "eaten_uid",
        "type": "EntityUID",
        "comment": "the uid of the entity the mantrap has eaten, in case it can break out, like a shopkeeper"
      }
    ],
    "Skeleton": [
      {
        "field": "explosion_timer",
        "type": "Word",
        "comment": "-1 never explodes"
      }
    ],
    "Scarab": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "emitted_light",
        "type": "IlluminationPointer",
        "comment": "set color in sat_vign_0, be sure to make the aperture large enough"
      },
      {
        "field": "timer",
        "type": "UnsignedWord",
        "comment": "how long to stay in that position"
      }
    ],
    "Tun": [
      { "field": "arrows_left", "type": "UnsignedByte" },
      {
        "field": "reload_timer",
        "type": "UnsignedByte",
        "comment": "when 0, a new arrow is loaded into the bow; resets when she finds an arrow on the ground"
      },
      {
        "field": "challenge_fee_paid",
        "type": "Bool",
        "comment": "affect only the speech bubble"
      },
      {
        "field": "congrats_challenge",
        "type": "Bool",
        "comment": "congrats message shown after exiting a challenge"
      },
      {
        "field": "murdered",
        "type": "Bool",
        "comment": "when she disappears in a cloud of smoke"
      },
      { "field": "shop_entered", "type": "Bool" },
      {
        "field": "tiamat_encounter",
        "type": "Bool",
        "comment": "if set to false, greets you with 'you've done well to reach this place'"
      },
      { "field": "padding", "type": "UnsignedByte" }
    ],
    "Imp": [
      { "field": "carrying_uid", "type": "EntityUID" },
      { "field": "patrol_y_level", "type": "Float" }
    ],
    "Lavamander": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      {
        "field": "shoot_lava_timer",
        "type": "UnsignedByte",
        "comment": "when this timer reaches zero, it appears on the surface/shoots lava; triggers on player proximity"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      {
        "field": "jump_pause_timer",
        "type": "UnsignedWord",
        "comment": "jump pause when cool; runs continuously when hot"
      },
      { "field": "lava_detection_timer?", "type": "UnsignedByte" },
      { "field": "is_hot", "type": "Bool" },
      {
        "field": "player_detect_state",
        "type": "State8",
        "states": {
          "0": "didnt_saw_player",
          "1": "saw_player",
          "2": "spited_lava"
        },
        "comment": "used so he won't spit imminently after seeing the player"
      },
      { "field": "padding2", "type": "UnsignedByte" }
    ],
    "Firebug": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "fire_timer",
        "type": "UnsignedWord",
        "comment": "when it reaches zero, it shoots fire"
      },
      { "field": "going_up", "type": "Bool" },
      { "field": "detached_from_chain", "type": "Bool" }
    ],
    "FirebugUnchained": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "max_flight_height",
        "type": "Float",
        "comment": "increments when flying up, until it reaches 1.0, then bug flies down"
      },
      {
        "field": "ai_timer",
        "type": "UnsignedDword",
        "comment": "when reaches zero, decides whether to walk or fly or pause; doesn't reset when flying"
      },
      {
        "field": "walking_timer",
        "type": "UnsignedDword",
        "comment": "counts down only when walking; can't start flying unless this is at zero"
      }
    ],
    "Robot": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "emitted_light_explosion", "type": "IlluminationPointer" },
	  { "field": "unknown1", "type": "UnsignedByte"}
    ],
    "Quillback": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      {
        "field": "unknown_state",
        "type": "Flags8",
        "comment": "accessed as byte and word, so, flags?, changed mostly when breaking floors"
      },
	  {
	    "field": "hit_wall_direction",
		"type": "byte",
		"comment": "set when in apply_movement to 1 when colliding with a hard wall to the left, -1 if to the right, 0 if no collision."
	  },
      { "field": "unknown_timer", "type": "UnsignedByte" },
      { "field": "seen_player", "type": "Bool" }
    ],
    "HornedLizard": [
      { "field": "eaten_uid", "type": "EntityUID" },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedByte",
        "comment": "alternates between walking and pausing when timer reaches zero"
      },
      {
        "field": "attack_cooldown_timer",
        "type": "UnsignedByte",
        "comment": "won't attack until timer reaches zero"
      },
      { "field": "blood_squirt_timer", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" }
    ],
    "Leprechaun": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "hump_timer", "type": "UnsignedByte" },
      { "field": "target_in_sight_timer", "type": "UnsignedByte" },
      {
        "field": "gold",
        "type": "UnsignedWord",
        "comment": "ammoung of gold he picked up, will be droped on death"
      },
      { "field": "timer_after_humping", "type": "UnsignedByte" },
      { "field": "unknown", "type": "UnsignedByte" }
    ],
    "Crocman": [{ "field": "teleport_cooldown", "type": "UnsignedByte" }],
    "Mummy": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing when timer reaches zero"
      }
    ],
    "WitchDoctor": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "skull_regen_timer",
        "type": "UnsignedWord",
        "comment": "when zero, regenerates a new floating skull"
      }
    ],
    "WitchDoctorSkull": [
      { "field": "witch_doctor_uid", "type": "EntityUID" },
      { "field": "unknown1", "type": "UnsignedDword" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "rotation_angle", "type": "Float" }
    ],
    "NPC": [
      {
        "vftablefunctions": {
          "101": {
            "name": "on_criminal_act_committed",
            "params": "",
            "return": ""
          },
          "102": {
            "name": "should_attack_on_sight",
            "params": "",
            "return": "bool"
          },
          "103": {
            "name": "v_103",
            "params": "some_struct?",
            "return": "",
            "comment": "take some struct as parameter, sets the first qword to some constant (also returns it?), the first thing in the struct is acutally two floats"
          },
          "104": {
            "name": "on_interaction",
            "params": "",
            "return": "",
            "comment": "does the quests stuff etc."
          },
          "105": {
            "name": "on_spawn_weapon",
            "params": "",
            "return": "Entity*"
          },
          "106": {
            "name": "weapon_type",
            "params": "",
            "return": "ENT_TYPE"
          },
          "107": {
            "name": "can_attack",
            "params": "some_struct?",
            "return": "bool",
            "comment": "parameter is some struct that contains the target"
          },
          "108": {
            "name": "on_criminal_act_committed2",
            "params": "",
            "return": "",
            "comment": "calls the on_criminal_act_committed except for bodyguard which calls the should_attack_on_sight and turns off any speechbubble"
          }
        }
      },
      { "field": "climb_direction", "type": "Float" },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown_timer", "type": "UnsignedByte" },
      { "field": "target_in_sight_timer", "type": "UnsignedByte" },
      { "field": "ai_state", "type": "UnsignedByte" },
      {
        "field": "aggro",
        "type": "Bool",
        "comment": "for bodyguard and shopkeeperclone it spawn a weapon as well"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedDword" }
    ],
    "VanHorsing": [
      {
        "field": "show_text",
        "type": "Bool",
        "comment": "if set to true, he will say 'i've been hunting this fiend a long time!' when on screen"
      },
      {
        "field": "special_message_shown",
        "type": "Bool",
        "comment": "one way door message has been shown"
      }
    ],
    "ForestSister": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing when timer reaches zero"
      }
    ],
    "CavemanShopkeeper": [
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "timer3", "type": "UnsignedByte" },
      { "field": "timer4", "type": "UnsignedByte" },
      { "field": "tripping", "type": "Bool" },
      { "field": "timer5", "type": "Word" },
      { "field": "padding", "type": "Word" },
      { "field": "shop_entered", "type": "Bool" }
    ],
    "Vampire": [
      {
        "field": "jump_trigger_distance_x",
        "type": "Float",
        "comment": "the distance from the player it starts jumping"
      },
      { "field": "jump_trigger_distance_y", "type": "Float" },
      { "field": "sleep_pos_x", "type": "Float" },
      { "field": "sleep_pos_y", "type": "Float" },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing when timer reaches zero"
      },
      { "field": "padding", "type": "Dword" }
    ],
    "Vlad": [
      {
        "field": "teleport_cooldown",
        "type": "UnsignedByte",
        "comment": "triggers when Vlad teleports, when timer running he can't teleport and will stun when hit"
      },
      { "field": "aggro", "type": "Bool", "comment": "or sleeping" }
    ],
    "Waddler": [
      {
        "field": "player_detected",
        "type": "Bool",
        "comment": "to show the welcome message"
      },
      { "field": "on_the_ground", "type": "Bool" },
      {
        "field": "air_timer",
        "type": "UnsignedByte",
        "comment": "counts while in the air, jumping"
      }
    ],
    "Jiangshi": [
      { "field": "wait_timer", "type": "UnsignedByte" },
      {
        "field": "jump_counter",
        "type": "UnsignedByte",
        "comment": "only female aka assassin, when 0 will jump up into ceiling"
      },
      {
        "field": "on_ceiling",
        "type": "Bool",
        "comment": "only female aka assassin"
      }
    ],
    "Octopus": [
      {
        "field": "unknown1",
        "type": "UnsignedByte",
        "comment": "something to do with state?"
      }
    ],
    "Bodyguard": [
      {
        "field": "position_state",
        "type": "State8",
        "states": {
          "0": "none",
          "1": "Tusk dice shop",
          "2": "Entrence to pleasure palace",
          "3": "Basement entrance to pleasure palace"
        }
      },
      {
        "field": "message_shown",
        "type": "Bool",
        "comment": "entrence and basement entrence"
      }
    ],
    "Fish": [{ "field": "change_direction_timer", "type": "UnsignedDword" }],
    "GiantFish": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "change_direction_timer",
        "type": "UnsignedWord",
        "comment": "when bouncing into a wall, it changes direction too"
      },
      {
        "field": "lose_interest_timer",
        "type": "UnsignedWord",
        "comment": "delay in-between attacks"
      },
      {
        "field": "unknown_timer",
        "type": "UnsignedWord",
        "comment": "at 0 writes random value to unknown2, maybe unknown1 as well?"
      },
      { "field": "padding1", "type": "UnsignedWord" },
      { "field": "unknown1", "type": "Float" },
      {
        "field": "unknown2",
        "type": "Float",
        "comment": "increment value for unknown3?"
      },
      { "field": "unknown3", "type": "Float" }
    ],
    "Crabman": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing when timer reaches zero"
      },
      {
        "field": "invincibility_timer",
        "type": "UnsignedByte",
        "comment": "triggers after being attacked"
      },
      { "field": "poison_attack_timer", "type": "UnsignedByte" },
      { "field": "padding4", "type": "UnsignedByte" },
      { "field": "padding5", "type": "UnsignedByte" },
      { "field": "attacking_claw_uid", "type": "EntityUID" },
      { "field": "at_maximum_attack", "type": "Bool" }
    ],
    "Kingu": [
      {
        "field": "sound1",
        "type": "SoundMeta",
        "comment": "initialized when breaking the shell (sliding down sound maybe?)"
      },
      {
        "field": "sound2",
        "type": "SoundMeta",
        "comment": "Turning into stone sound"
      },
      {
        "field": "climb_direction_x",
        "type": "Float",
        "comment": "distance too?"
      },
      { "field": "climb_direction_y", "type": "Float" },
      { "field": "climb_pause_timer", "type": "UnsignedWord" },
      { "field": "shell_invincibility_timer", "type": "UnsignedByte" },
      { "field": "monster_spawn_timer", "type": "UnsignedByte" },
      {
        "field": "initial_shell_health",
        "type": "UnsignedByte",
        "comment": "excalibur wipes out immediately, bombs take off 11 points; when 0 vulnerable to whip"
      },
      { "field": "player_seen_by_kingu?", "type": "Bool" }
    ],
    "Anubis": [
      {
        "vftablefunctions": {
          "101": {
            "name": "set_next_attack_timer",
            "params": "",
            "return": "",
            "comment": "sets next_attack_timer based on the psychic_orbs_counter"
          },
          "102": {
            "name": "attack",
            "params": "",
            "return": ""
          },
          "103": {
            "name": "play_attack_sound",
            "params": "",
            "return": "",
            "comment": "also calls virtual 20"
          }
        }
      },
      { "field": "spawn_x", "type": "Float" },
      { "field": "spawn_y", "type": "Float" },
      { "field": "unknown1", "type": "Float" },
      {
        "field": "attack_proximity_y",
        "type": "Float",
        "comment": "how close you have to be to be attacked; set both to 0 for a pet anubis"
      },
      { "field": "attack_proximity_x", "type": "Float" },
      { "field": "ai_timer", "type": "UnsignedByte" },
      { "field": "next_attack_timer", "type": "UnsignedByte" },
      { "field": "psychic_orbs_counter", "type": "UnsignedByte" },
      { "field": "awake", "type": "Bool" }
    ],
    "Cobra": [
      {
        "field": "spit_timer",
        "type": "UnsignedDword",
        "comment": "alternates between counting to 100 and to 64"
      },
      {
        "field": "duplicate_move_state",
        "type": "Dword",
        "comment": "6 is put in movable.move_state as well as in here while spitting poison"
      }
    ],
    "CatMummy": [
      { "field": "ai_state", "type": "UnsignedByte" },
      { "field": "attack_timer", "type": "UnsignedByte" }
    ],
    "Sorceress": [
      { "field": "inbetween_attack_timer", "type": "UnsignedDword" },
      { "field": "airtime", "type": "Float", "comment": "why float?" },
      {
        "field": "halo_emitted_light",
        "type": "IlluminationPointer",
        "comment": "not the shot but the halo, try putting a color at 10"
      },
      { "field": "fx_entity", "type": "EntityPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "hover_timer?", "type": "UnsignedByte" }
    ],
    "MagmaMan": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      {
        "field": "jump_timer",
        "type": "UnsignedDword",
        "comment": "when 0 it jumps"
      },
      {
        "field": "alive_timer",
        "type": "UnsignedDword",
        "comment": "when 0, the magmaman disappears"
      }
    ],
    "Bee": [
      { "field": "can_rest", "type": "Bool" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedWord" },
      { "field": "padding3", "type": "UnsignedDword" },
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "fly_hang_timer",
        "type": "UnsignedWord",
        "comment": "alternates between hanging/sitting on the wall and flying every time it reaches zero"
      },
      { "field": "wobble_timer", "type": "UnsignedByte" },
      {
        "field": "targeting_timer?",
        "type": "UnsignedByte",
        "comment": "counts when bee takes off and hasn't spotted a target yet"
      },
      {
        "field": "start_walking_time",
        "type": "UnsignedByte",
        "comment": "When the fly_hang_timer gets to this value while in the standing state (move_state 9), the be will start walking."
      },
      {
        "field": "stop_walking_time",
        "type": "UnsignedByte",
        "comment": "When the fly_hang_timer gets to this value while in the standing state (move_state 9), the be will stop walking."
      },
      { "field": "padding4", "type": "UnsignedByte", "comment": "padding?" },
      {
        "field": "padding5",
        "type": "UnsignedByte",
        "comment": "padding? quite a lot of unused memory in this entity, maybe this is more the one type?"
      },
      {
        "field": "wobble_x",
        "type": "Float",
        "comment": "maybe the positional offset to make it look like it's buzzing"
      },
      { "field": "wobble_y", "type": "Float" }
    ],
    "Ammit": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "padding", "type": "UnsignedDword" },
      { "field": "particle_trail", "type": "ParticleEmitterInfoPointer" }
    ],
    "ApepHead": [
      { "field": "sound1", "type": "SoundMeta" },
      { "field": "sound2", "type": "SoundMeta" },
      { "field": "distance_traveled", "type": "Float" },
      { "field": "tail", "type": "EntityUID" },
      { "field": "fx_mouth_piece1", "type": "EntityUID" },
      { "field": "fx_mouth_piece2", "type": "EntityUID" }
    ],
    "ApepPart": [
      { "field": "y_pos", "type": "Float" },
      { "field": "sine_angle", "type": "Float" },
      {
        "field": "sync_timer",
        "type": "UnsignedByte",
        "comment": "or pause timer, used to sync the body parts moving up and down"
      },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Word" },
      { "field": "padding3", "type": "Dword" }
    ],
    "OsirisHead": [
      {
        "field": "right_hand_uid",
        "type": "EntityUID",
        "comment": "right from his perspective"
      },
      { "field": "left_hand_uid", "type": "EntityUID" },
      { "field": "moving_left", "type": "Bool" },
      { "field": "targeting_timer?", "type": "UnsignedByte" },
      { "field": "invincibility_timer", "type": "UnsignedByte" }
    ],
    "OsirisHand": [
      { "field": "attack_cooldown_timer", "type": "UnsignedByte" }
    ],
    "Alien": [
      {
        "field": "jump_timer",
        "type": "UnsignedWord",
        "comment": "when 0 it jumps"
      },
      { "field": "unknown1", "type": "UnsignedByte" },
      {
        "field": "unknown2",
        "type": "UnsignedByte",
        "comment": "seen timer here once maybe? it's accessed right as he jumps from the ufo"
      }
    ],
    "UFO": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "patrol_distance",
        "type": "Word",
        "comment": "pos = right, neg = left"
      },
      { "field": "attack_cooldown_timer", "type": "UnsignedByte" },
      {
        "field": "is_falling",
        "type": "Bool",
        "comment": "read only, manually setting this true has no effect"
      }
    ],
    "Lahamu": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "eyeball", "type": "EntityPointer" },
      { "field": "attack_cooldown_timer", "type": "UnsignedWord" },
      {
        "field": "unknown_proximity_related",
        "type": "Bool",
        "comment": "gets set to true when you get close to Lahamu"
      }
    ],
    "RenderInfoPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": {
            "name": "~RenderInfoPointer",
            "params": "",
            "return": ""
          }
        }
      },
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "Float" },
      { "field": "unknown5", "type": "UnsignedDword" },
      { "field": "unknown6", "type": "UnsignedDword" },
      { "field": "unknown7", "type": "UnsignedDword" },
      { "field": "unknown8", "type": "UnsignedDword" },
      { "field": "unknown9", "type": "UnsignedDword" },
      { "field": "x_dupe_1", "type": "Float" },
      { "field": "y_dupe_1", "type": "Float" },
      { "field": "unknown10", "type": "UnsignedDword" },
      { "field": "x_dupe2", "type": "Float" },
      { "field": "y_dupe2", "type": "Float" },
      { "field": "unknown11", "type": "UnsignedDword" },
      { "field": "unknown_timer1", "type": "UnsignedByte" },
      {
        "field": "unknown_timer2",
        "type": "UnsignedByte",
        "comment": "for some entities this stops when the entity is not on screen but the above one don't"
      },
      { "field": "unknown12c", "type": "Bool" },
      { "field": "unknown12d", "type": "Bool" },
      {
        "field": "stop_render",
        "type": "Bool",
        "comment": "stops all the rendering stuff"
      },
      { "field": "unknown13b", "type": "UnsignedByte" },
      { "field": "unknown13c", "type": "UnsignedByte" },
      { "field": "unknown13d", "type": "UnsignedByte" },
      { "field": "unknown14", "type": "UnsignedDword" },
      { "field": "unknown15_counter", "type": "UnsignedByte" },
      { "field": "unknown16_counter", "type": "UnsignedByte" },
      { "field": "unknown17", "type": "Bool" },
      { "field": "unknown18", "type": "Bool" },
      { "field": "unknown19", "type": "UnsignedDword" },
      {
        "field": "shader",
        "type": "UnsignedByte",
        "comment": "0 - 36, game crash at around 55"
      },
      { "field": "unknown20a", "type": "UnsignedByte" },
      { "field": "unknown20b", "type": "UnsignedByte" },
      { "field": "unknown20c", "type": "UnsignedByte" },
      {
        "field": "destination_bottom_left_x",
        "type": "Float",
        "comment": "in woorld coords"
      },
      { "field": "destination_bottom_left_y", "type": "Float" },
      { "field": "destination_bottom_left_unknown", "type": "Float" },
      { "field": "destination_bottom_right_x", "type": "Float" },
      { "field": "destination_bottom_right_y", "type": "Float" },
      { "field": "destination_bottom_right_unknown", "type": "Float" },
      { "field": "destination_top_right_x", "type": "Float" },
      { "field": "destination_top_right_y", "type": "Float" },
      { "field": "destination_top_right_unknown", "type": "Float" },
      { "field": "destination_top_left_x", "type": "Float" },
      { "field": "destination_top_left_y", "type": "Float" },
      { "field": "destination_top_left_unknown", "type": "Float" },
      {
        "field": "source_bottom_left_x",
        "type": "Float",
        "comment": "in sprite sheet coords (multiply by TextureDB.width and height for pixel coords)"
      },
      { "field": "source_bottom_left_y", "type": "Float" },
      { "field": "source_bottom_right_x", "type": "Float" },
      { "field": "source_bottom_right_y", "type": "Float" },
      { "field": "source_top_right_x", "type": "Float" },
      { "field": "source_top_right_y", "type": "Float" },
      { "field": "source_top_left_x", "type": "Float" },
      { "field": "source_top_left_y", "type": "Float" },
      { "field": "tilew", "type": "Float" },
      { "field": "tileh", "type": "Float" },
      { "field": "x_dupe3", "type": "Float" },
      { "field": "y_dupe3", "type": "Float" },
      {
        "field": "x_dupe4",
        "type": "Float",
        "comment": "this will be writen into x next refresh"
      },
      { "field": "y_dupe4", "type": "Float" },
      { "field": "angle1", "type": "Float" },
      { "field": "angle2", "type": "Float" },
      { "field": "angle_related", "type": "Float" },
      { "field": "animation_frame", "type": "UnsignedDword" },
      { "field": "unknown38", "type": "UnsignedDword" },
      { "field": "texture", "type": "TextureDBPointer" },
      { "field": "texture_name", "type": "ConstCharPointerPointer" },
      { "field": "unknown39", "type": "UnsignedQword" },
      { "field": "unknown40", "type": "UnsignedQword" },
      { "field": "unknown41", "type": "UnsignedQword" },
      { "field": "unknown42", "type": "UnsignedQword" },
      { "field": "unknown43", "type": "UnsignedQword" },
      { "field": "unknown44", "type": "UnsignedQword" },
      {
        "field": "render_as_non_liquid",
        "type": "Bool",
        "comment": "for liquids, forced to false, for non-liquids: sprite goes crazy when moving about"
      },
      { "field": "unknown47", "type": "UnsignedByte" },
      { "field": "unknown48", "type": "UnsignedByte" },
      { "field": "unknown49", "type": "UnsignedByte" },
      { "field": "unknown50", "type": "UnsignedDword" },
      {
        "field": "entity_offset",
        "type": "UnsignedQword",
        "comment": "the offset of the associated entity in memory, starting from the memory segment that State resides in"
      },
      { "field": "flip_horizontal", "type": "Bool", "comment": "facing left" },
      { "field": "unknown52", "type": "UnsignedByte" },
      { "field": "unknown53", "type": "UnsignedByte" },
      { "field": "unknown54", "type": "UnsignedByte" },
      { "field": "unknown55", "type": "UnsignedDword" },
      {
        "field": "darkness",
        "type": "Float",
        "comment": "0.0 = completely black ; 1.0 = normal (dark effect like when on fire)"
      },
      { "field": "unknown56", "type": "UnsignedDword" },
      { "field": "unknown57", "type": "UnsignedDword" },
      {
        "field": "unknown58",
        "type": "UnsignedDword",
        "comment": "end, next RenderInfo below"
      }
    ],
    "YetiQueen": [
      {
        "vftablefunctions": {
          "101": {
            "name": "v_101",
            "params": "",
            "return": "",
            "comment": "can't trigger"
          },
          "102": {
            "name": "attack_related",
            "params": "some_struct?",
            "return": "",
            "comment": "parameter is some struct, if disabled it doesn't do jump attack, but still does the protect head thing"
          },
          "103": {
            "name": "v_103",
            "params": "",
            "return": "",
            "comment": "return"
          },
          "104": {
            "name": "jump_related",
            "params": "",
            "return": "",
            "comment": "if disabled she squads but never makes the jump"
          },
          "105": {
            "name": "on_death",
            "params": "",
            "return": "",
            "comment": "spawns the drops"
          }
        }
      },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "unknown_timer", "type": "UnsignedByte" }
    ],
    "YetiKing": [
      {
        "vftablefunctions": {
          "101": {
            "name": "v_101",
            "params": "",
            "return": "",
            "comment": "can't trigger"
          },
          "102": {
            "name": "attack_related",
            "params": "some_struct?",
            "return": "",
            "comment": "parameter is some struct, if disabled it doesn't do the attack, but still does the protect head thing"
          },
          "103": {
            "name": "on_attack",
            "params": "",
            "return": "",
            "comment": "freezes stuff when attacks and spawns particles"
          },
          "104": {
            "name": "screem_related",
            "params": "",
            "return": "",
            "comment": "if disabled he opens the mount but never screams"
          },
          "105": {
            "name": "on_death",
            "params": "",
            "return": "",
            "comment": "spawns the drops"
          }
        }
      },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "unknown_timer", "type": "UnsignedByte" },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "particle_fog", "type": "ParticleEmitterInfoPointer" },
      { "field": "particle_dust", "type": "ParticleEmitterInfoPointer" },
      { "field": "particle_sparkles", "type": "ParticleEmitterInfoPointer" }
    ],
    "Lamassu": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "attack_effect_entity", "type": "EntityPointer" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      {
        "field": "flight_timer",
        "type": "UnsignedDword",
        "comment": "when 0 it starts flying; only counts down when it's walking"
      },
      {
        "field": "attack_timer",
        "type": "Dword",
        "comment": "greater than 0 = charging up; 0 = fire ; less than 0 = cooldown"
      },
      { "field": "attack_angle", "type": "Float" },
      {
        "field": "unknown_state",
        "type": "UnsignedByte",
        "comment": "bool: is flying when attacking?"
      }
    ],
    "Olmite": [
      { "field": "armore_on", "type": "Bool" },
      {
        "field": "in_stack",
        "type": "Bool",
        "comment": "disables the attack, stun, lock's looking left flag between stack"
      },
      {
        "field": "in_stack2",
        "type": "Bool",
        "comment": "is set to false couple frame after being detached from stack"
      },
      { "field": "padding1", "type": "Byte" },
      { "field": "on_top_uid", "type": "EntityUID" },
      {
        "field": "y_offset",
        "type": "Float",
        "comment": "same as y position when stacked"
      },
      {
        "field": "attack_cooldown_timer",
        "type": "UnsignedByte",
        "comment": "jump attacks can start when 0, used also by the bottom one in stack"
      },
      { "field": "unknown_countdown", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedWord" }
    ],
    "Tiamat": [
      {
        "field": "sound",
        "type": "SoundMeta",
        "comment": "Turning into stone sound"
      },
      { "field": "fx_tiamat_head_uid", "type": "EntityUID" },
      { "field": "fx_tiamat_arm_right1_uid", "type": "EntityUID" },
      { "field": "fx_tiamat_arm_right2_uid", "type": "EntityUID" },
      {
        "field": "invincibility_timer",
        "type": "UnsignedByte"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      {
        "field": "damage_timer",
        "type": "Word",
        "comment": "phase 1: 1 sec frowning (-60 to 0) ; phase 2: 1 sec yelling/repulsing (-60 to 0) ; phase 3: 5 secs of vulnerability (300 to 0)"
      },
      {
        "field": "attack_timer",
        "type": "UnsignedDword",
        "comment": "when 0, she attacks"
      },
      { "field": "unknown2", "type": "Float" },
      { "field": "tail_angle", "type": "Float" },
      {
        "field": "tail_radian",
        "type": "Float",
        "comment": "Counts from 0 to 2*pi, Used to calculate tail angle"
      },
      { "field": "tail_move_speed", "type": "Float" },
      { "field": "right_arm_angle", "type": "Float" }
    ],
    "GiantFrog": [
      { "field": "door_front_layer", "type": "EntityPointer" },
      { "field": "door_back_layer", "type": "EntityPointer" },
      { "field": "platform", "type": "EntityPointer" },
      { "field": "attack_timer", "type": "UnsignedWord" },
      {
        "field": "frogs_ejected_in_cycle",
        "type": "UnsignedByte",
        "comment": "ejects thee frogs in quick succession, then waits a longer time"
      },
      { "field": "invincibility_timer", "type": "UnsignedByte" },
      { "field": "mouth_close_timer", "type": "UnsignedByte" },
      {
        "field": "mouth_open_trigger",
        "type": "Bool",
        "comment": "opens the mouth and starts mouth_close_timer, used when detecting grub in the mouth area"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" }
    ],
    "Frog": [
      { "field": "grub_being_eaten_uid", "type": "EntityUID" },
      {
        "field": "jump_timer",
        "type": "UnsignedByte",
        "comment": "when 0 it jumps"
      },
      { "field": "pause", "type": "Bool", "comment": "not actually used?" },
      { "field": "padding", "type": "UnsignedWord" }
    ],
    "FireFrog": [{ "field": "sound", "type": "SoundMeta" }],
    "Grub": [
      {
        "field": "rotation_delta",
        "type": "Float",
        "comment": "is it? i seen it in the code compared as a bit with 1, but not sure when it happens"
      },
      { "field": "drop", "type": "Bool" },
      { "field": "rotation_direction", "type": "Bool", "comment": "Counter-clockwise if true" },
      {
        "field": "wall_collision_cooldown",
        "type": "UnsignedByte",
        "comment": "used when he touches floor/wall/ceiling"
      },
      { "field": "padding1", "type": "UnsignedByte" },
      {
        "field": "rotation_direction_timer",
        "type": "UnsignedWord",
        "comment": "switch between clockwise/counter-clockwise"
      },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedWord",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "turn_into_fly_timer", "type": "Word" },
      { "field": "padding2", "type": "UnsignedWord" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "sound", "type": "SoundMeta" }
    ],
    "Tadpole": [
      {
        "field": "acceleration_timer",
        "type": "UnsignedByte",
        "comment": "when 0, the tadpole gets some horizontal velocity"
      },
      { "field": "player_spotted", "type": "Bool" }
    ],
    "GiantFly": [
      { "field": "head_entity", "type": "EntityPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "sine_amplitude", "type": "Float" },
      { "field": "sine_frequency", "type": "Float" },
      {
        "field": "delta_y_angle",
        "type": "Float",
        "comment": "determines where in the sine wave we are (0 - 2 pi)"
      },
      { "field": "unknown7", "type": "Float" },
      { "field": "unknown8", "type": "Float" },
      { "field": "sine_counter", "type": "UnsignedByte" }
    ],
    "JumpDog": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedWord",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      {
        "field": "squish_timer",
        "type": "UnsignedWord",
        "comment": "squish after jumped on; don't put it too high, the game puts it at 60 frames / 1 sec"
      }
    ],
    "EggplantMinister": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "unknown1",
        "type": "UnsignedByte",
        "comment": "checks flag 0x2F of 64-bit{flags, more_flags}, maybe prevent from squishing when stomped while falling?"
      },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedByte",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "squish_timer", "type": "UnsignedWord" }
    ],
    "Yama": [
      {
        "field": "message_shown",
        "type": "Bool",
        "comment": "Every king and queen will someday lose their crown..."
      }
    ],
    "Hundun": [
      {
        "field": "applied_hor_velocity?",
        "type": "Float",
        "comment": "during flight"
      },
      { "field": "applied_ver_velocity?", "type": "Float" },
      { "field": "birdhead_entity_uid", "type": "EntityUID" },
      { "field": "snakehead_entity_uid", "type": "EntityUID" },
      { "field": "y_level", "type": "Float" },
      {
        "field": "bounce_timer",
        "type": "UnsignedWord",
        "comment": "functionality depends on state, determines when it can bounce again, also how long velocity is applied for bouncing"
      },
      { "field": "fireball_timer", "type": "UnsignedByte" },
      { "field": "birdhead_defeated", "type": "Bool" },
      { "field": "snakehead_defeated", "type": "Bool" },
      {
        "field": "hundun_flags",
        "type": "Flags8",
        "flags": {
          "1": "Will move to the left",
          "2": "Birdhead emerged",
          "3": "Snakehead emerged",
          "4": "Top level arena reached",
          "5": "Birdhead shot last (to alternate the heads shooting fireballs)",
          "6": "Unused",
          "7": "Unused",
          "8": "Unused"
        }
      }
    ],
    "HundunHead": [
      {
        "field": "attack_position_x",
        "type": "Float",
        "comment": "Posiotion where the head will move"
      },
      {
        "field": "attack_position_y",
        "type": "Float",
        "comment": "Posiotion where the head will move"
      },
      { "field": "egg_crack_effect_uid", "type": "EntityUID" },
      { "field": "targeted_player_uid", "type": "EntityUID" },
      {
        "field": "looking_for_target_timer",
        "type": "UnsignedWord",
        "comment": "also cooldown before attack"
      },
      { "field": "invincibility_timer", "type": "UnsignedByte" }
    ],
    "MegaJellyfish": [
      { "field": "flipper1", "type": "EntityPointer" },
      { "field": "flipper2", "type": "EntityPointer" },
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "orb_uid",
        "type": "EntityUID",
        "comment": "the closest orb, does not gets updated"
      },
      { "field": "tail_bg_uid", "type": "EntityUID" },
      { "field": "applied_velocity", "type": "Float" },
      {
        "field": "wagging_tail_counter",
        "type": "Float",
        "comment": "float counter to determine position of wagging tail (0 = right ; pi = left)"
      },
      {
        "field": "flipper_distance",
        "type": "UnsignedByte",
        "comment": "only applies to door-blocking one"
      },
      { "field": "velocity_application_timer", "type": "UnsignedByte" }
    ],
    "Scorpion": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      {
        "field": "jump_cooldown_timer",
        "type": "UnsignedDword",
        "comment": "only 10 frames"
      }
    ],
    "Hermitcrab": [
      { "field": "carried_entity_type", "type": "EntityDBID" },
      { "field": "carried_entity_uid", "type": "EntityUID" },
      {
        "field": "walk_spit_timer",
        "type": "UnsignedWord",
        "comment": "depending on movable.state either the countdown how many acid bubbles spat (3) or walking timer"
      },
      {
        "field": "is_active",
        "type": "Bool",
        "comment": "whether it is hidden behind the carried block or not, if true you can damage him"
      },
      {
        "field": "is_inactive",
        "type": "Bool",
        "comment": "must be something else, since we already have is_active (or vice versa), gets triggered about have a second after is_active, maybe something like, can attack"
      },
      {
        "field": "spawn_new_carried_item",
        "type": "Bool",
        "comment": "defaults to true, when toggled to false, a new carried item spawns"
      },
      {
        "field": "unknown",
        "type": "UnsignedByte",
        "comment": "sometimes i see 1 here, didn't get anything with breakpoint"
      }
    ],
    "Necromancer": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "red_skeleton_spawn_x", "type": "Float" },
      { "field": "red_skeleton_spawn_y", "type": "Float" },
      { "field": "resurrection_uid", "type": "EntityUID" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "resurrection_timer", "type": "UnsignedByte" }
    ],
    "ProtoShopkeeper": [
      { "field": "unknown1", "type": "UnsignedQword" },
      {
        "field": "movement_state",
        "type": "Flags8",
        "flags": {
          "1": "Headpulse/explosion related",
          "2": "Walking",
          "3": "Headpulse/explosion related",
          "4": "Crawling",
          "5": "",
          "6": "Headpulse/explosion related",
          "7": "",
          "8": ""
        }
      },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "blowup_related", "type": "UnsignedByte" },
      { "field": "animation_timer", "type": "UnsignedDword" },
      {
        "field": "walk_pause_explode_timer",
        "type": "UnsignedWord",
        "comment": "alternates between walking and pausing; when stunned: crawl timer;  after crawling: head pulse timer (pulse frequency dependend on timer)"
      },
      {
        "field": "walking_speed",
        "type": "UnsignedByte",
        "comment": "0 = slow; 4 = fast"
      },
      { "field": "padding7", "type": "UnsignedByte" },
      {
        "field": "unknown3",
        "type": "UnsignedDword",
        "comment": "counts down from 10 to 3 in the headpulse phase"
      }
    ],
    "Beg": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedDword",
        "comment": "alternates between walking and pausing when timer reaches zero"
      },
      { "field": "disappear_timer", "type": "UnsignedWord" }
    ],
    "Critter": [
      { "field": "last_picked_up_by_uid", "type": "EntityUID" },
      { "field": "holding_state", "type": "UnsignedByte" },
      { "field": "padding1", "type": "UnsignedByte" },
      { "field": "padding2", "type": "UnsignedByte" },
      { "field": "padding3", "type": "UnsignedByte" }
    ],
    "CritterBeetle": [
      {
        "field": "pause",
        "type": "Bool",
        "comment": "used when he's getting eaten"
      }
    ],
    "CritterCrab": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedByte",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "walking_left", "type": "Bool" },
      {
        "field": "unfriendly",
        "type": "Bool",
        "comment": "moves away from its target instead of towards it"
      }
    ],
    "CritterButterfly": [
      { "field": "unknown1a", "type": "Qword" },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "change_direction_timer", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "vertical_flight_direction", "type": "Byte" }
    ],
    "CritterLocust": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "jump_timer",
        "type": "UnsignedByte",
        "comment": "when 0 it jumps"
      },
      { "field": "unknown1", "type": "UnsignedByte" }
    ],
    "CritterSnail": [
      {
        "vftablefunctions": {
          "101": {
            "name": "get_speed",
            "params": "",
            "return": "float"
          }
        }
      },
      { "field": "x_direction", "type": "Float" },
      { "field": "y_direction", "type": "Float" },
      { "field": "pos_x", "type": "Float" },
      { "field": "pos_y", "type": "Float" },
      { "field": "rotation_center_x", "type": "Float" },
      { "field": "rotation_center_y", "type": "Float" },
      { "field": "rotation_angle", "type": "Float" },
      { "field": "rotation_speed", "type": "Float" }
    ],
    "CritterFish": [
      {
        "field": "swim_pause_timer",
        "type": "UnsignedByte",
        "comment": "alternates between swimming and pausing every time it reaches zero"
      },
      {
        "field": "player_in_proximity",
        "type": "Bool",
        "comment": "swims away fast when player detected"
      }
    ],
    "CritterPenguin": [
      {
        "field": "walk_pause_timer",
        "type": "UnsignedByte",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "padding", "type": "UnsignedByte" },
      { "field": "jump_timer", "type": "UnsignedWord" }
    ],
    "CritterFirefly": [
      { "field": "sine_amplitude", "type": "Float" },
      { "field": "sine_frequency", "type": "Float" },
      {
        "field": "sine_angle",
        "type": "Float",
        "comment": "determines where in the sine wave we are (0 - 2 pi)"
      },
      { "field": "unknown1", "type": "Float" },
      { "field": "unknown2", "type": "Float" },
      { "field": "change_direction_timer", "type": "UnsignedByte" },
      { "field": "sit_timer", "type": "UnsignedByte" },
      { "field": "sit_cooldown_timer", "type": "UnsignedByte" }
    ],
    "CritterDrone": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "applied_hor_momentum", "type": "Float" },
      { "field": "applied_ver_momentum", "type": "Float" },
      {
        "field": "unfriendly",
        "type": "Bool",
        "comment": "moves away from its target instead of towards it"
      },
      { "field": "move_timer", "type": "UnsignedByte" }
    ],
    "CritterSlime": [
      {
        "vftablefunctions": {
          "101": {
            "name": "get_speed",
            "params": "",
            "return": "float"
          }
        }
      },
      { "field": "x_direction", "type": "Float" },
      { "field": "y_direction", "type": "Float" },
      { "field": "pos_x", "type": "Float" },
      { "field": "pos_y", "type": "Float" },
      { "field": "rotation_center_x", "type": "Float" },
      { "field": "rotation_center_y", "type": "Float" },
      { "field": "rotation_angle", "type": "Float" },
      { "field": "rotation_speed", "type": "Float" },
      {
        "field": "walk_pause_timer",
        "type": "Word",
        "comment": "alternates between walking and pausing every time it reaches zero"
      }
    ],
    "ThemeInfoPointer": [
      {
        "field": "__vftable",
        "type": "VirtualFunctionTable",
        "functions": {
          "0": { "name": "~ThemeInfoPointer", "params": "", "return": "" },
          "1": { "name": "reset_theme_flags", "params": "", "return": "bool" },
          "2": {
            "name": "initialize_flags",
            "params": "",
            "return": "",
            "comment": [
              "dwelling,tidepool: unset levelgen.flags.flag12",
              "jungle,volcana.olmec,icecaves,neobab,cog,duat,abzu,tiamat,eggplant,hundun,basecamp,arena: nop",
              "temple: unset levelgen.flags.flag10 + calculate chance of grasshopper critter spawn",
              "sunken: unset levelgen.flags.flag9, 10, 17, 18 + if state.level == 1 -> unset flag 11",
              "cosmic: calls same virtual on its sub_theme"
            ]
          },
          "3": {
            "name": "initialize_levelgen",
            "params": "",
            "return": "",
            "comment": "does random calculations and calls function to determine the start room in most themes"
          },
          "4": {
            "name": "init_rooms",
            "params": "",
            "return": "",
            "comment": "most themes call the same function, some check whether they are in CO"
          },
          "5": { "name": "generate_path", "params": "", "return": "" },
          "6": {
            "name": "handle_level_specialities",
            "params": "",
            "return": "",
            "comment": [
              "dwelling: does stuff when level == 4 or udjat present",
              "jungle: when black market present",
              "volcana: when drill present",
              "touches the rooms and sometimes the meta info about the rooms"
            ]
          },
          "7": {
            "name": "insert_player_coffin_rooms",
            "params": "",
            "return": "",
            "comment": "can't trigger, dwelling (quillback) and abzu do something special (arena just returns)"
          },
          "8": {
            "name": "insert_7_3_dirk_coffin",
            "params": "",
            "return": "",
            "comment": "does something depending on levelgen.data.unknown7"
          },
          "9": {
            "name": "insert_idol_room",
            "params": "",
            "return": ""
          },
          "10": { "name": "insert_vault", "params": "", "return": "" },
          "11": { "name": "insert_coffin", "params": "", "return": "" },
          "12": {
            "name": "set_theme_specific_level_feeling",
            "params": "",
            "return": "",
            "comment": "metal clanking and air of oppression"
          },
          "13": {
            "name": "populate_level",
            "params": "",
            "return": "",
            "comment": "disable this and only the player is spawned in the level"
          },
          "14": { "name": "add_level_bordertiles", "params": "", "return": "" },
          "15": {
            "name": "post_process_level",
            "params": "",
            "return": "",
            "comment": [
              "volcana: checks if state.coffin_contents = cocovondiamonds -> chooses one of the four coffins in vlad's castle at random to put her in",
              "tidepool: spawns impostor lake, some door and a litwalltorch, ...",
              "neobab: assigns the correct animation_frame to all the ushabtis",
              "co, arena: forwards to the same virtual of the sub_theme",
              "abzu, tiamat: spawns impostor lake"
            ]
          },
          "16": {
            "name": "post_process_exitdoors_and_spawn_traps",
            "params": "",
            "return": "",
            "comment": [
              "quillback: adds butterflies and snails + configures the door to go to the correct theme/level",
              "olmec: same thing but crabs and grasshoppers",
              "temple: spawns COG door",
              "co, arena: forwards to the same virtual of the sub_theme",
              "other themes also do stuff, but nothing seemingly important"
            ]
          },
          "17": {
            "name": "post_process_entities",
            "params": "",
            "return": "",
            "comment": [
              "pleasure palace: applies correct texture to ladders and ladder platforms",
              "sunken city: randomly adds ENT_TYPE_DECORATION_SUNKEN_BRIDGE between entities (the slimy bridges)",
              "co: does nothing, so no slimy bridges in CO sunken city levels! (forgotten/bug?)"
            ]
          },
          "18": {
            "name": "populate_background",
            "params": "",
            "return": "",
            "comment": "adds the background, but also the compass indicator at the door"
          },
          "19": {
            "name": "populate_background_beautification",
            "params": "",
            "return": "",
            "comment": "adds random beautification to the background, e.g. the chalk drawings of the three people in dwelling"
          },
          "20": {
            "name": "populate_extra_lighting",
            "params": "",
            "return": "",
            "comment": "adds extra light where needed, e.g. in the udjat chest room, or the top layer of the black market: spawns ENT_TYPE_LOGICAL_ROOM_LIGHT"
          },
          "21": {
            "name": "populate_level_transition",
            "params": "",
            "return": ""
          },
          "22": {
            "name": "on_level_transition",
            "params": "",
            "return": "",
            "comment": [
              "unsets flag 1 (Reset) of state.quest_flags",
              "sets the correct state.screen (0xC)",
              "sets state.ingame to true, adjust fade values and starts loading"
            ]
          },
          "23": {
            "name": "populate_players",
            "params": "",
            "return": "",
            "comment": "spawns the player(s?) in the world, along with what they were holding"
          },
          "24": {
            "name": "handle_multiplayer",
            "params": "",
            "return": "",
            "comment": "when disabled, during multiplayer the camera is not focused; also responsible for spawning the leader flag; not looked at in detail"
          },
          "25": {
            "name": "level_file_to_load",
            "params": "",
            "return": "const char*",
            "comment": "the .lvl file to load (e.g. dwelling = dwellingarea.lvl except when level == 4 (cavebossarea.lvl))"
          },
          "26": {
            "name": "theme_id",
            "params": "",
            "return": "uint8_t",
            "comment": "for co: returns sub_theme->theme_id()"
          },
          "27": {
            "name": "theme_base_id",
            "params": "",
            "return": "uint8_t",
            "comment": [
              "whereas theme_id() returns a unique id for all ThemeInfo's, this function returns the id of the theme it logically belongs to",
              "e.g. theme_abzu->theme_base_id() = 5 (tide_pool) as opposed to theme_abzu->theme_id() = 13 (abzu)"
            ]
          },
          "28": {
            "name": "random_block_floorstyle",
            "params": "",
            "return": "uint32_t",
            "comment": [
              "all themes return 4 (ENT_TYPE_FLOOR_GENERIC), except:",
              "temple: 104 (ENT_TYPE_FLOORSTYLED_TEMPLE)",
              "neobab: 106 (ENT_TYPE_FLOORSTYLED_BABYLON)",
              "sunken: 107 (ENT_TYPE_FLOORSTYLED_SUNKEN)",
              "cog: 110 (ENT_TYPE_FLOORSTYLED_COG)",
              "duat: 112 (ENT_TYPE_FLOORSTYLED_DUAT)",
              "hundun: 107 (ENT_TYPE_FLOORSTYLED_SUNKEN)",
              "strangely, it's only applied to an odd block here and there"
            ]
          },
          "29": {
            "name": "random_block_floorstyle_2",
            "params": "",
            "return": "uint32_t",
            "comment": [
              "similar to random_block_floorstyle(), except now the default = 103 (ENT_TYPE_FLOORSTYLED_STONE)"
            ]
          },
          "30": {
            "name": "transition_styled_floor",
            "params": "",
            "return": "bool",
            "comment": "Whether transition tiles should be styled floor."
          },
          "31": {
            "name": "transition_tunnel_block_modifier",
            "params": "",
            "return": "uint32_t",
            "comment": [
              "determines the types of FLOOR_TUNNEL_NEXT/CURRENT (depending on where you are transitioning from/to) for this theme",
              "returns 85 by default, except for: olmec: 15, cog: 23"
            ]
          },
          "32": {
            "name": "transition_styled_floor_ent_type",
            "params": "",
            "return": "uint32_t",
            "comment": ""
          },
          "33": {
            "name": "backwall_entity_id",
            "params": "",
            "return": "uint32_t",
            "comment": "always returns 778 ENT_TYPE_BG_LEVEL_BACKWALL"
          },
          "34": {
            "name": "bordertile_entity_id",
            "params": "",
            "return": "uint32_t",
            "comment": [
              "returns ENT_TYPE_FLOOR_BORDERTILE by default, except:",
              "neobab ENT_TYPE_FLOOR_BORDERTILE_METAL",
              "sunken ENT_TYPE_FLOOR_BORDERTILE_OCTOPUS",
              "duat ENT_TYPE_FLOOR_DUSTWALL",
              "tiamat ENT_TYPE_FLOOR_BORDERTILE_METAL",
              "hundun ENT_TYPE_FLOOR_BORDERTILE_OCTOPUS"
            ]
          },
          "35": {
            "name": "transition_tunnel_critter_entity_id",
            "params": "",
            "return": "uint32_t",
            "comment": ""
          },
          "36": {
            "name": "liquid_gravity_direction",
            "params": "",
            "return": "float",
            "comment": "returns -1.0 (downwards) by default, except for sunken/hundun; applies both to lava and water"
          },
          "37": {
            "name": "are_players_vulnerable",
            "params": "",
            "return": "bool",
            "comment": [
              "used to make the player invincible in basecamp (but does an OOB check)",
              "if you return false in other themes you are invincible except for crushing deaths, and you do still experience knockback and stun"
            ]
          },
          "38": {
            "name": "should_spawn_soot",
            "params": "",
            "return": "bool",
            "comment": ""
          },
          "39": {
            "name": "backlayer_lut",
            "params": "",
            "return": "uint32_t",
            "comment": "returns the texture ID for the LUT to be applied to the special back layer, e.g. vlad's castle for the volcana theme"
          },
          "40": {
            "name": "backlayer_global_illumination_level",
            "params": "",
            "return": "float",
            "comment": [
              "a value between 0.0 (default) and 1.0 used to illuminate (backlayer) locations",
              "depending on camera level (thus player y-level), the brightness is increased gradually",
              "used in black market, vlad's castle, ice caves backlayer, pleasure palace",
              "for tiamat: the value is always 1.0 for full backlayer global illumination (ship)"
            ]
          },
          "41": {
            "name": "enable_camera_loop",
            "params": "",
            "return": "bool",
            "comment": [
              "this is used for CO (checks that player is in the level, not in the transition)",
              "if enabled in another theme, it adds an extra border and if you zoom out, you see the level loop if you move to the side"
            ]
          },
          "42": {
            "name": "max_level_for_vault",
            "params": "",
            "return": "uint8_t",
            "comment": [
              "not 100% sure, this is used in a random calculation that determines whether a vault spawns",
              "looks to be the highest level a vault can spawn; it's mostly 3 or 4, but for neobab it's 1, which makes sense"
            ]
          },
          "43": {
            "name": "get_theme_flag_at",
            "params": "uint index",
            "return": "bool",
            "comment": "index == 0 ? return unknown1 : return unknown2"
          },
          "44": {
            "name": "get_dynamic_floor_texture_id",
            "params": "int8_t texture_id",
            "return": "uint32_t",
            "comment": [
              "e.g. for dwelling:",
              "texture_id == -4 -> returns 122 BG_CAVE_0",
              "texture_id == -5 -> returns 115 FLOOR_CAVE_0",
              "texture_id == -6 -> returns 117 FLOOR_CAVE_2",
              "texture_id == -7 -> returns 118 FLOOR_CAVE_3",
              "texture_id == -8 -> returns 120 DECO_CAVE_0",
              "texture_id == -10 -> returns 369 COFFINS_0",
              "the texture_id parameter comes from the entitydb.texture field, for some entities the texture is not a valid texture ID but a negative number",
              "that number is passed here and mapped into this dynamic per-theme list (see entitydb[4].texture)"
            ]
          },
          "45": {
            "name": "set_next_world_level_theme",
            "params": "",
            "return": "",
            "comment": [
              "manipulates state.level_next, world_next and theme_next; triggers when exiting a level",
              "for dwelling, it just increments level_next because the world/theme choice is made by which door you pick",
              "for jungle/volcana, it checks whether it's on the fourth level, if so, sets theme_next (4), world_next (3) and level_next (1) correctly for olmec",
              "for CO it checks whether the next level is 99, and set state.win_state to 3 to finish the game"
            ]
          },
          "46": {
            "name": "get_exit_room_y_level",
            "params": "",
            "return": "uint32_t",
            "comment": [
              "default = return state.h - 1",
              "for special levels (black market, vlad, ...) fixed heights are returned"
            ]
          },
          "47": {
            "name": "get_shop_chance",
            "params": "",
            "return": "uint32_t",
            "comment": "returns a value that appears to affect room generation and is based on current world,level"
          },
          "48": {
            "name": "post_process_decoration1",
            "params": "",
            "return": "",
            "comment": [
              "used e.g. in Vlad's castle to insert the big banner in the center with the two demon statues",
              "also implemented for neobab (i think in the zoos)",
              "might do other things as well"
            ]
          },
          "49": {
            "name": "post_process_decoration2",
            "params": "",
            "return": "",
            "comment": [
              "dwelling: adds the decal above the udjat chest",
              "jungle: adds the colorful jungle flowers on top of the blocks",
              "does lots of other things as well, not sure about difference between this and post_process_decoration1"
            ]
          },
          "50": {
            "name": "populate_extra_random_entities",
            "params": "",
            "return": "",
            "comment": [
              "dwelling udjat level: adds the key in random place",
              "vlad's castle: adds decorative banners",
              "tidepool: adds hanging seaweed, red lanterns, ...",
              "temple: adds temple sand deco, ...",
              "neobab: adds neon signs, hanging wires, ..."
            ]
          },
          "51": {
            "name": "do_procedural_enemy_spawn",
            "params": "",
            "return": "",
            "comment": "called at each position that can spawn a procedural enemy"
          }
        }
      },
      {
        "field": "allow_bees",
        "type": "Bool",
        "comment": "will have a chance to change rooms to behive if true"
      },
      { "field": "allow_leprechaun", "type": "Bool" },
      { "field": "padding1?", "type": "UnsignedByte" },
      { "field": "padding2?", "type": "UnsignedByte" },
      { "field": "padding3?", "type": "UnsignedDword" },
      {
        "field": "sub_theme",
        "type": "ThemeInfoName",
        "comment": "for cosmic ocean"
      },
      { "field": "unknown3", "type": "UnsignedDword" },
      { "field": "unknown4", "type": "UnsignedDword" }
    ],
    "Projectile": [
      {
        "vftablefunctions": {
          "93": {
            "name": "v93",
            "params": "",
            "return": "",
            "comment": ""
          },
          "94": {
            "name": "v94",
            "params": "",
            "return": "",
            "comment": ""
          }
        }
      }
    ],
    "Mount": [
      {
        "vftablefunctions": {
          "95": {
            "name": "get_special_offset",
            "params": "std::pair<float, float>& offset",
            "return": "std::pair<float, float>&",
            "comment": "when jumping on mount"
          },
          "96": {
            "name": "v96",
            "params": "std::pair<float, float>& value",
            "return": "std::pair<float, float>&",
            "comment": "gets something for when crouching on mount"
          },
          "97": {
            "name": "used_double_jump",
            "params": "",
            "return": "bool",
            "comment": "checks can_doublejump and unknown9b"
          },
          "98": {
            "name": "v98",
            "params": "bool",
            "return": "uint32_t",
            "comment": "returns some constant value"
          },
          "99": {
            "name": "v99",
            "params": "",
            "return": "uint32_t",
            "comment": "returns some constant value"
          },
          "100": {
            "name": "play_jump_on_sound",
            "params": "",
            "return": ""
          },
          "101": {
            "name": "remove_rider",
            "params": "",
            "return": ""
          },
          "102": {
            "name": "v102",
            "params": "",
            "return": "float",
            "comment": "get offset? mech returns 0.9, the rest 0.5"
          },
          "103": {
            "name": "v103",
            "params": "",
            "return": "uint32_t",
            "comment": "returns some constant value"
          },
          "104": {
            "name": "v104",
            "params": "",
            "return": "uint32_t",
            "comment": "returns some constant value"
          },
          "105": {
            "name": "v105",
            "params": "",
            "return": "uint32_t",
            "comment": "returns some constant value"
          },
          "106": {
            "name": "can_play_mount_sound",
            "params": "",
            "return": "bool",
            "comment": "called every frame, if returns true mount will make a sound"
          }
        }
      },
      { "field": "rider_uid", "type": "EntityUID", "comment": "who rides it" },
      { "field": "unknown4", "type": "UnsignedDword" },
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "can_doublejump",
        "type": "Bool",
        "comment": "whether the doublejump has already occurred or not"
      },
      { "field": "tamed", "type": "Bool" },
      {
        "field": "walk_pause_timer",
        "type": "UnsignedWord",
        "comment": "alternates between walking and pausing every time it reaches zero"
      },
      { "field": "unknown9a", "type": "UnsignedByte" },
      { "field": "unknown9b", "type": "UnsignedByte" },
      {
        "field": "taming_timer",
        "type": "UnsignedByte",
        "comment": "when 0 it's tame"
      },
      { "field": "unknown9d", "type": "UnsignedByte" }
    ],
    "Rockdog": [{ "field": "attack_cooldown", "type": "UnsignedByte" }],
    "Axolotl": [
      { "field": "attack_cooldown", "type": "UnsignedByte" },
      { "field": "can_teleport", "type": "Bool" },
      { "field": "unknown", "type": "UnsignedByte" }
    ],
    "Mech": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "explosion_sound", "type": "SoundMeta" },
      { "field": "unknown1", "type": "UnsignedQword" },
      { "field": "gun_cooldown", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "walking", "type": "Bool" },
      { "field": "breaking_wall", "type": "Bool" }
    ],
    "Qilin": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "attack_cooldown",
        "type": "UnsignedByte",
        "comment": "not actually used? you can fire again before it's 0"
      }
    ],
    "Ushabti": [
      { "field": "wiggle_timer", "type": "UnsignedWord" },
      { "field": "shine_timer", "type": "UnsignedByte" }
    ],
    "Generator": [
      {
        "vftablefunctions": {
          "40": {
            "name": "randomize_timer",
            "params": "",
            "return": "",
            "comment": "called after it spawns entity and it's 'ready' (have proper flags set etc.)"
          }
        }
      },
      { "field": "spawned_uid", "type": "EntityUID" },
      { "field": "set_timer", "type": "UnsignedWord" },
      { "field": "timer", "type": "UnsignedWord" },
      {
        "field": "start_counter",
        "type": "UnsignedByte",
        "comment": "works only for star challenge"
      },
      {
        "field": "on_off",
        "type": "Bool",
        "comment": "works only for star challenge"
      }
    ],
    "HorizontalForceField": [
      {
        "field": "first_item_beam",
        "type": "EntityPointer",
        "comment": "if killed, the whole beam goes out"
      },
      { "field": "fx", "type": "EntityPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "laser_bounce?", "type": "Float" },
      {
        "field": "timer",
        "type": "UnsignedWord",
        "comment": "As opposite to the vertical one, this one counts for the on and the for the off state"
      },
      { "field": "is_on", "type": "Bool" }
    ],
    "ForceField": [
      {
        "field": "first_item_beam",
        "type": "EntityPointer",
        "comment": "if killed, the whole beam goes out"
      },
      { "field": "fx", "type": "EntityPointer" },
      {
        "field": "sound",
        "type": "SoundMeta",
        "comment": "starts at timer 140"
      },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "bounce_force?", "type": "Float", "comment": "max 1.0 ?" },
      {
        "field": "is_on",
        "type": "Bool",
        "comment": "starts the sound + first_item_beam but not fx for some reason"
      },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" }
    ],
    "TimedForceField": [
      {
        "field": "timer",
        "type": "UnsignedDword",
        "comment": "max 300? at 100 it's start the proces, changing the animation_frame"
      },
      { "field": "pause", "type": "Bool" }
    ],
    "StickyTrap": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "attached_piece_uid", "type": "EntityUID" },
      { "field": "ball_uid", "type": "EntityUID" },
      {
        "field": "state",
        "type": "State8",
        "states": {
          "0": "none",
          "1": "start",
          "2": "going_down",
          "3": "down_position",
          "4": "going_up",
          "5": "pause"
        }
      },
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "for the start and for the retract"
      }
    ],
    "SpikeballTrap": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "chain", "type": "EntityPointer" },
      { "field": "end_piece", "type": "EntityPointer" },
      {
        "field": "state",
        "type": "State8",
        "states": {
          "0": "none",
          "1": "start",
          "2": "going_down",
          "3": "going_up",
          "4": "pause"
        },
        "comment": "going_up is only right when timer is 0, otherwise it just sits at the bottom"
      },
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "for the start and retract"
      },
      {
        "field": "speed_direction?",
        "type": "UnsignedByte",
        "comment": "i have no clue what this is, goes 255 when detecting something, but when it hits the unbreakable tile it 255 for ever, changing it can teleport it up/down/change speed etc."
      }
    ],
    "SlidingWallCeiling": [
      { "field": "attached_piece", "type": "EntityPointer" },
      { "field": "active_floor_part_uid", "type": "EntityUID" },
      {
        "field": "state",
        "type": "Flags8",
        "flags": {
          "1": "Top",
          "2": "pause",
          "3": "wrong_pause",
          "4": "wrong_pause",
          "5": "wrong_pause",
          "6": "wrong_pause",
          "7": "wrong_pause",
          "8": "wrong_pause"
        },
        "comment": "i labeled some as wrong_pause cause they are probably not used, they pause the movement but not the sound"
      },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" },
      { "field": "ball_rise", "type": "SoundMeta" },
      { "field": "ball_drop", "type": "SoundMeta" }
    ],
    "Elevator": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      {
        "field": "timer",
        "type": "UnsignedDword",
        "comment": "counts from 60 to 0"
      },
      { "field": "moving_up", "type": "Bool" }
    ],
    "Boulder": [
      { "field": "unknown1", "type": "DataPointer" },
      {
        "field": "is_rolling",
        "type": "UnsignedByte",
        "comment": "is set to 1 when the boulder first hits the ground"
      }
    ],
    "Drill": [
      { "field": "sound1", "type": "SoundMeta" },
      { "field": "sound2", "type": "SoundMeta" },
      { "field": "top_chain_piece", "type": "EntityPointer" },
      {
        "field": "unknown1",
        "type": "UnsignedByte",
        "comment": "it's forced to 0, for whatever reason"
      }
    ],
    "UdjatSocket": [{ "field": "fx_button", "type": "EntityPointer" }],
    "PushBlock": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "dust_particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "dest_pos_x", "type": "Float" },
      { "field": "unused", "type": "UnsignedDword" }
    ],
    "Bullet": [{ "field": "unknown1", "type": "UnknownPointerGroup" }],
    "TeleportingBorder": [
      {
        "field": "direction",
        "type": "State8",
        "states": {
          "0": "right",
          "1": "left",
          "2": "bottom",
          "3": "top",
          "4": "disable"
        }
      }
    ],
    "WoodenlogTrap": [
      { "field": "ceiling_1_uid", "type": "EntityUID" },
      { "field": "ceiling_2_uid", "type": "EntityUID" },
      { "field": "falling_speed", "type": "Float" },
      {
        "field": "unknown1",
        "type": "UnsignedByte",
        "comment": "it's forced to 0, for whatever reason"
      }
    ],
    "BoneBlock": [
      {
        "field": "unknown1",
        "type": "Float",
        "comment": "1.0 when hited from left and -1.0 when hited from right"
      }
    ],
    "TimedPowderkeg": [
      {
        "field": "timer",
        "type": "Dword",
        "comment": "timer till explosion, it's paused when negative, can be stooped"
      }
    ],
    "ChainedPushBlock": [
      {
        "field": "is_chained",
        "type": "Bool",
        "comment": "changing this when chained does nothing, when unchained it's forced to 0"
      }
    ],
    "LightArrowPlatform": [
      { "field": "unused", "type": "UnsignedQword" },
      { "field": "emitted_light", "type": "IlluminationPointer" }
    ],
    "FallingPlatform": [
      { "field": "timer", "type": "Dword" },
      { "field": "shaking_factor", "type": "Float" },
      { "field": "y_pos", "type": "Float" }
    ],
    "TrapPart": [{ "field": "ceiling", "type": "EntityPointer" }],
    "UnchainedSpikeBall": [
      {
        "field": "bounce",
        "type": "Bool",
        "comment": "if false it bounces when hitting the ground, it's also forced to true when moving sideways or rolling, can be changed to true in the air for weird effect"
      }
    ],
    "ThinIce": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      {
        "field": "strength",
        "type": "UnsignedWord",
        "comment": "counts frames when standing on, maximum is 134 as based of this value it changes animation_frame, and above that value it changes to wrong sprite"
      }
    ],
    "ClamBase": [
      { "field": "treasure_type", "type": "EntityDBID" },
      {
        "field": "treasure_uid",
        "type": "EntityUID",
        "comment": "set to nothing when spawning in overlunky"
      },
      { "field": "treasure_x_pos", "type": "Float" },
      { "field": "treasure_y_pos", "type": "Float" },
      { "field": "top_part_uid", "type": "EntityUID" }
    ],
    "RegenBlock": [{ "field": "on_breaking", "type": "Bool" }],
    "GiantClamTop": [
      { "field": "close_timer", "type": "Byte" },
      { "field": "open_timer", "type": "UnsignedByte" }
    ],
    "CookFire": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "particles_smoke", "type": "ParticleEmitterInfoPointer" },
      { "field": "particles_flames", "type": "ParticleEmitterInfoPointer" },
      { "field": "particles_warp", "type": "ParticleEmitterInfoPointer" },
      { "field": "sound", "type": "SoundMeta" }
    ],
    "Floor": [
      {
        "vftablefunctions": {
          "37": {
            "name": "decorate_internal",
            "params": "",
            "return": "",
            "comment": "decorates undecorated floor and floorstyled, doesn't remove old decorations, runs only on level gen"
          },
          "38": {
            "name": "on_neighbor_destroyed",
            "params": "",
            "return": "",
            "comment": "called for every neighbor of destroyed floor (to decorate it, maybe somehting else)"
          },
          "39": {
            "name": "get_floor_type",
            "params": "",
            "return": "uint32_t",
            "comment": "Returns it's ENT_TYPE except for FLOOR_PEN (returns FLOORSTYLED_MINEWOOD) and FLOOR_QUICKSAND, FLOOR_TOMB, FLOOR_EMPRESS_GRAVE which return FLOOR_GENERIC. Used for spawning decorations"
          }
        }
      },
      { "field": "deco_top", "type": "EntityUID" },
      { "field": "deco_bottom", "type": "EntityUID" },
      { "field": "deco_left", "type": "EntityUID" },
      { "field": "deco_right", "type": "EntityUID" }
    ],
    "LightEmitter": [
      { "field": "emitted_light", "type": "IlluminationPointer" }
    ],
    "Door": [
      {
        "vftablefunctions": {
          "40": {
            "name": "on_enter_attempt",
            "params": "Entity*",
            "return": "",
            "comment": "this function doesnt do much, checks if it's CHAR_*, checks if hes holding anything (if yes calls some function), then checks if Player.can_use is equal to 4 calls some other function, can't be bother to look into the functions"
          },
          "41": {
            "name": "hide_ui",
            "params": "Entity*",
            "return": "",
            "comment": "check if it's CHAR_*, then sets State.level_flags -> 21 (Hide hud, transition)"
          },
          "42": {
            "name": "enter",
            "params": "Entity*",
            "return": "uint8_t",
            "comment": ""
          },
          "43": {
            "name": "entered_from_front_layer",
            "params": "Entity*",
            "return": "bool",
            "comment": "checks layer of the Entity entering, except for FLOOR_DOOR_EGGSHIP_ROOM which gets the overlay (BG_EGGSHIP_ROOM) and returns BGEggshipRoom.player_in"
          },
          "44": {
            "name": "v44",
            "params": "",
            "return": "float",
            "comment": "returns 0.0 except for eggship doors, for example: FLOOR_DOOR_EGGSHIP_ROOM returns 0.75 when entering the room, and 1.0 when exiting, runs every frame while entering/exiting"
          },
          "45": {
            "name": "is_door_unlocked",
            "params": "",
            "return": "bool",
            "comment": ""
          },
          "46": {
            "name": "v46",
            "params": "",
            "return": "bool",
            "comment": "dunno, runs every frame when player overlays door"
          }
        }
      },
      {
        "field": "counter",
        "type": "UnsignedByte",
        "comment": "counts down as you go thru it "
      },
      { "field": "unused1", "type": "Byte" },
      { "field": "unused2", "type": "Word" },
      { "field": "unused3", "type": "Dword" },
      { "field": "fx_button", "type": "EntityPointer" }
    ],
    "ExitDoor": [
      {
        "field": "entered",
        "type": "Bool",
        "comment": "if true entering it does not load the transition, probably for use in multiplayer"
      },
      {
        "field": "special_door",
        "type": "Bool",
        "comment": "use provided world/level/theme"
      },
      { "field": "level", "type": "UnsignedByte" },
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "counts from 30 to 0, dunno why"
      },
      { "field": "world", "type": "UnsignedByte" },
      { "field": "theme", "type": "UnsignedByte" },
      { "field": "padding", "type": "UnsignedWord" }
    ],
    "DecoratedDoor": [{ "field": "special_bg", "type": "EntityPointer" }],
    "CityOfGoldDoor": [
      { "field": "unlocked", "type": "Bool" },
      { "field": "unknown1", "type": "UnsignedByte" }
    ],
    "LockedDoor": [{ "field": "unlocked", "type": "Bool" }],
    "MainExit": [
      {
        "field": "door_blocker",
        "type": "EntityPointer",
        "comment": "normally FX_MAIN_EXIT_DOOR , but any value will block the door"
      },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "top_value?", "type": "Float" },
      { "field": "value?", "type": "Float" }
    ],
    "EggShipDoor": [
      { "field": "unused1", "type": "UnsignedWord" },
      { "field": "unused2", "type": "UnsignedByte" },
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "counts from 30 to 0, dunno why"
      },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "UnsignedWord" }
    ],
    "TotemTrap": [
      { "field": "unknown1", "type": "UnsignedDword" },
      {
        "field": "unknown2",
        "type": "Float",
        "comment": "might be sound delay related, cannot reproduce anymore"
      },
      { "field": "unknown3", "type": "Float" },
      { "field": "spawn_entity_type", "type": "EntityDBID" },
      { "field": "first_sound_id", "type": "UnsignedDword" },
      {
        "field": "counter",
        "type": "Dword",
        "comment": "adds some value depending on trap and with side is triggered, setting to low value pauses it?"
      },
      { "field": "unknown4", "type": "UnsignedByte", "comment": "forced to 1" },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" },
      { "field": "unused3", "type": "UnsignedDword" },
      { "field": "timer?", "type": "UnsignedByte" }
    ],
    "BigSpearTrap": [
      { "field": "spear_uid", "type": "EntityUID" },
      { "field": "active?", "type": "UnsignedByte", "comment": "forced to 1" },
      {
        "field": "left_part",
        "type": "Bool",
        "comment": "setting the left part to 0 or right part to 1 destroys the trap"
      }
    ],
    "LaserTrap": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      {
        "field": "timer",
        "type": "UnsignedWord",
        "comment": "counts up from 0 after triggering, cannot shoot again until 360"
      }
    ],
    "SparkTrap": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "spark_uid", "type": "EntityUID" }
    ],
    "TransferFloor": [
      {
        "field": "transferred_entities",
        "type": "UnorderedMap",
        "comment": "unordered_map<int32_t, uint32_t> key is the uid, value is frame entity entered the floor"
      }
    ],
    "ConveyorBelt": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "timer", "type": "UnsignedByte", "comment": "0 to 15" },
      { "field": "timer2?", "type": "UnsignedByte" }
    ],
    "QuickSand": [
      { "field": "unknown_timer1", "type": "UnsignedByte" },
      { "field": "unknown_timer2", "type": "UnsignedByte" },
      { "field": "unknown_timer3", "type": "UnsignedByte" },
      { "field": "unknown_timer4", "type": "UnsignedByte" }
    ],
    "Pipe": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      {
        "field": "direction_type",
        "type": "State8",
        "states": {
          "3": "straight_horizontal",
          "4": "blocked",
          "5": "down_left_turn",
          "6": "down_right_turn",
          "8": "blocked",
          "9": "up_left_turn",
          "10": "up_right_turn",
          "12": "straight_vertical",
          "2": "straight_??"
        }
      },
      { "field": "end_pipe", "type": "Bool" }
    ],
    "MotherStatue": [
      { "field": "player1_standing", "type": "Bool" },
      { "field": "player2_standing", "type": "Bool" },
      { "field": "player3_standing", "type": "Bool" },
      { "field": "player4_standing", "type": "Bool" },
      { "field": "player1_health_received", "type": "Bool" },
      { "field": "player2_health_received", "type": "Bool" },
      { "field": "player3_health_received", "type": "Bool" },
      { "field": "player4_health_received", "type": "Bool" },
      { "field": "player1_health_timer", "type": "UnsignedWord" },
      { "field": "player2_health_timer", "type": "UnsignedWord" },
      { "field": "player3_health_timer", "type": "UnsignedWord" },
      { "field": "player4_health_timer", "type": "UnsignedWord" },
      { "field": "eggplantchild_timer", "type": "UnsignedByte" },
      { "field": "unknown", "type": "UnsignedByte" },
      { "field": "eggplantchild_detected", "type": "Bool" }
    ],
    "TentacleBottom": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "attached_piece_uid", "type": "EntityUID" },
      { "field": "tentacle_uid", "type": "EntityUID" },
      {
        "field": "state",
        "type": "State8",
        "states": {
          "0": "none",
          "1": "start",
          "2": "moving up",
          "3": "at the top",
          "4": "moving down",
          "5": "pause"
        }
      }
    ],
    "Flame": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "emitted_light", "type": "IlluminationPointer" }
    ],
    "TorchFlame": [
      { "field": "smoke_particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "flame_particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "warp_particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "flame_size", "type": "Float" }
    ],
    "LampFlame": [
      { "field": "flame_particle", "type": "ParticleEmitterInfoPointer" }
    ],
    "FlameSize": [
      {
        "field": "flame_size",
        "type": "Float",
        "comment": "if changed, gradually goes down (0.03 per frame) to the default size"
      }
    ],
    "PoleDeco": [
      { "field": "deco_up", "type": "EntityUID" },
      { "field": "deco_down", "type": "EntityUID" }
    ],
    "PunishBall": [
      { "field": "attached_to_uid", "type": "EntityUID" },
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "counts down from 20 while the ball is eligible to break a floor and tries to break it at 0"
      },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" },
      { "field": "x_pos", "type": "Float" },
      { "field": "y_pos", "type": "Float" }
    ],
    "Chest": [
      { "field": "leprechaun", "type": "Bool" },
      {
        "field": "bomb",
        "type": "Bool",
        "comment": "size of the bomb is random, if set both true only leprechaun spawns"
      }
    ],
    "ClimbableRope": [
      { "field": "segment_nr_inverse", "type": "UnsignedDword" },
      {
        "field": "burn_timer",
        "type": "Dword",
        "comment": "entity is killed after 20"
      },
      { "field": "above_part", "type": "EntityPointer" },
      { "field": "below_part", "type": "EntityPointer" },
      { "field": "segment_nr", "type": "UnsignedDword" },
      { "field": "unused", "type": "UnsignedDword" },
      { "field": "unknown", "type": "UnsignedQword" }
    ],
    "LiquidSurface": [
      { "field": "glow_radius", "type": "Float" },
      {
        "field": "sine_pos",
        "type": "Float",
        "comment": "x position to calculate sine wave, it moves the glow back and forth"
      },
      {
        "field": "sine_pos_increment",
        "type": "Float",
        "comment": "just an on frame increment for the value above"
      }
    ],
    "Lava": [{ "field": "emitted_light", "type": "IlluminationPointer" }],
    "Liquid": [
      { "field": "fx_surface", "type": "EntityPointer" },
      {
        "field": "x_pos?",
        "type": "Float",
        "comment": "for some reason accesses as Qword?, only updated when the position changes drastically"
      },
      { "field": "y_pos?", "type": "Float" },
      { "field": "liquid_id_list_pointer", "type": "StdListIteratorPointer" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown_timer1", "type": "Byte" },
      {
        "field": "pos_update_timer",
        "type": "Byte",
        "comment": "when 0, updates x_pos and y_pos"
      },
      { "field": "unknown_timer3", "type": "Byte" },
      { "field": "unk21", "type": "Byte" }
    ],
    "Pot": [
      { "field": "inside", "type": "EntityDBID" },
      {
        "field": "dont_transfer_dmg",
        "type": "Bool",
        "comment": "if false, spawned entity will receive dmg that the pot received"
      }
    ],
    "Coffin": [
      { "field": "inside", "type": "EntityDBID" },
      { "field": "timer", "type": "UnsignedByte" },
      { "field": "shake_state?", "type": "Byte" },
      {
        "field": "player_respawn",
        "type": "Bool",
        "comment": "if true, will respawn dead player instead of HH, doesn't work with anubis coffin"
      }
    ],
    "SpecialShot": [
      { "field": "target_x", "type": "Float" },
      { "field": "target_y", "type": "Float" }
    ],
    "Idol": [
      {
        "field": "trap_triggered",
        "type": "Bool",
        "comment": "if you set it to true for the ice caves or volcano idol, the trap won't trigger"
      },
      {
        "field": "touch",
        "type": "Byte",
        "comment": "changes to 0 when first picked up by player and back to -1 if HH picks it up"
      },
      { "field": "unused", "type": "UnsignedWord" },
      { "field": "spawn_x", "type": "Float" },
      { "field": "spawn_y", "type": "Float" }
    ],
    "Spear": [{ "field": "sound_id", "type": "UnsignedDword" }],
    "JungleSpearCosmetic": [
      { "field": "move_x", "type": "Float" },
      { "field": "move_y", "type": "Float" }
    ],
    "WebShot": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "unknown2", "type": "Float" },
      {
        "field": "shot",
        "type": "Bool",
        "comment": "if false, it's attached to the gun"
      }
    ],
    "UnknownPointerGroup": [
      { "field": "unknown_uid1", "type": "EntityUIDPointer" },
      { "field": "unknown_uid2", "type": "EntityUIDPointer" },
      { "field": "unknown_uid3", "type": "EntityUIDPointer" }
    ],
    "HangAnchor": [{ "field": "spider_uid", "type": "EntityUID" }],
    "HangStrand": [{ "field": "start_pos_y", "type": "Float" }],
    "Arrow": [
      { "field": "flame_uid", "type": "EntityUID" },
      { "field": "is_on_fire", "type": "Bool" },
      { "field": "is_poisoned", "type": "Bool" },
      { "field": "shot_from_trap", "type": "Bool" },
      { "field": "unused", "type": "Byte" }
    ],
    "LightArrow": [{ "field": "emitted_light", "type": "IlluminationPointer" }],
    "LightShot": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "emitted_light", "type": "IlluminationPointer" }
    ],
    "SoundShot": [{ "field": "sound", "type": "SoundMeta" }],
    "ScepterShot": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "speed", "type": "Float" },
      {
        "field": "idle_timer",
        "type": "UnsignedWord",
        "comment": "short timer before it goes after target"
      },
      {
        "field": "unknown",
        "type": "Word",
        "comment": "setting it low or high can make it last forever, won't matter if you change it back afterwards, anubis is 300 and player 400 by default"
      }
    ],
    "TimedShot": [{ "field": "timer", "type": "UnsignedByte" }],
    "CloneGunShot": [
      { "field": "timer", "type": "UnsignedByte" },
      { "field": "unused1", "type": "Byte" },
      { "field": "unused2", "type": "Word" },
      { "field": "spawn_y", "type": "Float" },
      {
        "field": "float_timer?",
        "type": "Float",
        "comment": "probably distance_traveled, needs to be verified"
      }
    ],
    "Spark": [
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "fx_entity", "type": "EntityPointer" },
      { "field": "rotation_center_x", "type": "Float" },
      { "field": "rotation_center_y", "type": "Float" },
      { "field": "rotation_angle", "type": "Float" },
      {
        "field": "size",
        "type": "Float",
        "comment": "slowly goes down to default 1.0, is 0.0 when not on screen"
      },
      {
        "field": "size_multiply",
        "type": "Float",
        "comment": "0.0 when not on screen"
      },
      {
        "field": "next_size",
        "type": "Float",
        "comment": "width and height will be set to this value * size_multiply next frame"
      },
      {
        "field": "size_change_timer",
        "type": "UnsignedByte",
        "comment": "very short timer before next size change, giving a pulsing effect"
      }
    ],
    "TiamatShot": [{ "field": "sound", "type": "SoundMeta" }],
    "Fireball": [{ "field": "particle", "type": "ParticleEmitterInfoPointer" }],
    "Leaf": [
      { "field": "unknown1", "type": "Qword" },
      {
        "field": "fade_away_counter",
        "type": "Float",
        "comment": "counts to 100.0 then the leaf fades away"
      },
      { "field": "swing_direction", "type": "Dword" },
      {
        "field": "fade_away_trigger",
        "type": "Bool",
        "comment": "if set true, it will fade away after a while"
      }
    ],
    "AcidBubble": [
      { "field": "speed_x", "type": "Float" },
      { "field": "speed_y", "type": "Float" },
      { "field": "float_counter", "type": "Float" }
    ],
    "Claw": [
      { "field": "crabman_uid", "type": "EntityUID" },
      { "field": "spawn_x", "type": "Float" },
      { "field": "spawn_y", "type": "Float" }
    ],
    "StretchChain": [
      { "field": "at_end_of_chain_uid", "type": "EntityUID" },
      { "field": "dot_offset", "type": "Float" },
      {
        "field": "position_in_chain",
        "type": "UnsignedByte",
        "comment": "0 closest to the end, so if the chain has 15 segments the last one will be 14"
      },
      {
        "field": "inverse_doubled_position_in_chain",
        "type": "UnsignedByte",
        "comment": "only punish chain, (chain_length - position_in_chain) * 2"
      },
      {
        "field": "unknown_timer",
        "type": "UnsignedByte",
        "comment": "only punish chain"
      },
      {
        "field": "is_dot_hidden",
        "type": "Bool",
        "comment": "only punish chain"
      }
    ],
    "Treasure": [
      { "field": "unknown_state", "type": "UnsignedDword" },
      { "field": "cashed", "type": "Bool", "comment": "spawns a dust effect" },
      { "field": "unknown1", "type": "Byte" },
      { "field": "unknown2", "type": "Word" }
    ],
    "HundunChest": [
      { "field": "unknown3", "type": "UnsignedWord" },
      { "field": "unknown4", "type": "UnsignedByte" },
      { "field": "timer", "type": "UnsignedByte" }
    ],
    "Boombox": [
      { "field": "fx_button", "type": "EntityPointer" },
      { "field": "music_note1", "type": "ParticleEmitterInfoPointer" },
      { "field": "music_note2", "type": "ParticleEmitterInfoPointer" },
      { "field": "spawn_y", "type": "Float" },
      {
        "field": "station",
        "type": "Byte",
        "comment": "-1 to turn off and bring back normal camp music, anything above 10 is mute"
      },
      { "field": "station_change_delay", "type": "UnsignedByte" },
      { "field": "jump_timer", "type": "UnsignedByte" },
      { "field": "jump_state", "type": "UnsignedByte" }
    ],
    "TV": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "fx_button", "type": "EntityPointer" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      {
        "field": "station",
        "type": "UnsignedByte",
        "comment": "0 to turn off, anything above 3 has the music from station 3 and the screen doesn't change"
      }
    ],
    "Telescope": [
      { "field": "fx_button", "type": "EntityPointer" },
      { "field": "camera_anchor", "type": "EntityPointer" },
      { "field": "looked_through_by_uid", "type": "EntityUID" },
      {
        "field": "unknown",
        "type": "Float",
        "comment": "seams to be distance between camera_anchor and telescope, but it's off by a little"
      }
    ],
    "Torch": [
      {
        "vftablefunctions": {
          "93": {
            "name": "light_up",
            "params": "bool",
            "return": ""
          },
          "94": {
            "name": "v_94",
            "params": "double& value",
            "return": ""
          },
          "95": {
            "name": "get_flame_type",
            "params": "",
            "return": "ENT_TYPE"
          }
        }
      },
      { "field": "flame_uid", "type": "EntityUID" },
      { "field": "is_lit", "type": "Bool" },
      { "field": "unknown1", "type": "Byte" },
      { "field": "unknown2", "type": "Word" }
    ],
    "WallTorch": [
      {
        "field": "no_reward",
        "type": "Bool",
        "comment": "if false, it will drop gold when light up"
      }
    ],
    "Chain": [
      { "field": "attached_to_uid", "type": "EntityUID" },
      { "field": "timer", "type": "Dword" }
    ],
    "Fly": [{ "field": "timer", "type": "UnsignedByte" }],
    "OlmecCannon": [
      { "field": "timer", "type": "UnsignedWord" },
      { "field": "bombs_left", "type": "UnsignedByte" }
    ],
    "OlmecShip": [
      { "field": "sound_pos", "type": "SoundMeta" },
      { "field": "unknown138", "type": "DataPointer" },
      { "field": "door_fx", "type": "EntityPointer" },
      { "field": "smoke_particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "flight_time", "type": "UnsignedWord" },
      { "field": "unknown152", "type": "Word" },
      { "field": "has_spawned_jetflames", "type": "Bool" }
    ],
    "Landmine": [
      {
        "field": "timer",
        "type": "Dword",
        "comment": "explodes at 57, if you set it to 58 will count to overflow"
      }
    ],
    "Honey": [{ "field": "wiggle_timer", "type": "UnsignedByte" }],
    "PlayerGhost": [
      { "field": "sparkles_particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "player_inputs", "type": "PlayerSlotPointer" },
      { "field": "inventory", "type": "PlayerInventoryPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "body", "type": "EntityUID" },
      { "field": "unknown_timer", "type": "UnsignedWord" },
      { "field": "shake_timer", "type": "UnsignedByte" },
      { "field": "boost_timer", "type": "UnsignedByte" },
      { "field": "unknown_timer2", "type": "UnsignedByte" },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Byte" },
      { "field": "padding3", "type": "Byte" },
      { "field": "padding4", "type": "Dword" },
      { "field": "unknown", "type": "DataPointer" }
    ],
    "GhostBreath": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "timer", "type": "UnsignedWord" },
      { "field": "big_cloud", "type": "Bool" },
      {
        "field": "expand?",
        "type": "Bool",
        "comment": "when set true on start makes it go further"
      }
    ],
    "PlayerBag": [
      { "field": "bombs", "type": "Byte" },
      { "field": "ropes", "type": "Byte" }
    ],
    "LaserBeam": [
      { "field": "sparks", "type": "ParticleEmitterInfoPointer" },
      { "field": "emitted_light", "type": "IlluminationPointer" }
    ],
    "TreasureHook": [{ "field": "sound", "type": "SoundMeta" }],
    "AxolotlShot": [
      { "field": "unknown1", "type": "UnknownPointerGroup" },
      { "field": "trapped_uid", "type": "EntityUID" },
      { "field": "size", "type": "Float" },
      {
        "field": "swing",
        "type": "Float",
        "comment": "always swings to the right first"
      },
      {
        "field": "swing_periodicity",
        "type": "Float",
        "comment": "how often switch from right to left swing"
      },
      { "field": "distance_after_capture", "type": "Float" },
      { "field": "unknown2", "type": "UnsignedByte" },
      { "field": "unknown3", "type": "UnsignedByte" },
      { "field": "unknown4", "type": "UnsignedWord" }
    ],
    "SkullDropTrap": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "left_skull_uid", "type": "EntityUID" },
      { "field": "middle_skull_uid", "type": "EntityUID" },
      { "field": "right_skull_uid", "type": "EntityUID" },
      { "field": "left_skull_drop_time", "type": "UnsignedByte" },
      { "field": "middle_skull_drop_time", "type": "UnsignedByte" },
      { "field": "right_skull_drop_time", "type": "UnsignedByte" },
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "counts from 60 3 times, the last time dropping the skulls, then random longer timer for reset"
      }
    ],
    "FrozenLiquid": [
      {
        "field": "unknown1",
        "type": "Dword",
        "comment": "have problem cheeking those, looks like unused memory, but then, it's always zeros on spawn, changing it can crash the game"
      },
      { "field": "unknown2", "type": "Dword" }
    ],
    "Switch": [
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "has to be 0 before next use"
      }
    ],
    "FlyHead": [{ "field": "vored_entity_uid", "type": "EntityUID" }],
    "SnapTrap": [
      { "field": "bait_uid", "type": "EntityUID" },
      { "field": "reload_timer", "type": "UnsignedByte" }
    ],
    "EmpressGrave": [
      { "field": "fx_button", "type": "EntityPointer" },
      { "field": "ghost", "type": "EntityPointer" }
    ],
    "Tentacle": [{ "field": "bottom", "type": "EntityPointer" }],
    "MiniGameShip": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "velocity_x", "type": "Float" },
      { "field": "velocity_y", "type": "Float" },
      { "field": "swing", "type": "Float", "comment": "angle change?" },
      {
        "field": "up_down_normal",
        "type": "Float",
        "comment": "0.0 means down, 1.0 means up, 0.5 idle"
      }
    ],
    "MiniGameAsteroid": [{ "field": "spin_speed", "type": "Float" }],
    "CursedPot": [
      { "field": "smoke", "type": "ParticleEmitterInfoPointer" },
      { "field": "smoke2", "type": "ParticleEmitterInfoPointer" }
    ],
    "Orb": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "timer", "type": "UnsignedByte" }
    ],
    "EggSac": [{ "field": "timer", "type": "UnsignedByte" }],
    "Goldbar": [
      {
        "field": "unknown_shine",
        "type": "UnsignedByte",
        "comment": "get's updated every time animation_frame is changes by the game, setting it to 64 or less disables the effect"
      }
    ],
    "Coin": [{ "field": "nominal_price", "type": "UnsignedDword" }],
    "RollingItem": [
      {
        "vftablefunctions": {
          "94": {
            "name": "on_purches",
            "params": "",
            "return": ""
          }
        }
      },
      {
        "field": "roll_speed",
        "type": "Float",
        "comment": "only positive numbers"
      }
    ],
    "ParachutePowerup": [
      {
        "field": "falltime_deploy",
        "type": "UnsignedByte",
        "comment": "this gets compared with users falling_timer"
      },
      { "field": "unknown1", "type": "UnsignedByte" },
      { "field": "unknown2", "type": "UnsignedWord" },
      { "field": "unknown3", "type": "UnsignedWord" },
      {
        "field": "deploy",
        "type": "Bool",
        "comment": "if you set only this one it will crash the game after a while, also won't add new parachute to inventory"
      },
      { "field": "deploy2?", "type": "Bool" },
      {
        "field": "after_deploy",
        "type": "Bool",
        "comment": "if set to true before deploying, parachute will drop imminently after deploy"
      }
    ],
    "TrueCrownPowerup": [{ "field": "timer", "type": "UnsignedWord" }],
    "AnkhPowerup": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "player", "type": "EntityPointer" },
      { "field": "fx_glow", "type": "EntityPointer" },
      { "field": "unknown1", "type": "Float" },
      { "field": "timer1", "type": "UnsignedWord" },
      { "field": "timer2", "type": "UnsignedWord" },
      { "field": "timer3", "type": "UnsignedWord" },
      { "field": "music_on_off", "type": "Bool" }
    ],
    "Teleporter": [
      {
        "field": "teleport_number",
        "type": "UnsignedWord",
        "comment": "max 3, need to stand on the ground to reset"
      }
    ],
    "Boomerang": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "trail", "type": "ParticleEmitterInfoPointer" },
      { "field": "distance", "type": "Float" },
      { "field": "rotation", "type": "Float" },
      { "field": "wall_collision?", "type": "Float" },
      { "field": "state?", "type": "UnsignedByte" },
      { "field": "unused1", "type": "UnsignedByte" },
      { "field": "unused2", "type": "UnsignedWord" },
      {
        "field": "returns_to_uid",
        "type": "EntityUID",
        "comment": "entity to return to"
      },
      {
        "field": "unknown1",
        "type": "UnsignedWord",
        "comment": "something when the boomerang can't get to you"
      },
      { "field": "unknown2", "type": "UnsignedByte" }
    ],
    "Excalibur": [{ "field": "in_stone", "type": "Bool" }],
    "Shield": [{ "field": "shake", "type": "Float" }],
    "Bat": [
      { "field": "spawn_x", "type": "Float" },
      { "field": "spawn_y", "type": "Float" }
    ],
    "Terra": [
      {
        "field": "fx_button",
        "type": "EntityPointer",
        "comment": "used in the camp"
      },
      { "field": "x_pos", "type": "Float" },
      { "field": "unknown", "type": "UnsignedWord" },
      { "field": "abuse_speechbubble_timer", "type": "UnsignedWord" }
    ],
    "Ai_func": [
      { "field": "unknown1a", "type": "Flags32", "comment": "flags?" },
      { "field": "unknown1b", "type": "Flags32", "comment": "flags?" },
      { "field": "unknown2a", "type": "Word" },
      { "field": "unknown2b", "type": "Word", "comment": "garbage/padding?" },
      { "field": "unknown3", "type": "Dword", "comment": "garbage/padding?" },
      {
        "field": "unknown4",
        "type": "DataPointer",
        "comment": "array of targets? (uids)"
      },
      { "field": "button_sequence?", "type": "DataPointer" },
      { "field": "self_pointer", "type": "EntityPointer" },
      { "field": "unknown7", "type": "DataPointer" },
      { "field": "target", "type": "EntityPointer" },
      { "field": "unknown9", "type": "DataPointer" },
      { "field": "unknown10", "type": "DataPointer" },
      { "field": "unknown11", "type": "Word" },
      { "field": "unknown11b", "type": "Word" },
      { "field": "timer", "type": "Dword" },
      {
        "field": "ai_state",
        "type": "Byte",
        "comment": "8 = HH agro, flags maybe?"
      },
      { "field": "last_ai_state", "type": "Byte" },
      { "field": "trust", "type": "Byte" },
      { "field": "whipped", "type": "Byte" },
      { "field": "unknown15", "type": "Byte" },
      { "field": "unknown16", "type": "Byte" },
      {
        "field": "walk_pause_timer",
        "type": "Word",
        "comment": "positive: walking, negative: wating/idle"
      },
      { "field": "unknown19", "type": "Word" },
      {
        "field": "unknown20",
        "type": "Word",
        "comment": "distance to target?"
      },
      { "field": "targer_uid", "type": "EntityUID" },
      { "field": "unknown22", "type": "Byte" },
      { "field": "unknown23", "type": "Byte" },
      { "field": "unknown24", "type": "Byte" },
      { "field": "unknown25", "type": "Byte" },
      { "field": "unknown26", "type": "Dword" },
      {
        "field": "unknown27",
        "type": "Map",
        "comment": "added map for now, it's list of 3 pointers"
      }
    ],
    "EggshipCenterJetFlame": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "unknown2", "type": "Qword" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "smoke_on", "type": "Bool" }
    ],
    "MiniGameShipOffset": [
      { "field": "offset_x", "type": "Float" },
      {
        "field": "offset_y",
        "type": "Float",
        "comment": " = y but also special_offsety"
      },
      { "field": "unknown2", "type": "Float" },
      {
        "field": "normal_y_offset",
        "type": "Float",
        "comment": "is added to offset_y"
      }
    ],
    "Button": [
      {
        "field": "button_sprite",
        "type": "Flags8",
        "flags": {
          "1": "pad: A, key: Z",
          "2": "pad: X, key: X",
          "3": "pad: B, key: C",
          "4": "pad: Y, key: D",
          "5": "pad: LB, key: L Shift",
          "6": "pad: RB, key: A",
          "7": "pad: menu?, key: (none)",
          "8": "pad: copy?, key: Tab"
        },
        "comment": "changes the button shown, setting more then one defaults to the first"
      },
      { "field": "unknown2", "type": "Byte" },
      { "field": "padding1", "type": "Word" },
      { "field": "visibility", "type": "Float" },
      {
        "field": "is_visible2?",
        "type": "Bool",
        "comment": "it's false for selldialog used in shops"
      },
      {
        "field": "player_trigger?",
        "type": "Bool",
        "comment": "it's set true even if player does not see the button, like the drill or COG door"
      },
      { "field": "unknown4", "type": "Bool" },
      { "field": "padding2", "type": "Byte" },
      {
        "field": "player1_on_screen_timer?",
        "type": "Dword",
        "comment": "a weird one, does not start at 0, sometimes accessed as byte, similar to the jetpack fly_counter, that is not per button, also some buttons use it, some not"
      },
      {
        "field": "player2_on_screen_timer?",
        "type": "Dword",
        "comment": "they all are not even per player, as they run in sync"
      },
      {
        "field": "player3_on_screen_timer?",
        "type": "Dword",
        "comment": "timers sometimes stay, sometimes are set back to -1"
      },
      { "field": "player4_on_screen_timer?", "type": "Dword" },
      {
        "field": "seen",
        "type": "State8",
        "states": {
          "-1": "hasn't been seen",
          "0": "last seen by player 1",
          "1": "last seen by player 2",
          "2": "last seen by player 3",
          "3": "last seen by player 4"
        }
      },
      { "field": "unknown11", "type": "Byte" },
      { "field": "padding3", "type": "Word" },
      {
        "field": "unknown12",
        "type": "CodePointer",
        "comment": "used in basecamp with buttons attached to BG_TUTORIAL_SING"
      }
    ],
    "SoundInfoPointer": [
      { "field": "unknown1", "type": "Qword", "comment": "used to start/construct the sound in fmod" },
      { "field": "sound_id", "type": "UnsignedDword" },
      { "field": "unknown2", "type": "Dword", "comment": "padding probably" },
      { "field": "sound_name", "type": "ConstCharPointer", "comment": "std::string" },
      { "field": "unknown3", "type": "Qword" },
      { "field": "length", "type": "Qword", "comment": "std::string.length()" },
      { "field": "capacity", "type": "Qword", "comment": "std::string.capacity()" }
    ],
    "FxTornJournalPage": [
      { "field": "page_number", "type": "Dword", "comment": "only in tutorial" }
    ],
    "FxMainExitDoor": [
      { "field": "emitted_light", "type": "IlluminationPointer" },
      {
        "field": "timer",
        "type": "Dword",
        "comment": "when breaking open in tutorial"
      },
      { "field": "unknown", "type": "Float", "comment": "increments by 0.15" }
    ],
    "Birdies": [
      {
        "field": "unknown",
        "type": "UnsignedByte",
        "comment": "animation_frame offset? , 0 for monsters, 160 for character"
      }
    ],
    "Explosion": [{ "field": "emitted_light", "type": "IlluminationPointer" }],
    "FxOuroboroOccluder": [
      {
        "field": "unknown",
        "type": "Float",
        "comment": "counts from 0.0 to 10.0"
      }
    ],
    "FxOuroboroDragonPart": [
      { "field": "unknown1", "type": "Float", "comment": "angle?" },
      { "field": "unknown2", "type": "Float", "comment": "fade in/fade out?" },
      { "field": "unknown3", "type": "Float" },
      {
        "field": "speed?",
        "type": "Float",
        "comment": "increment value for unknown1"
      },
      {
        "field": "timer?",
        "type": "Word",
        "comment": "affects the speed and fade away"
      },
      { "field": "padding1?", "type": "Word" },
      { "field": "padding2?", "type": "Dword" },
      { "field": "particle", "type": "ParticleEmitterInfoPointer" }
    ],
    "Rubble": [
      {
        "field": "unknown1",
        "type": "UnsignedByte",
        "comment": "is different depending of the block source"
      },
      { "field": "unknown2", "type": "Byte" },
      { "field": "unknown3", "type": "Word" },
      { "field": "unknown4", "type": "Dword" },
      { "field": "unknown5", "type": "Float" },
      {
        "field": "unknown6",
        "type": "Bool",
        "comment": "shrinks it down to nothing?"
      }
    ],
    "FxCompass": [
      { "field": "unknown1", "type": "Float", "comment": "moving distance" },
      {
        "field": "sine_angle",
        "type": "Float",
        "comment": "counts form 0 to 2*pi, responsible for moving back and forth"
      },
      { "field": "visibility", "type": "Float" },
      { "field": "is_active", "type": "Bool", "comment": "player has compass" }
    ],
    "Portal": [
      { "field": "UnknownPointerGroup", "type": "UnknownPointerGroup" },
      { "field": "unknown4", "type": "DataPointer" },
      { "field": "unknown5", "type": "DataPointer" },
      { "field": "unknown6", "type": "DataPointer" },
      { "field": "emitted_light", "type": "IlluminationPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "unknown7", "type": "Float" },
      { "field": "transition_timer", "type": "UnsignedByte" },
      { "field": "level", "type": "UnsignedByte" },
      { "field": "world", "type": "UnsignedByte" },
      { "field": "theme", "type": "UnsignedByte" },
      { "field": "timer", "type": "Dword" }
    ],
    "SleepBubble": [{ "field": "show_hide_timer", "type": "UnsignedByte" }],
    "Powerup": [
      {
        "vftablefunctions": {
          "93": {
            "name": "v93",
            "params": "size_t&",
            "return": "size_t&",
            "comment": "get powerup id/type?"
          },
          "94": {
            "name": "apply_to_player",
            "params": "PowerupCapable* player",
            "return": ""
          },
          "95": {
            "name": "remove_from_player",
            "params": "PowerupCapable* player",
            "return": ""
          }
        }
      }
    ],
    "MovingIcon": [
      {
        "field": "movement_timer",
        "type": "UnsignedByte",
        "comment": "used to move it up and down"
      }
    ],
    "FxSaleContainer": [
      { "field": "fx_value", "type": "EntityPointer" },
      { "field": "fx_icon", "type": "EntityPointer" },
      { "field": "fx_button", "type": "EntityPointer" },
      {
        "field": "shake_amplitude",
        "type": "Float",
        "comment": "for effect when you don't have enough money"
      },
      {
        "field": "sound_trigger",
        "type": "Bool",
        "comment": "also sound_played, keeps re-triggering from time to time"
      },
      { "field": "pop_in_out_procentage", "type": "UnsignedByte" }
    ],
    "FxPickupEffect": [
      { "field": "spawn_y", "type": "Float" },
      {
        "field": "visibility",
        "type": "Float",
        "comment": "or the disappearing animation progression"
      }
    ],
    "FxShotgunBlast": [
      { "field": "illumination", "type": "IlluminationPointer" }
    ],
    "FxJetpackFlame": [
      { "field": "particle_smoke", "type": "ParticleEmitterInfoPointer" },
      { "field": "particle_flame", "type": "ParticleEmitterInfoPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "illumination", "type": "IlluminationPointer" }
    ],
    "FxPlayerIndicator": [
      { "field": "attached_to", "type": "EntityUID" },
      { "field": "pos_x", "type": "Float" },
      { "field": "pos_y", "type": "Float" },
      { "field": "unknown", "type": "Dword" }
    ],
    "FxSpringtrapRing": [
      { "field": "timer", "type": "Dword" },
      { "field": "padding", "type": "Dword" },
      { "field": "illumination", "type": "IlluminationPointer" }
    ],
    "FxWitchdoctorHint": [{ "field": "unknown", "type": "Map" }],
    "FxNecromancerANKH": [{ "field": "unknown", "type": "Float" }],
    "FxWebbedEffect": [{ "field": "visible", "type": "Bool" }],
    "FxUnderwaterBubble": [
      { "field": "unknown1", "type": "Float" },
      { "field": "bubble_source", "type": "EntityUID" },
      { "field": "direction", "type": "Byte" },
      {
        "field": "pop",
        "type": "Bool",
        "comment": "setting it true makes it disappear/fade away"
      },
      {
        "field": "inverted",
        "type": "Bool",
        "comment": "goes down instead of up"
      }
    ],
    "FxWaterDrop": [
      {
        "field": "inverted",
        "type": "Bool",
        "comment": "floats up instead of drooping down"
      },
      { "field": "unknown1", "type": "Bool" },
      { "field": "unknown2", "type": "Byte" },
      { "field": "unknown3", "type": "Byte" },
      { "field": "unknown4", "type": "Dword" },
      { "field": "droplet_source_uid", "type": "EntityUID" }
    ],
    "FxKinguSliding": [
      { "field": "particle", "type": "ParticleEmitterInfoPointer" }
    ],
    "FxAlienBlast": [{ "field": "unknown", "type": "Byte" }],
    "FxSparkSmall": [
      { "field": "unknown1", "type": "Float" },
      {
        "field": "step",
        "type": "Float",
        "comment": "per frame increment for variable above"
      },
      { "field": "unknown3", "type": "Float" },
      {
        "field": "timer",
        "type": "Byte",
        "comment": "all values gets randomized when timer = 0"
      }
    ],
    "FxTiamatHead": [{ "field": "timer", "type": "Word" }],
    "FxTiamatTorso": [
      { "field": "timer", "type": "Word" },
      { "field": "padding", "type": "Word" },
      {
        "field": "torso_target_size",
        "type": "Float",
        "comment": "slowly increases/decreases to the given value"
      }
    ],
    "FxTiamatTail": [
      {
        "field": "angle_two",
        "type": "Float",
        "comment": "added _two just to not shadow angle in entity"
      },
      { "field": "x_pos", "type": "Float" },
      { "field": "y_pos", "type": "Float" }
    ],
    "FxVatBubble": [{ "field": "max_y", "type": "Float" }],
    "FxHundunNeckPiece": [
      {
        "field": "kill_timer",
        "type": "Word",
        "comment": "short timer after the head is dead"
      }
    ],
    "FxJellyfishStar": [
      { "field": "rotation_angle", "type": "Float" },
      { "field": "radius", "type": "Float" },
      { "field": "speed", "type": "Float" }
    ],
    "FxQuickSand": [{ "field": "unknown", "type": "Float" }],
    "FxSorceressAttack": [
      { "field": "size", "type": "Float" },
      { "field": "unknown2", "type": "Float", "comment": "pulsing related" },
      { "field": "unknown3", "type": "Bool", "comment": "pulsing related" }
    ],
    "FxLamassuAttack": [
      { "field": "attack_angle", "type": "Float" },
      {
        "field": "attack_angle2",
        "type": "Float",
        "comment": "seams to be exactly the same as above"
      },
      { "field": "unknown", "type": "Bool" }
    ],
    "FxFireflyLight": [
      { "field": "illumination", "type": "IlluminationPointer" },
      { "field": "light_timer", "type": "UnsignedByte" },
      { "field": "padding", "type": "Byte" },
      {
        "field": "cooldown_timer",
        "type": "UnsignedWord",
        "comment": "timer between light flashes"
      }
    ],
    "FxEmpress": [{ "field": "sine_angle", "type": "Float" }],
    "FxAnkhRotatingSpark": [
      { "field": "radius", "type": "Float" },
      { "field": "inclination", "type": "Float" },
      {
        "field": "speed",
        "type": "Float",
        "comment": "a weird one, it gets values lower then 1.0, if you set 1.0 or bigger it will stop"
      },
      { "field": "sine_angle?", "type": "Float" },
      { "field": "size", "type": "Float" }
    ],
    "FxAnkhBrokenPiece": [{ "field": "unknown", "type": "Float" }],
    "BGBackLayerDoor": [
      { "field": "illumination", "type": "IlluminationPointer" },
      { "field": "illumination2", "type": "IlluminationPointer" }
    ],
    "BGSurfaceStar": [
      { "field": "blink_timer?", "type": "Dword", "comment": "why negative?" },
      { "field": "relative_x", "type": "Float" },
      { "field": "relative_y", "type": "Float" },
      { "field": "unknown_padding?", "type": "Dword" }
    ],
    "BGRelativeElement": [
      { "field": "relative_x", "type": "Float" },
      { "field": "relative_y", "type": "Float" }
    ],
    "BGSurfaceLayer": [
      { "field": "relative_offset_x", "type": "Float" },
      { "field": "relative_offset_y", "type": "Float" }
    ],
    "BGEggshipRoom": [
      { "field": "sound", "type": "SoundMeta" },
      { "field": "fx_shell", "type": "EntityPointer" },
      { "field": "fx_door", "type": "EntityPointer" },
      { "field": "platform_left", "type": "EntityPointer" },
      { "field": "platform_middle", "type": "EntityPointer" },
      { "field": "platform_right", "type": "EntityPointer" },
      { "field": "player_in", "type": "Bool" }
    ],
    "BGMovingStar": [
      {
        "field": "falling_speed",
        "type": "Float",
        "comment": "can make it rise if you set it to negative"
      }
    ],
    "BGTutorialSign": [{ "field": "is_shown", "type": "Bool" }],
    "ShootingStarSpawner": [{ "field": "timer", "type": "UnsignedWord" }],
    "BGShootingStar": [
      { "field": "x_increment", "type": "Float" },
      { "field": "y_increment", "type": "Float" },
      { "field": "timer", "type": "Word" },
      { "field": "max_timer", "type": "Word" },
      {
        "field": "size",
        "type": "Float",
        "comment": "gets smaller as the timer gets close to the max_timer"
      },
      {
        "field": "light_size?",
        "type": "Float",
        "comment": "if you make it the same as size it starts to flicker, making this bigger increases the size as well"
      }
    ],
    "BGShopEntrence": [{ "field": "on_entering", "type": "Bool" }],
    "BGFloatingDebris": [
      {
        "field": "distance",
        "type": "Float",
        "comment": "distance it travels up and down from spawn position"
      },
      { "field": "speed", "type": "Float" },
      { "field": "sine_angle", "type": "Float" }
    ],
    "BGShopKeeperPrime": [
      { "field": "normal_y", "type": "Float" },
      { "field": "sine_pos", "type": "Float" },
      { "field": "bubbles_timer", "type": "Word" },
      { "field": "bubble_spawn_trigger", "type": "Bool" },
      { "field": "unknown_padding", "type": "Byte" },
      {
        "field": "bubble_spawn_delay",
        "type": "Word",
        "comment": "normally it's just 0, 1 or 2, but you can set it to some value and then when using bubble_spawn_trigger it will count down and then spawn bubbles"
      }
    ],
    "LogicalDoor": [
      { "field": "connected_door_type", "type": "EntityDBID" },
      { "field": "unk2", "type": "Dword", "comment": "always 37?" },
      { "field": "not_hidden", "type": "Bool" },
      {
        "field": "platform_spawned",
        "type": "Bool",
        "comment": "is set true when you bomb the door, no matter what door, can't be reset"
      },
      { "field": "unk5", "type": "Bool" },
      { "field": "unk6", "type": "Bool" }
    ],
    "LogicalStaticSound": [
      { "field": "x_pos?", "type": "Float" },
      { "field": "y_pos?", "type": "Float" }
    ],
    "LogicalLiquidStreamSound": [
      {
        "field": "unknown",
        "type": "Float",
        "comment": "SoundMeta unknown10"
      }
    ],
    "LogicalSound": [{ "field": "sound", "type": "SoundMeta" }],
    "LogicalTrapTrigger": [
      {
        "field": "min_empty_distance",
        "type": "Dword",
        "comment": "used in bigspeartrap when it has to have minimum 2 free spaces to be able to trigger"
      },
      { "field": "trigger_distance", "type": "Dword", "comment": "in blocks" },
      { "field": "vertical", "type": "Bool" },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Word" },
      { "field": "padding3", "type": "Dword" }
    ],
    "JungleTrapTrigger": [
      {
        "field": "counter1?",
        "type": "Dword",
        "comment": "one of those wierd counters that counts all the traps, not only this single one"
      },
      {
        "field": "counter2?",
        "type": "Dword",
        "comment": "also there are 3 of them?"
      },
      { "field": "counter3?", "type": "Dword" }
    ],
    "WetEffect": [
      { "field": "particle", "type": "ParticleEmitterInfoPointer" }
    ],
    "OnFireEffect": [
      { "field": "particle_smoke", "type": "ParticleEmitterInfoPointer" },
      { "field": "particle_flame", "type": "ParticleEmitterInfoPointer" },
      { "field": "illumination", "type": "IlluminationPointer" },
      { "field": "unknown", "type": "Bool" }
    ],
    "PoisonedEffect": [
      { "field": "particle_burst", "type": "ParticleEmitterInfoPointer" },
      { "field": "particle_base", "type": "ParticleEmitterInfoPointer" },
      { "field": "burst_timer", "type": "UnsignedWord" },
      {
        "field": "burst_active",
        "type": "Bool",
        "comment": "If forced to false, it will not play the sound or spawn burst particles"
      }
    ],
    "CursedEffect": [
      { "field": "particle", "type": "ParticleEmitterInfoPointer" },
      { "field": "sound", "type": "SoundMeta" }
    ],
    "OuroboroCameraAnchor": [
      { "field": "target_x", "type": "Float" },
      { "field": "target_y", "type": "Float" },
      { "field": "velocity_x", "type": "Float" },
      { "field": "velocity_y", "type": "Float" }
    ],
    "OuroboroCameraZoomin": [
      {
        "field": "zoomin_level",
        "type": "Float",
        "comment": "can be set to negaative, seams to trigger the warp at some value"
      }
    ],
    "CinematicAnchor": [
      { "field": "blackbar_top", "type": "EntityPointer" },
      { "field": "blackbar_bottom", "type": "EntityPointer" },
      { "field": "roll_in", "type": "Float", "comment": "0 to 1.0" }
    ],
    "BurningRopeEffect": [
      { "field": "illumination", "type": "IlluminationPointer" },
      { "field": "sound", "type": "SoundMeta" }
    ],
    "DustWallApep": [
      { "field": "particle", "type": "ParticleEmitterInfoPointer" }
    ],
    "CameraFlash": [
      { "field": "illumination1", "type": "IlluminationPointer" },
      { "field": "illumination2", "type": "IlluminationPointer" },
      { "field": "unknown", "type": "Qword" },
      { "field": "timer", "type": "UnsignedByte" }
    ],
    "RoomLight": [{ "field": "illumination", "type": "IlluminationPointer" }],
    "LimbAnchor": [
      { "field": "x_pos", "type": "Float" },
      { "field": "y_pos", "type": "Float" },
      { "field": "hand/feet_x_offset", "type": "Float" },
      { "field": "hand/feet_y_offset", "type": "Float" },
      { "field": "abs_x", "type": "Float" },
      { "field": "abs_y", "type": "Float" },
      { "field": "move_origin_x", "type": "Float" },
      { "field": "move_origin_y", "type": "Float" },
      { "field": "move_destination_x", "type": "Float" },
      { "field": "move_destination_y", "type": "Float" },
      { "field": "unk11", "type": "Float" },
      { "field": "unk12", "type": "Float" },
      { "field": "unk13", "type": "Float" },
	  { "field": "elapsed_move_time", "type": "UnsignedByte" },
      { "field": "move_timer", "type": "UnsignedByte" },
      { "field": "flip_vertical", "type": "Bool" }
    ],
    "LogicalConveyorbeltSound": [
      { "field": "unknown", "type": "UnknownPointerGroup", "comment": "why?" }
    ],
    "LogicalAnchovyFlock": [
      {
        "field": "current_speed",
        "type": "Float",
        "comment": "increases until max_speed reached"
      },
      { "field": "max_speed", "type": "Float" },
      { "field": "timer", "type": "UnsignedWord" }
    ],
    "MummyFliesSound": [
      { "field": "mummy_uid", "type": "EntityUID" },
      {
        "field": "flies?",
        "type": "UnsignedByte",
        "comment": "numbers of flies spawned? need to take another look, very cool"
      },
      { "field": "padding1", "type": "Byte" },
      { "field": "padding2", "type": "Word" },
      {
        "field": "unknown",
        "type": "UnknownPointerGroup",
        "comment": "why? because of this this entity falls into the larger bucket"
      }
    ],
    "QuickSandSound": [
      { "field": "counter?", "type": "Dword", "comment": "probably unsigned?" }
    ],
    "IceSlidingSound": [
      { "field": "counter?", "type": "Dword", "comment": "probably unsigned?" }
    ],
    "FrostBreathEffect": [{ "field": "timer", "type": "UnsignedWord" }],
    "BoulderSpawner": [
      {
        "field": "timer",
        "type": "Dword",
        "comment": "can be set negative for longer time period, spawns boulder at 150, setting it higher with count to overflow"
      },
      { "field": "padding?", "type": "Dword" },
      { "field": "sound", "type": "SoundMeta" }
    ],
    "PipeTravelerSound": [
      {
        "field": "sound_speed?",
        "type": "Float",
        "comment": "SoundMeta -> VALUE"
      },
      { "field": "counter?", "type": "Dword", "comment": "probably unsigned?" },
      {
        "field": "unknown1",
        "type": "Byte",
        "comment": "enter/exit sound time duration?"
      },
      {
        "field": "unknown2",
        "type": "Byte",
        "comment": "enter/exit sound time duration?"
      },
      { "field": "enter_exit", "type": "Bool" }
    ],
    "LogicalDrain": [
      {
        "field": "timer",
        "type": "UnsignedByte",
        "comment": "little delay between pulling blob of liquid thru"
      }
    ],
    "LogicalRegeneratingBlock": [{ "field": "timer", "type": "UnsignedByte" }],
    "SplashBubbleGenerator": [{ "field": "timer", "type": "UnsignedByte" }],
    "EggplantThrower": [
      {
        "field": "unknown",
        "type": "Bool",
        "comment": "allow throw again when it's false? hard to test"
      }
    ],
    "LogicalMiniGame": [
      {
        "field": "timer",
        "type": "UnsignedWord",
        "comment": "delay between spwning ufo"
      }
    ],
    "DMSpawning": [
      { "field": "spawn_x", "type": "Float" },
      { "field": "spawn_y", "type": "Float" },
      { "field": "sine_pos", "type": "Float" },
      { "field": "timer", "type": "UnsignedByte" }
    ],
    "DMAlienBlast": [
      { "field": "owner_uid", "type": "EntityUID" },
      { "field": "unknown", "type": "Dword" },
      { "field": "fx_internal_reticule", "type": "EntityPointer" },
      { "field": "fx_external_reticule", "type": "EntityPointer" },
      { "field": "sound", "type": "SoundMeta" },
      { "field": "timer", "type": "UnsignedByte" }
    ],
    "CrossBeam": [
      { "field": "attached_to_side_uid", "type": "EntityUID" },
      { "field": "attached_to_top_uid", "type": "EntityUID" }
    ],
    "PalaceSign": [
      { "field": "sound", "type": "SoundMeta" },
      {
        "field": "illumination",
        "type": "IlluminationPointer",
        "comment": "illumination1/2 used only in dark level, no pointer in normal level"
      },
      { "field": "arrow_illumination", "type": "IlluminationPointer" },
      { "field": "arrow_change_timer", "type": "UnsignedByte" }
    ],
    "DecoRegeneratingBlock": [
      { "field": "unknown1", "type": "Byte" },
      {
        "field": "unknown2",
        "type": "UnsignedByte",
        "comment": "timer after self_destruct is triggered, modifies the size depending of the unknown1"
      },
      {
        "field": "self_destruct?",
        "type": "Bool",
        "comment": "have reverse effect of spawning in after the broke is blocken, unsued in the game?"
      }
    ],
    "DestructibleBG": [
      { "field": "attached_to_1?", "type": "EntityUID" },
      { "field": "attached_to_2?", "type": "EntityUID" },
      { "field": "unknown1", "type": "Bool" },
      { "field": "unknown2", "type": "Bool" }
    ],
    "EggShipDoorS": [{ "field": "entered", "type": "Bool" }],
    "PrizeDispenser": [
      {
        "field": "itemid_1",
        "type": "UnsignedByte",
        "comment": "ids (0 - 24) for the table with items, all set on spawn"
      },
      { "field": "itemid_2", "type": "UnsignedByte" },
      { "field": "itemid_3", "type": "UnsignedByte" },
      { "field": "itemid_4", "type": "UnsignedByte" },
      { "field": "itemid_5", "type": "UnsignedByte" },
      { "field": "itemid_6", "type": "UnsignedByte", "comment": "unused" },
      { "field": "prizes_spawned", "type": "UnsignedByte" },
      { "field": "padding", "type": "Byte" }
    ],
    "JungleSpearTrap": [],
    "MegaJellyfishEye": [{ "field": "timer", "type": "UnsignedByte" }],
    "Bow": [
      {
        "vftablefunctions": {
          "93": {
            "name": "get_arrow_special_offset",
            "params": "",
            "return": "float"
          }
        }
      }
    ],
    "Purchasable": [
      {
        "vftablefunctions": {
          "93": {
            "name": "buy",
            "params": "",
            "return": ""
          }
        }
      }
    ],
    "DummyPurchasableEntity": [
      {
        "vftablefunctions": {
          "94": {
            "name": "switch_entities",
            "params": "void*",
            "return": "Entity*",
            "comment": "switches the purchasable cape with normal one, parameter is particle?? maybe?"
          }
        }
      }
    ],
    "Present": [{ "field": "inside", "type": "EntityDBID" }],
    "StdList": [
      { "field": "back", "type": "StdListIteratorPointer" },
      { "field": "front", "type": "StdListIteratorPointer" }
    ],
    "StdListIteratorPointer": [
      {
        "field": "prev",
        "type": "DataPointer",
        "comment": "points to the previous element in list (StrListIteratorPointer)"
      },
      {
        "field": "next",
        "type": "DataPointer",
        "comment": "points to the next element in list (StrListIteratorPointer)"
      },
      { "field": "value", "type": "Dword", "comment": "type can varray" }
    ],
    "LiquidPhysicsEngine": [
      { "field": "pause_physics", "type": "Bool" },
      { "field": "padding1?", "type": "Byte" },
      { "field": "padding2?", "type": "Byte" },
      { "field": "padding3?", "type": "Byte" },
      { "field": "physics_tick_timer?", "type": "Dword" },
      { "field": "unknown1", "type": "Dword" },
      { "field": "unknown2", "type": "Dword" },
      { "field": "unknown3", "type": "Byte" },
      { "field": "unknown4", "type": "Byte" },
      { "field": "unknown5", "type": "Byte" },
      { "field": "unknown6", "type": "Byte" },
      { "field": "unknown_7", "type": "Byte" },
      { "field": "unknown8", "type": "Byte" },
      { "field": "unknown9", "type": "Byte" },
      { "field": "unknown10", "type": "Byte" },
      { "field": "unknown11", "type": "UnsignedDword" },
      { "field": "unknown12", "type": "Float" },
      { "field": "blob_size", "type": "Float" },
      { "field": "weight", "type": "Float" },
      { "field": "unknown15", "type": "Float" },
      { "field": "entity_count", "type": "UnsignedDword" },
      { "field": "allocated_size", "type": "UnsignedDword" },
      {
        "field": "unk23",
        "type": "UnsignedDword",
        "comment": "padding probably"
      },
      { "field": "unk1", "type": "StdList" },
      {
        "field": "resize_value",
        "type": "UnsignedDword",
        "comment": "used to resize the arrays"
      },
      {
        "field": "unk3b",
        "type": "UnsignedDword",
        "comment": "padding probably"
      },
      { "field": "liquid_ids", "type": "StdList" },
      {
        "field": "unknown44",
        "type": "StdList",
        "comment": "all of them are -1"
      },
      {
        "field": "list",
        "type": "SomeUnknownArray",
        "comment": "array of all iterators of liquid_ids?"
      },
      {
        "field": "liquid_flags_array",
        "type": "SomeUnknownArray",
        "comment": "uint32_t*"
      },
      {
        "field": "entity_coordinates",
        "type": "SomeUnknownArray",
        "comment": "std::pair<float, float>*"
      },
      {
        "field": "entity_velocities",
        "type": "SomeUnknownArray",
        "comment": "std::pair<float, float>*"
      },
      {
        "field": "unknown52",
        "type": "DataPointer",
        "comment": "std::pair<float, float>* ? not sure"
      },
      {
        "field": "unknown53",
        "type": "DataPointer",
        "comment": "std::pair<float, float>*"
      },
      { "field": "unknown54", "type": "Qword" },
      {
        "field": "unknown55",
        "type": "DataPointer",
        "comment": "std::pair<float, float>*"
      },
      { "field": "unknown56", "type": "Qword" },
      { "field": "unknown57", "type": "Qword" },
      { "field": "unknown58", "type": "Qword" },
      { "field": "unknown59", "type": "Qword" },
      { "field": "unknown60", "type": "DataPointer" },
      {
        "field": "unknown61",
        "type": "SomeUnknownArray",
        "comment": "array of some pointers, amongst them is MysteryLiquidPointer2? maybe?"
      },
      { "field": "unknown63a", "type": "Dword" },
      { "field": "unknown63b", "type": "Dword" },
      { "field": "unknown64", "type": "SomeUnknownArray", "comment": "array?" },
      { "field": "unknown66", "type": "SomeUnknownArray", "comment": "array?" },
      { "field": "unknown68", "type": "SomeUnknownArray", "comment": "array?" },
      { "field": "unknown70", "type": "SomeUnknownArray", "comment": "array?" },
      { "field": "unknown72", "type": "DataPointer" },
      { "field": "unknown73", "type": "DataPointer" },
      { "field": "entity_count_again?", "type": "Dword" },
      { "field": "allocated_size_again?", "type": "Dword" },
      { "field": "unknown75", "type": "DataPointer" },
      { "field": "unknown76", "type": "DataPointer" },
      {
        "field": "unknown77a",
        "type": "Dword",
        "comment": "number of liquid particles?"
      },
      {
        "field": "unknown77b",
        "type": "Dword",
        "comment": "allocated size related to above one?"
      },
      { "field": "unknown78", "type": "DataPointer" },
      { "field": "unknown79", "type": "DataPointer" },
      { "field": "unknown80", "type": "Dword" },
      { "field": "unknown80", "type": "Dword" },
      { "field": "unknown81", "type": "DataPointer" },
      { "field": "unknown82", "type": "Qword" },
      { "field": "unknown83", "type": "Qword" },
      { "field": "unknown84", "type": "DataPointer" },
      { "field": "unknown85", "type": "Qword" },
      { "field": "unknown86", "type": "Qword" },
      { "field": "unknown87", "type": "DataPointer" },
      { "field": "unknown88", "type": "SomeUnknownArray", "comment": "array?" },
      {
        "field": "unknown90",
        "type": "SomeUnknownArray",
        "comment": "array of id's?"
      },
      { "field": "unknown92", "type": "Qword" },
      { "field": "unknown93a", "type": "Byte" },
      { "field": "unknown93b", "type": "Byte", "comment": "padding probably" },
      { "field": "unknown93c", "type": "Byte", "comment": "padding probably" },
      { "field": "unknown93d", "type": "Byte", "comment": "padding probably" },
      { "field": "unknown93e", "type": "Dword", "comment": "padding probably" },
      { "field": "unknown94", "type": "Qword" },
      {
        "field": "unknown95",
        "type": "Float",
        "comment": "LiquidParam->unknown3"
      },
      {
        "field": "unknown95e",
        "type": "Float",
        "comment": "LiquidParam->cohesion?, surface tension? setting it to -1 makes the blobs repel each other"
      },
      {
        "field": "current_gavity",
        "type": "Float",
        "comment": "LiquidParam->gravity"
      },
      {
        "field": "unknown96",
        "type": "Float",
        "comment": "LiquidParam->unknown6"
      },
      {
        "field": "unknown97a",
        "type": "Float",
        "comment": "LiquidParam->unknown7"
      },
      {
        "field": "unknown97b",
        "type": "Float",
        "comment": "LiquidParam->agitation"
      },
      {
        "field": "unknown98a",
        "type": "Float",
        "comment": "LiquidParam->unknown9"
      },
      {
        "field": "unknown98b",
        "type": "Float",
        "comment": "LiquidParam->unknown10"
      },
      {
        "field": "unknown99a",
        "type": "Float",
        "comment": "LiquidParam->unknown11"
      },
      {
        "field": "unknown99b",
        "type": "Float",
        "comment": "LiquidParam->unknown12"
      },
      {
        "field": "unknown100a",
        "type": "Float",
        "comment": "LiquidParam->unknown13"
      },
      {
        "field": "unknown100b",
        "type": "Float",
        "comment": "LiquidParam->unknown14"
      },
      {
        "field": "unknown101a",
        "type": "Float",
        "comment": "LiquidParam->unknown15"
      },
      {
        "field": "unknown101b",
        "type": "Float",
        "comment": "LiquidParam->unknown16"
      },
      {
        "field": "unknown102a",
        "type": "Float",
        "comment": "LiquidParam->unknown17"
      },
      {
        "field": "unknown102b",
        "type": "Float",
        "comment": "LiquidParam->unknown18"
      },
      {
        "field": "unknown103a",
        "type": "Float",
        "comment": "LiquidParam->unknown19"
      },
      {
        "field": "unknown103b",
        "type": "Dword",
        "comment": "LiquidParam->unknown20"
      },
      {
        "field": "unknown104a",
        "type": "Float",
        "comment": "LiquidParam->unknown21"
      },
      {
        "field": "unknown104b",
        "type": "Dword",
        "comment": "LiquidParam->unknown22"
      },
      {
        "field": "unknown105a",
        "type": "Float",
        "comment": "LiquidParam->unknown23"
      },
      {
        "field": "unknown105b",
        "type": "Dword",
        "comment": "LiquidParam->unknown24"
      },
      { "field": "unknown106", "type": "DataPointer" },
      { "field": "unknown107", "type": "DataPointer" },
      { "field": "unknown108", "type": "Qword" },
      { "field": "unknown109", "type": "Qword" }
    ],
    "MysteryLiquidPointer1": [
      {
        "field": "unknown1",
        "type": "DataPointer",
        "comment": "some sort of array?"
      },
      {
        "field": "unknown2",
        "type": "Dword",
        "comment": "related to the level size?"
      },
      { "field": "unknown3", "type": "Dword" },
      { "field": "unknown4", "type": "DataPointer" },
      { "field": "unknown5", "type": "DataPointer" },
      { "field": "unknown6", "type": "DataPointer" },
      { "field": "unknown7", "type": "DataPointer" },
      { "field": "unknown8", "type": "DataPointer" },
      {
        "field": "unknown9",
        "type": "DataPointer",
        "comment": "array of entities? removed ones?"
      },
      { "field": "unknown10", "type": "DataPointer", "comment": "map?" },
      { "field": "unknown11", "type": "Qword" }
    ],
    "MysteryLiquidPointer2": [
      { "field": "last_spawn_liquid", "type": "EntityPointer" },
      { "field": "unknown2", "type": "Qword", "comment": "counter? offset?" }
    ],
    "SomeUnknownArray": [
      { "field": "array_pointer", "type": "DataPointer" },
      { "field": "unknown1", "type": "Dword", "comment": "resizing related" },
      { "field": "padding?", "type": "Dword" }
    ],
    "XY": [
      { "field": "x", "type": "Float" },
      { "field": "y", "type": "Float" }
    ]
  }
}

